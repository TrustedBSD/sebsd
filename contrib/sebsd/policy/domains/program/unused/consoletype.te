#DESC consoletype - determine the type of a console device
#
# Author:  Russell Coker <russell@coker.com.au>
# X-Debian-Packages: 
#

#################################
#
# Rules for the consoletype_t domain.
#
# consoletype_t is the domain for the ifconfig program.
# consoletype_exec_t is the type of the corresponding program.
#
type consoletype_t, domain;
type consoletype_exec_t, file_type, sysadmfile, exec_type;

role system_r types consoletype_t;

uses_shlib(consoletype_t)
general_domain_access(consoletype_t)

domain_auto_trans(initrc_t, consoletype_exec_t, consoletype_t)

allow consoletype_t tty_device_t:chr_file { getattr ioctl write };
allow consoletype_t initrc_devpts_t:chr_file { read write getattr ioctl };

ifdef(`xdm.te', `
domain_auto_trans(xdm_t, consoletype_exec_t, consoletype_t)
allow consoletype_t xdm_tmp_t:file { read write };
')

allow consoletype_t { kernel_t init_t initrc_t privfd sysadm_t }:fd use;
allow consoletype_t admin_tty_type:chr_file rw_file_perms;
ifdef(`hotplug.te', `
domain_auto_trans(hotplug_t, consoletype_exec_t, consoletype_t)
')

# Use capabilities.
allow consoletype_t self:capability sys_admin;

allow consoletype_t console_device_t:chr_file { getattr ioctl read write };
allow consoletype_t initrc_t:fifo_file write;
allow consoletype_t tty_device_t:chr_file read;
allow consoletype_t nfs_t:file { write };
allow consoletype_t sysadm_t:fifo_file rw_file_perms;

ifdef(`lpd.te', `
allow consoletype_t printconf_t:file { getattr read };
')

ifdef(`pam.te', `
allow consoletype_t pam_var_run_t:file { getattr read };
')
