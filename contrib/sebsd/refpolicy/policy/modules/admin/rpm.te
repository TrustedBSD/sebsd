
policy_module(rpm,1.3.0)

########################################
#
# Declarations
#

type rpm_t;
type rpm_exec_t;
init_system_domain(rpm_t,rpm_exec_t)
domain_obj_id_change_exemption(rpm_t)
domain_role_change_exemption(rpm_t)
domain_system_change_exemption(rpm_t)
domain_interactive_fd(rpm_t)
role system_r types rpm_t;

type rpm_file_t;
files_type(rpm_file_t)

type rpm_tmp_t;
files_tmp_file(rpm_tmp_t)

type rpm_tmpfs_t;
files_tmpfs_file(rpm_tmpfs_t)

type rpm_log_t;
logging_log_file(rpm_log_t)

type rpm_var_lib_t;
files_type(rpm_var_lib_t)
typealias rpm_var_lib_t alias var_lib_rpm_t;

type rpm_script_t;
type rpm_script_exec_t;
domain_obj_id_change_exemption(rpm_script_t)
domain_system_change_exemption(rpm_script_t)
corecmd_shell_entry_type(rpm_script_t)
domain_type(rpm_script_t)
domain_entry_file(rpm_t,rpm_script_exec_t)
domain_interactive_fd(rpm_script_t)
role system_r types rpm_script_t;

type rpm_script_tmp_t;
files_tmp_file(rpm_script_tmp_t)

type rpm_script_tmpfs_t;
files_tmpfs_file(rpm_script_tmpfs_t)

########################################
#
# rpm Local policy
#

allow rpm_t self:capability { chown dac_override fowner fsetid setgid setuid sys_chroot sys_tty_config mknod };
allow rpm_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
allow rpm_t self:process { getattr setexec setfscreate setrlimit };
allow rpm_t self:fd use;
allow rpm_t self:fifo_file rw_file_perms;
allow rpm_t self:unix_dgram_socket create_socket_perms;
allow rpm_t self:unix_stream_socket rw_stream_socket_perms;
allow rpm_t self:unix_dgram_socket sendto;
allow rpm_t self:unix_stream_socket connectto;
allow rpm_t self:udp_socket { connect };
allow rpm_t self:udp_socket create_socket_perms;
allow rpm_t self:tcp_socket create_stream_socket_perms;
allow rpm_t self:shm create_shm_perms;
allow rpm_t self:sem create_sem_perms;
allow rpm_t self:msgq create_msgq_perms;
allow rpm_t self:msg { send receive };
allow rpm_t self:dir search;
allow rpm_t self:file rw_file_perms;;

allow rpm_t rpm_tmp_t:dir create_dir_perms;
allow rpm_t rpm_tmp_t:file create_file_perms;
files_tmp_filetrans(rpm_t, rpm_tmp_t, { file dir })

allow rpm_t rpm_tmpfs_t:dir create_dir_perms;
allow rpm_t rpm_tmpfs_t:file create_file_perms;
allow rpm_t rpm_tmpfs_t:lnk_file create_file_perms;
allow rpm_t rpm_tmpfs_t:sock_file create_file_perms;
allow rpm_t rpm_tmpfs_t:fifo_file create_file_perms;
fs_tmpfs_filetrans(rpm_t,rpm_tmpfs_t,{ dir file lnk_file sock_file fifo_file })

# Access /var/lib/rpm files
allow rpm_t rpm_var_lib_t:file create_file_perms;
allow rpm_t rpm_var_lib_t:dir rw_dir_perms;
files_var_lib_filetrans(rpm_t,rpm_var_lib_t,dir)

kernel_read_system_state(rpm_t)
kernel_read_kernel_sysctls(rpm_t)

corenet_tcp_sendrecv_all_if(rpm_t)
corenet_raw_sendrecv_all_if(rpm_t)
corenet_udp_sendrecv_all_if(rpm_t)
corenet_tcp_sendrecv_all_nodes(rpm_t)
corenet_raw_sendrecv_all_nodes(rpm_t)
corenet_udp_sendrecv_all_nodes(rpm_t)
corenet_tcp_sendrecv_all_ports(rpm_t)
corenet_udp_sendrecv_all_ports(rpm_t)
corenet_non_ipsec_sendrecv(rpm_t)
corenet_tcp_bind_all_nodes(rpm_t)
corenet_udp_bind_all_nodes(rpm_t)
corenet_tcp_connect_all_ports(rpm_t)

dev_list_sysfs(rpm_t)
dev_list_usbfs(rpm_t)
dev_read_urand(rpm_t)
#devices_manage_all_device_types(rpm_t)

fs_manage_nfs_dirs(rpm_t)
fs_manage_nfs_files(rpm_t)
fs_manage_nfs_symlinks(rpm_t)
fs_getattr_all_fs(rpm_t)
fs_search_auto_mountpoints(rpm_t)

mls_file_read_up(rpm_t)
mls_file_write_down(rpm_t)
mls_file_upgrade(rpm_t)

selinux_get_fs_mount(rpm_t)
selinux_validate_context(rpm_t)
selinux_compute_access_vector(rpm_t)
selinux_compute_create_context(rpm_t)
selinux_compute_relabel_context(rpm_t)
selinux_compute_user_contexts(rpm_t)

storage_raw_write_fixed_disk(rpm_t)
# for installing kernel packages
storage_raw_read_fixed_disk(rpm_t)

term_list_ptys(rpm_t)

auth_relabel_all_files_except_shadow(rpm_t)
auth_manage_all_files_except_shadow(rpm_t)
auth_dontaudit_read_shadow(rpm_t)

corecmd_exec_bin(rpm_t)
corecmd_exec_sbin(rpm_t)
# transition to rpm script:
rpm_domtrans_script(rpm_t)

domain_exec_all_entry_files(rpm_t)
domain_read_all_domains_state(rpm_t)
domain_getattr_all_domains(rpm_t)
domain_dontaudit_ptrace_all_domains(rpm_t)
domain_use_interactive_fds(rpm_t)
domain_dontaudit_getattr_all_pipes(rpm_t)
domain_dontaudit_getattr_all_tcp_sockets(rpm_t)
domain_dontaudit_getattr_all_udp_sockets(rpm_t)
domain_dontaudit_getattr_all_packet_sockets(rpm_t)
domain_dontaudit_getattr_all_raw_sockets(rpm_t)
domain_dontaudit_getattr_all_stream_sockets(rpm_t)
domain_dontaudit_getattr_all_dgram_sockets(rpm_t)

files_exec_etc_files(rpm_t)

init_domtrans_script(rpm_t)

libs_use_ld_so(rpm_t)
libs_use_shared_libs(rpm_t)
libs_exec_ld_so(rpm_t)
libs_exec_lib_files(rpm_t)
libs_domtrans_ldconfig(rpm_t)

logging_send_syslog_msg(rpm_t)

# allow compiling and loading new policy
seutil_manage_src_policy(rpm_t)
seutil_manage_bin_policy(rpm_t)

sysnet_read_config(rpm_t)

userdom_use_unpriv_users_fds(rpm_t)

ifdef(`distro_redhat',`
	unconfined_domain(rpm_t)
')

ifdef(`targeted_policy',`
	unconfined_domain(rpm_t)
',`
	# cjp: these are here to stop type_transition
	# conflicts since rpm_t is an alias of
	# unconfined in the targeted policy
	allow rpm_t rpm_log_t:file create_file_perms;
	logging_log_filetrans(rpm_t,rpm_log_t,file)
')

optional_policy(`cron',`
	cron_system_entry(rpm_t,rpm_exec_t)
')

optional_policy(`mount',`
	mount_send_nfs_client_request(rpm_t)
')

optional_policy(`nis',`
	nis_use_ypbind(rpm_t)
')

ifdef(`TODO',`
# read/write/create any files in the system
dontaudit rpm_t domain:{ socket unix_dgram_socket udp_socket unix_stream_socket tcp_socket fifo_file rawip_socket packet_socket } getattr;
allow rpm_t ttyfile:chr_file unlink;

# needs rw permission to the directory for an rpm package that includes a mount
# point
allow rpm_t fs_type:dir { setattr rw_dir_perms };

allow rpm_t mount_t:tcp_socket write;

allow rpm_t rpc_pipefs_t:dir search;

optional_policy(`gnome-pty-helper',`
allow rpm_t sysadm_gph_t:fd use;
')
') dnl endif TODO

########################################
#
# rpm-script Local policy
#

allow rpm_script_t self:capability { chown dac_override dac_read_search fowner fsetid setgid setuid ipc_lock sys_chroot sys_nice mknod kill };
allow rpm_script_t self:process ~{ ptrace setcurrent setexec setfscreate setrlimit execmem execstack execheap };
allow rpm_script_t self:fd use;
allow rpm_script_t self:fifo_file rw_file_perms;
allow rpm_script_t self:unix_dgram_socket create_socket_perms;
allow rpm_script_t self:unix_stream_socket rw_stream_socket_perms;
allow rpm_script_t self:unix_dgram_socket sendto;
allow rpm_script_t self:unix_stream_socket connectto;
allow rpm_script_t self:shm create_shm_perms;
allow rpm_script_t self:sem create_sem_perms;
allow rpm_script_t self:msgq create_msgq_perms;
allow rpm_script_t self:msg { send receive };

allow rpm_script_t rpm_tmp_t:file r_file_perms;

allow rpm_script_t rpm_script_tmp_t:dir mounton;
allow rpm_script_t rpm_script_tmp_t:dir create_dir_perms;
allow rpm_script_t rpm_script_tmp_t:file create_file_perms;
files_tmp_filetrans(rpm_script_t, rpm_script_tmp_t, { file dir })

allow rpm_script_t rpm_script_tmpfs_t:dir create_dir_perms;
allow rpm_script_t rpm_script_tmpfs_t:file create_file_perms;
allow rpm_script_t rpm_script_tmpfs_t:lnk_file create_lnk_perms;
allow rpm_script_t rpm_script_tmpfs_t:sock_file create_file_perms;
allow rpm_script_t rpm_script_tmpfs_t:fifo_file create_file_perms;
fs_tmpfs_filetrans(rpm_script_t,rpm_script_tmpfs_t,{ dir file lnk_file sock_file fifo_file })

allow rpm_t rpm_script_t:fd use;
allow rpm_script_t rpm_t:fd use;
allow rpm_script_t rpm_t:fifo_file rw_file_perms;
allow rpm_script_t rpm_t:process sigchld;

kernel_read_kernel_sysctls(rpm_script_t)
kernel_read_system_state(rpm_script_t)

dev_list_sysfs(rpm_script_t)

# ideally we would not need this
dev_manage_generic_blk_files(rpm_script_t)
dev_manage_generic_chr_files(rpm_script_t)
dev_manage_all_blk_files(rpm_script_t)
dev_manage_all_chr_files(rpm_script_t)

fs_manage_nfs_files(rpm_script_t)
fs_getattr_nfs(rpm_script_t)
# why is this not using mount?
fs_getattr_xattr_fs(rpm_script_t)
fs_mount_xattr_fs(rpm_script_t)
fs_unmount_xattr_fs(rpm_script_t)
fs_search_auto_mountpoints(rpm_script_t)

mls_file_read_up(rpm_script_t)
mls_file_write_down(rpm_script_t)

selinux_get_fs_mount(rpm_script_t)
selinux_validate_context(rpm_script_t)
selinux_compute_access_vector(rpm_script_t)
selinux_compute_create_context(rpm_script_t)
selinux_compute_relabel_context(rpm_script_t)
selinux_compute_user_contexts(rpm_script_t)

storage_raw_read_fixed_disk(rpm_script_t)
storage_raw_write_fixed_disk(rpm_script_t)

term_getattr_unallocated_ttys(rpm_script_t)
term_list_ptys(rpm_script_t)
term_use_all_terms(rpm_script_t)

auth_dontaudit_getattr_shadow(rpm_script_t)
# ideally we would not need this
auth_manage_all_files_except_shadow(rpm_script_t)

corecmd_exec_bin(rpm_script_t)
corecmd_exec_sbin(rpm_script_t)

domain_read_all_domains_state(rpm_script_t)
domain_getattr_all_domains(rpm_script_t)
domain_dontaudit_ptrace_all_domains(rpm_script_t)
domain_use_interactive_fds(rpm_script_t)
domain_exec_all_entry_files(rpm_script_t)
domain_signal_all_domains(rpm_script_t)
domain_signull_all_domains(rpm_script_t)

files_exec_etc_files(rpm_script_t)
files_read_etc_runtime_files(rpm_script_t)
files_exec_usr_files(rpm_script_t)

init_domtrans_script(rpm_script_t)

libs_use_ld_so(rpm_script_t)
libs_use_shared_libs(rpm_script_t)
libs_exec_ld_so(rpm_script_t)
libs_exec_lib_files(rpm_script_t)
libs_domtrans_ldconfig(rpm_script_t)

logging_send_syslog_msg(rpm_script_t)

miscfiles_read_localization(rpm_script_t)

modutils_domtrans_depmod(rpm_script_t)
modutils_domtrans_insmod(rpm_script_t)

seutil_domtrans_loadpolicy(rpm_script_t)
seutil_domtrans_restorecon(rpm_script_t)

userdom_use_all_users_fds(rpm_script_t)

ifdef(`distro_redhat',`
	unconfined_domain(rpm_script_t)
')

ifdef(`targeted_policy',`
	unconfined_domain(rpm_script_t)
',`
	optional_policy(`bootloader',`
		bootloader_domtrans(rpm_script_t)
	')
')

ifdef(`distro_redhat',`
	optional_policy(`mta',`
		mta_send_mail(rpm_script_t)
	')
')

tunable_policy(`allow_execmem',`
	allow rpm_script_t self:process execmem;
')

optional_policy(`nis',`
	nis_use_ypbind(rpm_script_t)
')

optional_policy(`usermanage',`
	usermanage_domtrans_groupadd(rpm_script_t)
	usermanage_domtrans_useradd(rpm_script_t)
')

ifdef(`TODO',`
optional_policy(`lpd',`
can_exec(rpm_script_t,printconf_t)
')

optional_policy(`cups',`
allow cupsd_t rpm_var_lib_t:dir r_dir_perms;
allow cupsd_t rpm_var_lib_t:file r_file_perms;
allow cupsd_t rpb_var_lib_t:lnk_file r_file_perms;
allow cupsd_t initrc_exec_t:file r_file_perms;
domain_auto_trans(rpm_script_t, cupsd_exec_t, cupsd_t)
')

optional_policy(`ssh-agent',`
domain_auto_trans(rpm_script_t, ssh_agent_exec_t, sysadm_ssh_agent_t)
')

optional_policy(`prelink',`
domain_auto_trans(rpm_t, prelink_exec_t, prelink_t)
')

ifdef(`hide_broken_symptoms', `
	optional_policy(`pamconsole',`
		domain_trans(rpm_t, pam_console_exec_t, rpm_script_t)
	')
')

') dnl end TODO
