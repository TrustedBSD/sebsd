
policy_module(howl,1.1.0)

########################################
#
# Declarations
#

type howl_t;
type howl_exec_t;
init_daemon_domain(howl_t,howl_exec_t)

type howl_var_run_t;
files_pid_file(howl_var_run_t)

########################################
#
# Local policy
#

allow howl_t self:capability { kill net_admin };
dontaudit howl_t self:capability sys_tty_config;
allow howl_t self:process signal_perms;
allow howl_t self:fifo_file rw_file_perms;
allow howl_t self:tcp_socket create_stream_socket_perms;
allow howl_t self:udp_socket create_socket_perms;

allow howl_t howl_var_run_t:file create_file_perms;
allow howl_t howl_var_run_t:dir rw_dir_perms;
files_pid_filetrans(howl_t,howl_var_run_t,file)

kernel_read_network_state(howl_t)
kernel_read_kernel_sysctls(howl_t)
kernel_load_module(howl_t)
kernel_list_proc(howl_t)
kernel_read_proc_symlinks(howl_t)

corenet_tcp_sendrecv_all_if(howl_t)
corenet_udp_sendrecv_all_if(howl_t)
corenet_raw_sendrecv_all_if(howl_t)
corenet_tcp_sendrecv_all_nodes(howl_t)
corenet_udp_sendrecv_all_nodes(howl_t)
corenet_raw_sendrecv_all_nodes(howl_t)
corenet_tcp_sendrecv_all_ports(howl_t)
corenet_udp_sendrecv_all_ports(howl_t)
corenet_non_ipsec_sendrecv(howl_t)
corenet_tcp_bind_all_nodes(howl_t)
corenet_udp_bind_all_nodes(howl_t)
corenet_tcp_bind_howl_port(howl_t)
corenet_udp_bind_howl_port(howl_t)

dev_read_sysfs(howl_t)

fs_getattr_all_fs(howl_t)
fs_search_auto_mountpoints(howl_t)

term_dontaudit_use_console(howl_t)

domain_use_interactive_fds(howl_t)

files_read_etc_files(howl_t)

init_use_fds(howl_t)
init_use_script_ptys(howl_t)
init_rw_utmp(howl_t)

libs_use_ld_so(howl_t)
libs_use_shared_libs(howl_t)

logging_send_syslog_msg(howl_t)

miscfiles_read_localization(howl_t)

sysnet_read_config(howl_t)

userdom_dontaudit_use_unpriv_user_fds(howl_t)
userdom_dontaudit_search_sysadm_home_dirs(howl_t)

ifdef(`targeted_policy', `
	term_dontaudit_use_unallocated_ttys(howl_t)
	term_dontaudit_use_generic_ptys(howl_t)
	files_dontaudit_read_root_files(howl_t)
')

optional_policy(`nis',`
	nis_use_ypbind(howl_t)
')

optional_policy(`selinuxutil',`
	seutil_sigchld_newrole(howl_t)
')

optional_policy(`udev',`
	udev_read_db(howl_t)
')
