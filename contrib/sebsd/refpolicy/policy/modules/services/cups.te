
policy_module(cups,1.3.0)

########################################
#
# Declarations
#

type cupsd_config_t;
type cupsd_config_exec_t;
init_daemon_domain(cupsd_config_t,cupsd_config_exec_t)

type cupsd_config_var_run_t;
files_pid_file(cupsd_config_var_run_t)

type cupsd_t;
# real declaration moved to mls until
# range_transition works in loadable modules
gen_require(`
	type cupsd_exec_t;
')
init_daemon_domain(cupsd_t,cupsd_exec_t)

type cupsd_etc_t;
files_config_file(cupsd_etc_t)

type cupsd_rw_etc_t;
files_config_file(cupsd_rw_etc_t)

type cupsd_log_t;
logging_log_file(cupsd_log_t)

type cupsd_lpd_t;
type cupsd_lpd_exec_t;
inetd_service_domain(cupsd_lpd_t,cupsd_lpd_exec_t)
role system_r types cupsd_lpd_t;

type cupsd_lpd_tmp_t;
files_tmp_file(cupsd_lpd_tmp_t)

type cupsd_lpd_var_run_t;
files_pid_file(cupsd_lpd_var_run_t)

type cupsd_tmp_t;
files_tmp_file(cupsd_tmp_t)

type cupsd_var_run_t;
files_pid_file(cupsd_var_run_t)

type hplip_t;
type hplip_exec_t;
init_daemon_domain(hplip_t,hplip_exec_t)

type hplip_etc_t;
files_config_file(hplip_etc_t)

type hplip_var_run_t;
files_pid_file(hplip_var_run_t)

type ptal_t;
type ptal_exec_t;
init_daemon_domain(ptal_t,ptal_exec_t)

type ptal_etc_t;
files_config_file(ptal_etc_t)

type ptal_var_run_t;
files_pid_file(ptal_var_run_t)

########################################
#
# Cups local policy
#

# /usr/lib/cups/backend/serial needs sys_admin(?!)
allow cupsd_t self:capability { sys_admin dac_read_search kill setgid setuid fsetid net_bind_service fowner chown dac_override sys_tty_config audit_write };
dontaudit cupsd_t self:capability { sys_tty_config net_admin };
allow cupsd_t self:process { setsched signal_perms };
allow cupsd_t self:fifo_file rw_file_perms;
allow cupsd_t self:unix_stream_socket create_socket_perms;
allow cupsd_t self:unix_dgram_socket create_socket_perms;
allow cupsd_t self:netlink_audit_socket { create_netlink_socket_perms nlmsg_relay };
allow cupsd_t self:netlink_route_socket { r_netlink_socket_perms };
allow cupsd_t self:tcp_socket { create_stream_socket_perms connectto acceptfrom recvfrom };
allow cupsd_t self:udp_socket create_socket_perms;

allow cupsd_t cupsd_etc_t:file { r_file_perms setattr };
allow cupsd_t cupsd_etc_t:dir { rw_dir_perms setattr };
allow cupsd_t cupsd_etc_t:lnk_file { getattr read };
files_search_etc(cupsd_t)

allow cupsd_t cupsd_rw_etc_t:file manage_file_perms;
allow cupsd_t cupsd_rw_etc_t:dir manage_dir_perms;
type_transition cupsd_t cupsd_etc_t:file cupsd_rw_etc_t;
files_var_filetrans(cupsd_t,cupsd_rw_etc_t,{ dir file })

# allow cups to execute its backend scripts
can_exec(cupsd_t, cupsd_exec_t)
allow cupsd_t cupsd_exec_t:dir search;
allow cupsd_t cupsd_exec_t:lnk_file read;

allow cupsd_t cupsd_log_t:file create_file_perms;
allow cupsd_t cupsd_log_t:dir { setattr rw_dir_perms };
logging_log_filetrans(cupsd_t,cupsd_log_t,{ file dir })

allow cupsd_t cupsd_tmp_t:dir create_dir_perms;
allow cupsd_t cupsd_tmp_t:file create_file_perms;
allow cupsd_t cupsd_tmp_t:fifo_file create_file_perms;
files_tmp_filetrans(cupsd_t, cupsd_tmp_t, { file dir fifo_file })

allow cupsd_t cupsd_var_run_t:file create_file_perms;
allow cupsd_t cupsd_var_run_t:dir rw_dir_perms;
files_pid_filetrans(cupsd_t,cupsd_var_run_t,file)

allow cupsd_t hplip_var_run_t:file { read getattr };

allow cupsd_t ptal_var_run_t:dir search;
allow cupsd_t ptal_var_run_t:sock_file { write setattr };
allow cupsd_t ptal_t:unix_stream_socket connectto;

kernel_read_system_state(cupsd_t)
kernel_read_all_sysctls(cupsd_t)
kernel_tcp_recvfrom(cupsd_t)

corenet_tcp_sendrecv_all_if(cupsd_t)
corenet_udp_sendrecv_all_if(cupsd_t)
corenet_raw_sendrecv_all_if(cupsd_t)
corenet_tcp_sendrecv_all_nodes(cupsd_t)
corenet_udp_sendrecv_all_nodes(cupsd_t)
corenet_raw_sendrecv_all_nodes(cupsd_t)
corenet_tcp_sendrecv_all_ports(cupsd_t)
corenet_udp_sendrecv_all_ports(cupsd_t)
corenet_non_ipsec_sendrecv(cupsd_t)
corenet_tcp_bind_all_nodes(cupsd_t)
corenet_udp_bind_all_nodes(cupsd_t)
corenet_tcp_bind_ipp_port(cupsd_t)
corenet_udp_bind_ipp_port(cupsd_t)
corenet_tcp_bind_reserved_port(cupsd_t)
corenet_dontaudit_tcp_bind_all_reserved_ports(cupsd_t)
corenet_tcp_connect_all_ports(cupsd_t)

dev_rw_printer(cupsd_t)
dev_read_urand(cupsd_t)
dev_read_sysfs(cupsd_t)
dev_read_usbfs(cupsd_t)

fs_getattr_all_fs(cupsd_t)
fs_search_auto_mountpoints(cupsd_t)

term_dontaudit_use_console(cupsd_t)
term_write_unallocated_ttys(cupsd_t)

auth_domtrans_chk_passwd(cupsd_t)
auth_dontaudit_read_pam_pid(cupsd_t)

# Filter scripts may be shell scripts, and may invoke progs like /bin/mktemp
corecmd_exec_shell(cupsd_t)
corecmd_exec_bin(cupsd_t)
corecmd_exec_sbin(cupsd_t)

domain_use_interactive_fds(cupsd_t)

files_read_etc_files(cupsd_t)
files_read_etc_runtime_files(cupsd_t)
# read python modules
files_read_usr_files(cupsd_t)
# for /var/lib/defoma
files_search_var_lib(cupsd_t)
files_list_world_readable(cupsd_t)
files_read_world_readable_files(cupsd_t)
files_read_world_readable_symlinks(cupsd_t)

init_use_fds(cupsd_t)
init_use_script_ptys(cupsd_t)
init_exec_script_files(cupsd_t)

libs_use_ld_so(cupsd_t)
libs_use_shared_libs(cupsd_t)
# Read /usr/lib/gconv/gconv-modules.* and /usr/lib/python2.2/.*
libs_read_lib_files(cupsd_t)

logging_send_syslog_msg(cupsd_t)

miscfiles_read_localization(cupsd_t)
# invoking ghostscript needs to read fonts
miscfiles_read_fonts(cupsd_t)

seutil_dontaudit_read_config(cupsd_t)

sysnet_read_config(cupsd_t)

userdom_dontaudit_use_unpriv_user_fds(cupsd_t)
userdom_dontaudit_search_all_users_home_content(cupsd_t)

# Write to /var/spool/cups.
lpd_manage_spool(cupsd_t)

ifdef(`targeted_policy',`
	term_dontaudit_use_unallocated_ttys(cupsd_t)
	term_dontaudit_use_generic_ptys(cupsd_t)
	files_dontaudit_read_root_files(cupsd_t)
')

optional_policy(`cron',`
	cron_system_entry(cupsd_t, cupsd_exec_t)
')

optional_policy(`dbus',`
	dbus_system_bus_client_template(cupsd,cupsd_t)
	dbus_send_system_bus(cupsd_t)

	userdom_dbus_send_all_users(cupsd_t)

	optional_policy(`hal',`
		hal_dbus_chat(cupsd_t)
	')
')

optional_policy(`hostname',`
	hostname_exec(cupsd_t)
')

optional_policy(`inetd',`
	inetd_core_service_domain(cupsd_t,cupsd_exec_t,cupsd_t)
')

optional_policy(`mount',`
	mount_send_nfs_client_request(cupsd_t)
')

optional_policy(`nscd',`
	nscd_socket_use(cupsd_t)
')

optional_policy(`portmap',`
	portmap_udp_chat(cupsd_t)
')

optional_policy(`samba',`
	samba_rw_var_files(cupsd_t)
	# cjp: rw_dir_perms was here, but doesnt make sense
')

optional_policy(`selinuxutil',`
	seutil_sigchld_newrole(cupsd_t)
')

optional_policy(`udev',`
	udev_read_db(cupsd_t)
')

ifdef(`TODO',`
allow web_client_domain cupsd_t:tcp_socket { connectto recvfrom };
allow cupsd_t web_client_domain:tcp_socket { acceptfrom recvfrom };
allow cupsd_t kernel_t:tcp_socket recvfrom;
allow web_client_domain kernel_t:tcp_socket recvfrom;
') dnl end TODO

allow cupsd_t usercanread:dir r_dir_perms;
allow cupsd_t usercanread:file r_file_perms;
allow cupsd_t usercanread:lnk_file { getattr read };

allow cupsd_t devpts_t:dir search;

dontaudit cupsd_t random_device_t:chr_file ioctl;

# temporary solution, we need something better
#allow cupsd_t serial_device:chr_file rw_file_perms;

# for /etc/printcap
dontaudit cupsd_t etc_t:file write;

#
# Satisfy readahead
#
allow cupsd_t var_t:dir { getattr read search };
allow cupsd_t var_t:file r_file_perms;
allow cupsd_t var_t:lnk_file { getattr read };

########################################
#
# PTAL local policy
#

allow ptal_t self:capability { chown sys_rawio };
dontaudit ptal_t self:capability sys_tty_config;
allow ptal_t self:fifo_file rw_file_perms;
allow ptal_t self:unix_dgram_socket create_socket_perms;
allow ptal_t self:unix_stream_socket create_stream_socket_perms;
allow ptal_t self:tcp_socket create_stream_socket_perms;

allow ptal_t ptal_etc_t:file r_file_perms;
allow ptal_t ptal_etc_t:dir r_dir_perms;
allow ptal_t ptal_etc_t:lnk_file { getattr read };
files_search_etc(ptal_t)

allow ptal_t ptal_var_run_t:dir create_dir_perms;
allow ptal_t ptal_var_run_t:file create_file_perms;
allow ptal_t ptal_var_run_t:lnk_file create_lnk_perms;
allow ptal_t ptal_var_run_t:sock_file create_file_perms;
allow ptal_t ptal_var_run_t:fifo_file create_file_perms;
files_pid_filetrans(ptal_t,ptal_var_run_t,{ dir file lnk_file sock_file fifo_file })

allow ptal_t ptal_var_run_t:file create_file_perms;
allow ptal_t ptal_var_run_t:dir rw_dir_perms;
files_pid_filetrans(ptal_t,ptal_var_run_t,file)

kernel_read_kernel_sysctls(ptal_t)
kernel_list_proc(ptal_t)
kernel_read_proc_symlinks(ptal_t)

corenet_tcp_sendrecv_all_if(ptal_t)
corenet_raw_sendrecv_all_if(ptal_t)
corenet_tcp_sendrecv_all_nodes(ptal_t)
corenet_raw_sendrecv_all_nodes(ptal_t)
corenet_tcp_sendrecv_all_ports(ptal_t)
corenet_non_ipsec_sendrecv(ptal_t)
corenet_tcp_bind_all_nodes(ptal_t)
corenet_tcp_bind_ptal_port(ptal_t)

dev_read_sysfs(ptal_t)
dev_read_usbfs(ptal_t)
dev_rw_printer(ptal_t)

fs_getattr_all_fs(ptal_t)
fs_search_auto_mountpoints(ptal_t)

term_dontaudit_use_console(ptal_t)

domain_use_interactive_fds(ptal_t)

files_read_etc_files(ptal_t)
files_read_etc_runtime_files(ptal_t)

init_use_fds(ptal_t)
init_use_script_ptys(ptal_t)

libs_use_ld_so(ptal_t)
libs_use_shared_libs(ptal_t)

logging_send_syslog_msg(ptal_t)

miscfiles_read_localization(ptal_t)

sysnet_read_config(ptal_t)

userdom_dontaudit_use_unpriv_user_fds(ptal_t)
userdom_dontaudit_search_all_users_home_content(ptal_t)

ifdef(`targeted_policy', `
	term_dontaudit_use_unallocated_ttys(ptal_t)
	term_dontaudit_use_generic_ptys(ptal_t)
	files_dontaudit_read_root_files(ptal_t)
')

optional_policy(`selinuxutil',`
	seutil_sigchld_newrole(ptal_t)
')

optional_policy(`udev',`
	udev_read_db(ptal_t)
')

allow initrc_t printer_device_t:chr_file getattr;

allow initrc_t ptal_var_run_t:dir rmdir;
allow initrc_t ptal_var_run_t:fifo_file unlink;
allow initrc_t cupsd_rw_etc_t:file r_file_perms;

########################################
#
# HPLIP local policy
#

dontaudit hplip_t self:capability sys_tty_config;
allow hplip_t self:process signal_perms;
allow hplip_t self:unix_dgram_socket create_socket_perms;
allow hplip_t self:unix_stream_socket create_socket_perms;
allow hplip_t self:tcp_socket create_stream_socket_perms;
allow hplip_t self:udp_socket create_socket_perms;
# cjp: raw?
allow hplip_t self:rawip_socket create_socket_perms;

allow hplip_t cupsd_etc_t:dir search;

allow hplip_t hplip_etc_t:file r_file_perms;
allow hplip_t hplip_etc_t:dir r_dir_perms;
allow hplip_t hplip_etc_t:lnk_file { getattr read };
files_search_etc(hplip_t)

allow hplip_t hplip_var_run_t:file create_file_perms;
allow hplip_t hplip_var_run_t:dir rw_dir_perms;
files_pid_filetrans(hplip_t,hplip_var_run_t,file)

kernel_read_system_state(hplip_t)
kernel_read_kernel_sysctls(hplip_t)

corenet_tcp_sendrecv_all_if(hplip_t)
corenet_udp_sendrecv_all_if(hplip_t)
corenet_raw_sendrecv_all_if(hplip_t)
corenet_tcp_sendrecv_all_nodes(hplip_t)
corenet_udp_sendrecv_all_nodes(hplip_t)
corenet_raw_sendrecv_all_nodes(hplip_t)
corenet_tcp_sendrecv_all_ports(hplip_t)
corenet_udp_sendrecv_all_ports(hplip_t)
corenet_non_ipsec_sendrecv(hplip_t)
corenet_tcp_bind_all_nodes(hplip_t)
corenet_udp_bind_all_nodes(hplip_t)
corenet_tcp_bind_hplip_port(hplip_t)
corenet_tcp_connect_hplip_port(hplip_t)
corenet_tcp_connect_ipp_port(hplip_t)

dev_read_sysfs(hplip_t)
dev_rw_printer(hplip_t)
dev_read_urand(hplip_t)

fs_getattr_all_fs(hplip_t)
fs_search_auto_mountpoints(hplip_t)

term_dontaudit_use_console(hplip_t)

# for python
corecmd_exec_bin(hplip_t)
corecmd_search_sbin(hplip_t)

domain_use_interactive_fds(hplip_t)

files_read_etc_files(hplip_t)
files_read_etc_runtime_files(hplip_t)
files_read_usr_files(hplip_t)

init_use_fds(hplip_t)
init_use_script_ptys(hplip_t)

libs_use_ld_so(hplip_t)
libs_use_shared_libs(hplip_t)

logging_send_syslog_msg(hplip_t)

miscfiles_read_localization(hplip_t)

sysnet_read_config(hplip_t)

userdom_dontaudit_use_unpriv_user_fds(hplip_t)
userdom_dontaudit_search_sysadm_home_dirs(hplip_t)

lpd_read_config(cupsd_t)

ifdef(`targeted_policy', `
	term_dontaudit_use_unallocated_ttys(hplip_t)
	term_dontaudit_use_generic_ptys(hplip_t)
	files_dontaudit_read_root_files(hplip_t)
')

optional_policy(`mount',`
	mount_send_nfs_client_request(hplip_t)
')

optional_policy(`selinuxutil',`
	seutil_sigchld_newrole(hplip_t)
')

optional_policy(`udev',`
	udev_read_db(hplip_t)
')

allow hplip_t devpts_t:dir search;
allow hplip_t devpts_t:chr_file { getattr ioctl };

########################################
#
# Cups configuration daemon local policy
#

allow cupsd_config_t self:capability { chown sys_tty_config };
dontaudit cupsd_config_t self:capability sys_tty_config;
allow cupsd_config_t self:process signal_perms;
allow cupsd_config_t self:fifo_file rw_file_perms;
allow cupsd_config_t self:unix_stream_socket create_socket_perms;
allow cupsd_config_t self:unix_dgram_socket create_socket_perms;
allow cupsd_config_t self:tcp_socket create_stream_socket_perms;

allow cupsd_config_t cupsd_t:tcp_socket { connectto recvfrom };
allow cupsd_t cupsd_config_t:tcp_socket { acceptfrom recvfrom };

# old can_ps() on cupsd_t:
allow cupsd_config_t cupsd_t:process { signal };
allow cupsd_config_t cupsd_t:{ file lnk_file } { getattr read };
allow cupsd_config_t cupsd_t:dir { search getattr read };
allow cupsd_config_t cupsd_t:{ file lnk_file } { read getattr };
allow cupsd_config_t cupsd_t:process getattr;
# We need to suppress this denial because procps tries to access
# /proc/pid/environ and this now triggers a ptrace check in recent kernels
# (2.4 and 2.6).  Might want to change procps to not do this, or only if
# running in a privileged domain.
dontaudit cupsd_config_t cupsd_t:process ptrace;

allow cupsd_config_t cupsd_config_var_run_t:file create_file_perms;
allow cupsd_config_t cupsd_config_var_run_t:dir rw_dir_perms;
files_pid_filetrans(cupsd_config_t,cupsd_config_var_run_t,file)

can_exec(cupsd_config_t, cupsd_config_exec_t) 

allow cupsd_config_t cupsd_etc_t:dir rw_dir_perms;
allow cupsd_config_t cupsd_etc_t:file create_file_perms;
allow cupsd_config_t cupsd_etc_t:lnk_file create_lnk_perms;
type_transition cupsd_config_t cupsd_etc_t:file cupsd_rw_etc_t;

allow cupsd_config_t cupsd_log_t:file rw_file_perms;

allow cupsd_config_t cupsd_rw_etc_t:dir rw_dir_perms;
allow cupsd_config_t cupsd_rw_etc_t:file manage_file_perms;
allow cupsd_config_t cupsd_rw_etc_t:lnk_file create_lnk_perms;
files_var_filetrans(cupsd_config_t,cupsd_rw_etc_t,file)

allow cupsd_config_t cupsd_var_run_t:file { getattr read };

kernel_read_system_state(cupsd_config_t)
kernel_read_kernel_sysctls(cupsd_config_t)
kernel_tcp_recvfrom(cupsd_config_t)

corenet_tcp_sendrecv_all_if(cupsd_config_t)
corenet_raw_sendrecv_all_if(cupsd_config_t)
corenet_tcp_sendrecv_all_nodes(cupsd_config_t)
corenet_raw_sendrecv_all_nodes(cupsd_config_t)
corenet_tcp_sendrecv_all_ports(cupsd_config_t)
corenet_non_ipsec_sendrecv(cupsd_config_t)
corenet_tcp_bind_all_nodes(cupsd_config_t)
corenet_tcp_connect_all_ports(cupsd_config_t)

dev_read_sysfs(cupsd_config_t)
dev_read_urand(cupsd_config_t)

fs_getattr_all_fs(cupsd_config_t)
fs_search_auto_mountpoints(cupsd_config_t)

term_dontaudit_use_console(cupsd_config_t)

corecmd_exec_bin(cupsd_config_t)
corecmd_exec_sbin(cupsd_config_t)
corecmd_exec_shell(cupsd_config_t)

domain_use_interactive_fds(cupsd_config_t)
# killall causes the following
domain_dontaudit_search_all_domains_state(cupsd_config_t)

files_read_usr_files(cupsd_config_t)
files_read_etc_files(cupsd_config_t)
files_read_etc_runtime_files(cupsd_config_t)

init_use_fds(cupsd_config_t)
init_use_script_ptys(cupsd_config_t)

libs_use_ld_so(cupsd_config_t)
libs_use_shared_libs(cupsd_config_t)

logging_send_syslog_msg(cupsd_config_t)

miscfiles_read_localization(cupsd_config_t)

seutil_dontaudit_search_config(cupsd_config_t)

sysnet_read_config(cupsd_config_t)

userdom_dontaudit_use_unpriv_user_fds(cupsd_config_t)
userdom_dontaudit_search_sysadm_home_dirs(cupsd_config_t)

ifdef(`distro_redhat',`
	init_getattr_script_files(cupsd_config_t)

	optional_policy(`rpm',`
		rpm_read_db(cupsd_config_t)
	')
')

ifdef(`targeted_policy', `
	term_dontaudit_use_unallocated_ttys(cupsd_config_t)
	term_dontaudit_use_generic_ptys(cupsd_config_t)
	files_dontaudit_read_root_files(cupsd_config_t)
')

optional_policy(`cron',`
	cron_system_entry(cupsd_config_t, cupsd_config_exec_t)
')

optional_policy(`dbus',`
	dbus_system_bus_client_template(cupsd_config,cupsd_config_t)
	dbus_connect_system_bus(cupsd_config_t)
	dbus_send_system_bus(cupsd_config_t)

	optional_policy(`hal',`
		hal_dbus_chat(cupsd_config_t)
	')
')

optional_policy(`hal',`
	hal_domtrans(cupsd_config_t)
')

optional_policy(`hostname',`
	hostname_exec(cupsd_config_t)
')

optional_policy(`logrotate',`
	logrotate_use_fds(cupsd_config_t)
')

optional_policy(`nis',`
	nis_use_ypbind(cupsd_config_t)
')

optional_policy(`nscd',`
	nscd_socket_use(cupsd_config_t)
')

optional_policy(`rpm',`
	rpm_read_db(cupsd_config_t)
')

optional_policy(`selinuxutil',`
	seutil_sigchld_newrole(cupsd_config_t)
')

optional_policy(`udev',`
	udev_read_db(cupsd_config_t)
')

allow cupsd_config_t var_t:lnk_file read;

allow cupsd_config_t printconf_t:file { getattr read };

# Alternatives asks for this
allow cupsd_config_t initrc_exec_t:file getattr;

ifdef(`targeted_policy', `
	init_stream_connect_script(cupsd_t)

	unconfined_read_pipes(cupsd_t)

	optional_policy(`dbus',`
		init_dbus_chat_script(cupsd_t)

		unconfined_dbus_send(cupsd_t)

		dbus_stub(cupsd_t)
	')
')

ifdef(`targeted_policy',`
	term_use_generic_ptys(cupsd_config_t)

	unconfined_read_pipes(cupsd_config_t)
')

########################################
#
# Cups lpd support
#

allow cupsd_lpd_t self:process signal_perms;
allow cupsd_lpd_t self:fifo_file rw_file_perms;
allow cupsd_lpd_t self:tcp_socket connected_stream_socket_perms;
allow cupsd_lpd_t self:udp_socket create_socket_perms;

# for identd
# cjp: this should probably only be inetd_child rules?
allow cupsd_lpd_t self:netlink_tcpdiag_socket r_netlink_socket_perms;
allow cupsd_lpd_t self:capability { setuid setgid };
files_search_home(cupsd_lpd_t)
optional_policy(`kerberos',`
	kerberos_use(cupsd_lpd_t)
')
#end for identd

allow cupsd_lpd_t cupsd_etc_t:dir list_dir_perms;
allow cupsd_lpd_t cupsd_etc_t:file r_file_perms;
allow cupsd_lpd_t cupsd_etc_t:lnk_file { getattr read };

allow cupsd_lpd_t cupsd_lpd_tmp_t:dir create_dir_perms;
allow cupsd_lpd_t cupsd_lpd_tmp_t:file create_file_perms;
files_tmp_filetrans(cupsd_lpd_t, cupsd_lpd_tmp_t, { file dir })

allow cupsd_lpd_t cupsd_lpd_var_run_t:file create_file_perms;
allow cupsd_lpd_t cupsd_lpd_var_run_t:dir rw_dir_perms;
files_pid_filetrans(cupsd_lpd_t,cupsd_lpd_var_run_t,file)

allow cupsd_lpd_t cupsd_rw_etc_t:dir list_dir_perms;
allow cupsd_lpd_t cupsd_rw_etc_t:file r_file_perms;
allow cupsd_lpd_t cupsd_rw_etc_t:lnk_file { getattr read };

kernel_read_kernel_sysctls(cupsd_lpd_t)
kernel_read_system_state(cupsd_lpd_t)
kernel_read_network_state(cupsd_lpd_t)

corenet_tcp_sendrecv_all_if(cupsd_lpd_t)
corenet_udp_sendrecv_all_if(cupsd_lpd_t)
corenet_raw_sendrecv_all_if(cupsd_lpd_t)
corenet_tcp_sendrecv_all_nodes(cupsd_lpd_t)
corenet_udp_sendrecv_all_nodes(cupsd_lpd_t)
corenet_raw_sendrecv_all_nodes(cupsd_lpd_t)
corenet_tcp_sendrecv_all_ports(cupsd_lpd_t)
corenet_udp_sendrecv_all_ports(cupsd_lpd_t)
corenet_non_ipsec_sendrecv(cupsd_lpd_t)
corenet_tcp_bind_all_nodes(cupsd_lpd_t)
corenet_udp_bind_all_nodes(cupsd_lpd_t)
corenet_tcp_connect_ipp_port(cupsd_lpd_t)

dev_read_urand(cupsd_lpd_t)

fs_getattr_xattr_fs(cupsd_lpd_t)

files_read_etc_files(cupsd_lpd_t)

libs_use_ld_so(cupsd_lpd_t)
libs_use_shared_libs(cupsd_lpd_t)

logging_send_syslog_msg(cupsd_lpd_t)

miscfiles_read_localization(cupsd_lpd_t)

sysnet_read_config(cupsd_lpd_t)

optional_policy(`nis',`
	nis_use_ypbind(cupsd_lpd_t)
')

optional_policy(`nscd',`
	nscd_socket_use(cupsd_lpd_t)
')
