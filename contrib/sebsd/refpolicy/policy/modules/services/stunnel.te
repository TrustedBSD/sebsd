
policy_module(stunnel,1.1.0)

########################################
#
# Declarations
#

type stunnel_t;
domain_type(stunnel_t)
role system_r types stunnel_t;

type stunnel_exec_t;
domain_entry_file(stunnel_t,stunnel_exec_t)

ifdef(`distro_gentoo',`
	init_daemon_domain(stunnel_t,stunnel_exec_t)
',`
	inetd_tcp_service_domain(stunnel_t,stunnel_exec_t)
')

type stunnel_etc_t;
files_type(stunnel_etc_t)

type stunnel_tmp_t;
files_tmp_file(stunnel_tmp_t)

type stunnel_var_run_t;
files_pid_file(stunnel_var_run_t)

########################################
#
# Local policy
#

allow stunnel_t self:capability { setgid setuid sys_chroot };
allow stunnel_t self:process signal_perms;
allow stunnel_t self:fifo_file rw_file_perms;
allow stunnel_t self:tcp_socket create_stream_socket_perms;
allow stunnel_t self:udp_socket create_socket_perms;

allow stunnel_t stunnel_etc_t:dir { getattr read search };
allow stunnel_t stunnel_etc_t:file { read getattr };
allow stunnel_t stunnel_etc_t:lnk_file { getattr read };

allow stunnel_t stunnel_tmp_t:dir create_dir_perms;
allow stunnel_t stunnel_tmp_t:file create_file_perms;
files_tmp_filetrans(stunnel_t, stunnel_tmp_t, { file dir })

allow stunnel_t stunnel_var_run_t:file create_file_perms;
allow stunnel_t stunnel_var_run_t:dir rw_dir_perms;
files_pid_filetrans(stunnel_t,stunnel_var_run_t,file)

kernel_read_kernel_sysctls(stunnel_t)
kernel_read_system_state(stunnel_t)
kernel_read_network_state(stunnel_t)

corenet_tcp_sendrecv_all_if(stunnel_t)
corenet_udp_sendrecv_all_if(stunnel_t)
corenet_raw_sendrecv_all_if(stunnel_t)
corenet_tcp_sendrecv_all_nodes(stunnel_t)
corenet_udp_sendrecv_all_nodes(stunnel_t)
corenet_raw_sendrecv_all_nodes(stunnel_t)
corenet_tcp_sendrecv_all_ports(stunnel_t)
corenet_udp_sendrecv_all_ports(stunnel_t)
corenet_non_ipsec_sendrecv(stunnel_t)
corenet_tcp_bind_all_nodes(stunnel_t)
corenet_udp_bind_all_nodes(stunnel_t)
#corenet_tcp_bind_stunnel_port(stunnel_t)

fs_getattr_all_fs(stunnel_t)

libs_use_ld_so(stunnel_t)
libs_use_shared_libs(stunnel_t)

logging_send_syslog_msg(stunnel_t)

miscfiles_read_localization(stunnel_t)

sysnet_read_config(stunnel_t)

ifdef(`distro_gentoo', `
	dontaudit stunnel_t self:capability sys_tty_config;
	allow stunnel_t self:udp_socket create_socket_perms;

	dev_read_sysfs(stunnel_t)

	fs_search_auto_mountpoints(stunnel_t)

	term_dontaudit_use_console(stunnel_t)

	domain_use_interactive_fds(stunnel_t)

	init_use_fds(stunnel_t)
	init_use_script_ptys(stunnel_t)

	userdom_dontaudit_use_unpriv_user_fds(stunnel_t)
	userdom_dontaudit_search_sysadm_home_dirs(stunnel_t)

	ifdef(`targeted_policy', `
        	term_dontaudit_use_unallocated_ttys(stunnel_t)
        	term_dontaudit_use_generic_ptys(stunnel_t)
        	files_dontaudit_read_root_files(stunnel_t)
	')

	optional_policy(`daemontools',`
		daemontools_service_domain(stunnel_t, stunnel_exec_t)
	')

	optional_policy(`mount',`
        	mount_send_nfs_client_request(stunnel_t)
	')

	optional_policy(`selinuxutil',`
        	seutil_sigchld_newrole(stunnel_t)
	')

	optional_policy(`udev',`
        	udev_read_db(stunnel_t)
	')
',`
	allow stunnel_t self:netlink_tcpdiag_socket r_netlink_socket_perms;

	dev_read_urand(stunnel_t)

	files_read_etc_files(stunnel_t)
	files_search_home(stunnel_t)

	optional_policy(`kerberos',`
        	kerberos_use(stunnel_t)
	')

	optional_policy(`nis',`
        	nis_use_ypbind(stunnel_t)
	')

	optional_policy(`nscd',`
        	nscd_socket_use(stunnel_t)
	')
')

tunable_policy(`stunnel_is_daemon',`
	allow stunnel_t self:tcp_socket create_stream_socket_perms;

	# hack since this port has no interfaces since it doesnt
	# have net_contexts
	gen_require(`
		type stunnel_port_t;
	')
	allow stunnel_t stunnel_port_t:tcp_socket name_bind;
')
