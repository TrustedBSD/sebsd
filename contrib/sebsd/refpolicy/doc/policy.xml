<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE policy SYSTEM "policy.dtd">
<policy>
<layer name="admin">
<summary>
	Policy modules for administrative functions, such as package management.
</summary>
<module name="usermanage" filename="policy/modules/admin/usermanage.if">
<summary>Policy for managing user accounts.</summary>
<interface name="usermanage_domtrans_chfn" lineno="13">
<summary>
Execute chfn in the chfn domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="usermanage_run_chfn" lineno="49">
<summary>
Execute chfn in the chfn domain, and
allow the specified role the chfn domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the chfn domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the chfn domain to use.
</summary>
</param>
</interface>
<interface name="usermanage_domtrans_groupadd" lineno="69">
<summary>
Execute groupadd in the groupadd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="usermanage_run_groupadd" lineno="105">
<summary>
Execute groupadd in the groupadd domain, and
allow the specified role the groupadd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the groupadd domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the groupadd domain to use.
</summary>
</param>
</interface>
<interface name="usermanage_domtrans_passwd" lineno="125">
<summary>
Execute passwd in the passwd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="usermanage_run_passwd" lineno="161">
<summary>
Execute passwd in the passwd domain, and
allow the specified role the passwd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the passwd domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the passwd domain to use.
</summary>
</param>
</interface>
<interface name="usermanage_domtrans_admin_passwd" lineno="182">
<summary>
Execute password admin functions in
the admin passwd domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="usermanage_run_admin_passwd" lineno="219">
<summary>
Execute passwd admin functions in the admin
passwd domain, and allow the specified role
the admin passwd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the admin passwd domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the admin passwd domain to use.
</summary>
</param>
</interface>
<interface name="usermanage_domtrans_useradd" lineno="239">
<summary>
Execute useradd in the useradd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="usermanage_run_useradd" lineno="275">
<summary>
Execute useradd in the useradd domain, and
allow the specified role the useradd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the useradd domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the useradd domain to use.
</summary>
</param>
</interface>
<interface name="usermanage_read_crack_db" lineno="295">
<summary>
Read the crack database.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="tmpreaper" filename="policy/modules/admin/tmpreaper.if">
<summary>Manage temporary directory sizes and file ages</summary>
<interface name="tmpreaper_exec" lineno="13">
<summary>
Execute tmpreaper in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="kudzu" filename="policy/modules/admin/kudzu.if">
<summary>Hardware detection and configuration tools</summary>
<interface name="kudzu_domtrans" lineno="13">
<summary>
Execute kudzu in the kudzu domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="kudzu_run" lineno="47">
<summary>
Execute kudzu in the kudzu domain, and
allow the specified role the kudzu domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the kudzu domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the kudzu domain to use.
</summary>
</param>
</interface>
<interface name="kudzu_getattr_exec_files" lineno="68">
<summary>
Get attributes of kudzu executable.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="anaconda" filename="policy/modules/admin/anaconda.if">
<summary>Policy for the Anaconda installer.</summary>
</module>
<module name="netutils" filename="policy/modules/admin/netutils.if">
<summary>Network analysis utilities</summary>
<interface name="netutils_domtrans" lineno="13">
<summary>
Execute network utilities in the netutils domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="netutils_run" lineno="47">
<summary>
Execute network utilities in the netutils domain, and
allow the specified role the netutils domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the netutils domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the netutils domain to use.
</summary>
</param>
</interface>
<interface name="netutils_exec" lineno="67">
<summary>
Execute network utilities in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="netutils_domtrans_ping" lineno="85">
<summary>
Execute ping in the ping domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="netutils_run_ping" lineno="119">
<summary>
Execute ping in the ping domain, and
allow the specified role the ping domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the ping domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the ping domain to use.
</summary>
</param>
</interface>
<interface name="netutils_run_ping_cond" lineno="150">
<summary>
Conditionally execute ping in the ping domain, and
allow the specified role the ping domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the ping domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the ping domain to use.
</summary>
</param>
</interface>
<interface name="netutils_exec_ping" lineno="174">
<summary>
Execute ping in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="netutils_domtrans_traceroute" lineno="192">
<summary>
Execute traceroute in the traceroute domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="netutils_run_traceroute" lineno="226">
<summary>
Execute traceroute in the traceroute domain, and
allow the specified role the traceroute domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the traceroute domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the traceroute domain to use.
</summary>
</param>
</interface>
<interface name="netutils_run_traceroute_cond" lineno="257">
<summary>
Conditionally execute traceroute in the traceroute domain, and
allow the specified role the traceroute domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the traceroute domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the traceroute domain to use.
</summary>
</param>
</interface>
<interface name="netutils_exec_traceroute" lineno="281">
<summary>
Execute traceroute in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="usbmodules" filename="policy/modules/admin/usbmodules.if">
<summary>List kernel modules of USB devices</summary>
<interface name="usbmodules_domtrans" lineno="13">
<summary>
Execute usbmodules in the usbmodules domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="usbmodules_run" lineno="49">
<summary>
Execute usbmodules in the usbmodules domain, and
allow the specified role the usbmodules domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the usbmodules domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the usbmodules domain to use.
</summary>
</param>
</interface>
</module>
<module name="bootloader" filename="policy/modules/admin/bootloader.if">
<summary>Policy for the kernel modules, kernel image, and bootloader.</summary>
<interface name="bootloader_domtrans" lineno="13">
<summary>
Execute bootloader in the bootloader domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="bootloader_run" lineno="47">
<summary>
Execute bootloader interactively and do
a domain transition to the bootloader domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the bootloader domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the bootloader domain to use.
</summary>
</param>
</interface>
<interface name="bootloader_read_config" lineno="68">
<summary>
Read the bootloader configuration file.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="bootloader_rw_config" lineno="87">
<summary>
Read and write the bootloader
configuration file.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="bootloader_rw_tmp_files" lineno="106">
<summary>
Read and write the bootloader
temporary data in /tmp.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="bootloader_create_runtime_file" lineno="126">
<summary>
Read and write the bootloader
temporary data in /tmp.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="acct" filename="policy/modules/admin/acct.if">
<summary>Berkeley process accounting</summary>
<interface name="acct_domtrans" lineno="13">
<summary>
Transition to the accounting management domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="acct_exec" lineno="37">
<summary>
Execute accounting management tools in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="acct_exec_data" lineno="58">
<summary>
Execute accounting management data in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="acct_manage_data" lineno="77">
<summary>
Create, read, write, and delete process accounting data.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="mrtg" filename="policy/modules/admin/mrtg.if">
<summary>Network traffic graphing</summary>
<interface name="mrtg_append_create_logs" lineno="13">
<summary>
Create and append mrtg logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="firstboot" filename="policy/modules/admin/firstboot.if">
<summary>
Final system configuration run during the first boot
after installation of Red Hat/Fedora systems.
</summary>
<interface name="firstboot_domtrans" lineno="16">
<summary>
Execute firstboot in the firstboot domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="firstboot_run" lineno="50">
<summary>
Execute firstboot in the firstboot domain, and
allow the specified role the firstboot domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the firstboot domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the firstboot domain to use.
</summary>
</param>
</interface>
<interface name="firstboot_use_fds" lineno="70">
<summary>
Inherit and use a file descriptor from firstboot.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="firstboot_dontaudit_use_fds" lineno="89">
<summary>
Do not audit attempts to inherit a
file descriptor from firstboot.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="firstboot_write_pipes" lineno="107">
<summary>
Write to a firstboot unnamed pipe.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="quota" filename="policy/modules/admin/quota.if">
<summary>File system quota management</summary>
<interface name="quota_domtrans" lineno="13">
<summary>
Execute quota management tools in the quota domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="quota_run" lineno="47">
<summary>
Execute quota management tools in the quota domain, and
allow the specified role the quota domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the quota domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the quota domain to use.
</summary>
</param>
</interface>
<interface name="quota_dontaudit_getattr_db" lineno="68">
<summary>
Do not audit attempts to get the attributes
of filesystem quota data files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="quota_manage_flags" lineno="76">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
</module>
<module name="dmesg" filename="policy/modules/admin/dmesg.if">
<summary>Policy for dmesg.</summary>
<interface name="dmesg_domtrans" lineno="13">
<summary>
Execute dmesg in the dmesg domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="dmesg_exec" lineno="46">
<summary>
Execute dmesg in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="logrotate" filename="policy/modules/admin/logrotate.if">
<summary>Rotate and archive system logs</summary>
<interface name="logrotate_domtrans" lineno="13">
<summary>
Execute logrotate in the logrotate domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="logrotate_run" lineno="47">
<summary>
Execute logrotate in the logrotate domain, and
allow the specified role the logrotate domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the logrotate domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the logrotate domain to use.
</summary>
</param>
</interface>
<interface name="logrotate_exec" lineno="67">
<summary>
Execute logrotate in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="logrotate_use_fds" lineno="85">
<summary>
Inherit and use logrotate file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logrotate_dontaudit_use_fds" lineno="103">
<summary>
Do not audit attempts to inherit logrotate file descriptors.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="logrotate_read_tmp_files" lineno="121">
<summary>
Read a logrotate temporary files.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
</module>
<module name="logwatch" filename="policy/modules/admin/logwatch.if">
<summary>System log analyzer and reporter</summary>
<interface name="logwatch_read_tmp_files" lineno="13">
<summary>
Read logwatch temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="su" filename="policy/modules/admin/su.if">
<summary>Run shells with substitute user and group</summary>
<template name="su_restricted_domain_template" lineno="3">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</template>
<template name="su_per_userdomain_template" lineno="115">
<summary>
The per user domain template for the su module.
</summary>
<desc>
<p>
This template creates a derived domain which is allowed
to change the linux user id, to run shells as a different
user.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<interface name="su_exec" lineno="264">
<summary>
Execute su in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="vpn" filename="policy/modules/admin/vpn.if">
<summary>Virtual Private Networking client</summary>
<interface name="vpn_domtrans" lineno="13">
<summary>
Execute VPN clients in the vpnc domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="vpn_run" lineno="47">
<summary>
Execute VPN clients in the vpnc domain, and
allow the specified role the vpnc domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the vpnc domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the vpnc domain to use.
</summary>
</param>
</interface>
<interface name="vpn_signal" lineno="67">
<summary>
Send generic signals to VPN clients.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="consoletype" filename="policy/modules/admin/consoletype.if">
<summary>
Determine of the console connected to the controlling terminal.
</summary>
<interface name="consoletype_domtrans" lineno="15">
<summary>
Execute consoletype in the consoletype domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="consoletype_run" lineno="50">
<summary>
Execute consoletype in the consoletype domain, and
allow the specified role the consoletype domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the consoletype domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the consoletype domain to use.
</summary>
</param>
</interface>
<interface name="consoletype_exec" lineno="70">
<summary>
Execute consoletype in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="amanda" filename="policy/modules/admin/amanda.if">
<summary>Automated backup program.</summary>
<interface name="amanda_domtrans_recover" lineno="13">
<summary>
Execute amrecover in the amanda_recover domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="amanda_run_recover" lineno="47">
<summary>
Execute amrecover in the amanda_recover domain, and
allow the specified role the amanda_recover domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the amanda_recover domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the amanda_recover domain to use.
</summary>
</param>
</interface>
<interface name="amanda_search_lib" lineno="67">
<summary>
Search amanda library directories.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="amanda_dontaudit_read_dumpdates" lineno="86">
<summary>
Do not audit attempts to read /etc/dumpdates.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="amanda_rw_dumpdates_files" lineno="104">
<summary>
Allow read/writing /etc/dumpdates.
</summary>
<param name="domain">
<summary>
Domain to allow
</summary>
</param>
</interface>
<interface name="amanda_append_log_files" lineno="121">
<summary>
Allow read/writing amanda logs
</summary>
<param name="domain">
<summary>
Domain to allow
</summary>
</param>
</interface>
</module>
<module name="updfstab" filename="policy/modules/admin/updfstab.if">
<summary>Red Hat utility to change /etc/fstab.</summary>
<interface name="updfstab_domtrans" lineno="13">
<summary>
Execute updfstab in the updfstab domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="prelink" filename="policy/modules/admin/prelink.if">
<summary>Prelink ELF shared library mappings.</summary>
<interface name="prelink_domtrans" lineno="13">
<summary>
Execute the prelink program in the prelink domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="prelink_object_file" lineno="38">
<summary>
Make the specified file type prelinkable.
</summary>
<param name="file_type">
<summary>
File type to be prelinked.
</summary>
</param>
</interface>
<interface name="prelink_read_cache" lineno="56">
<summary>
Read the prelink cache.
</summary>
<param name="file_type">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="prelink_delete_cache" lineno="75">
<summary>
Delete the prelink cache.
</summary>
<param name="file_type">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="prelink_manage_log" lineno="94">
<summary>
Create, read, write, and delete
prelink log files.
</summary>
<param name="file_type">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="dmidecode" filename="policy/modules/admin/dmidecode.if">
<summary>Decode DMI data for x86/ia64 bioses.</summary>
<interface name="dmidecode_domtrans" lineno="13">
<summary>
Execute dmidecode in the dmidecode domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dmidecode_run" lineno="47">
<summary>
Execute dmidecode in the dmidecode domain, and
allow the specified role the dmidecode domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the dmidecode domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the dmidecode domain to use.
</summary>
</param>
</interface>
</module>
<module name="sudo" filename="policy/modules/admin/sudo.if">
<summary>Execute a command with a substitute user</summary>
<template name="sudo_per_userdomain_template" lineno="36">
<summary>
The per user domain template for the sudo module.
</summary>
<desc>
<p>
This template creates a derived domain which is allowed
to change the linux user id, to run commands as a different
user.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
</module>
<module name="vbetool" filename="policy/modules/admin/vbetool.if">
<summary>run real-mode video BIOS code to alter hardware state</summary>
<interface name="vbetool_domtrans" lineno="13">
<summary>
Execute vbetool application in the vbetool domain.
</summary>
<param name="domain" optional="true">
<summary>
N/A
</summary>
</param>
</interface>
</module>
<module name="rpm" filename="policy/modules/admin/rpm.if">
<summary>Policy for the RPM package manager.</summary>
<interface name="rpm_domtrans" lineno="13">
<summary>
Execute rpm programs in the rpm domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpm_domtrans_script" lineno="38">
<summary>
Execute rpm_script programs in the rpm_script domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="rpm_run" lineno="72">
<summary>
Execute RPM programs in the RPM domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to allow the RPM domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the RPM domain to use.
</summary>
</param>
</interface>
<interface name="rpm_use_fds" lineno="94">
<summary>
Inherit and use file descriptors from RPM.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpm_read_pipes" lineno="112">
<summary>
Read from an unnamed RPM pipe.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpm_rw_pipes" lineno="130">
<summary>
Read and write an unnamed RPM pipe.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpm_manage_log" lineno="148">
<summary>
Create, read, write, and delete the RPM log.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpm_use_script_fds" lineno="167">
<summary>
Inherit and use file descriptors from RPM scripts.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpm_read_db" lineno="185">
<summary>
Read the RPM package database.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpm_manage_db" lineno="206">
<summary>
Create, read, write, and delete the RPM package database.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpm_dontaudit_manage_db" lineno="228">
<summary>
Do not audit attempts to create, read,
write, and delete the RPM package database.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
</module>
<module name="ddcprobe" filename="policy/modules/admin/ddcprobe.if">
<summary>ddcprobe retrieves monitor and graphics card information</summary>
<interface name="ddcprobe_domtrans" lineno="13">
<summary>
Execute ddcprobe in the ddcprobe domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="ddcprobe_run" lineno="47">
<summary>
Execute ddcprobe in the ddcprobe domain, and
allow the specified role the ddcprobe domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
Role to be authenticated for ddcprobe domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the clock domain to use.
</summary>
</param>
</interface>
</module>
<module name="readahead" filename="policy/modules/admin/readahead.if">
<summary>Readahead, read files into page cache for improved performance</summary>
</module>
<module name="alsa" filename="policy/modules/admin/alsa.if">
<summary>Ainit ALSA configuration tool</summary>
<interface name="alsa_domtrans" lineno="13">
<summary>
Domain transition to alsa
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="alsa_rw_semaphores" lineno="37">
<summary>
Allow read and write access to alsa semaphores.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="alsa_rw_shared_mem" lineno="55">
<summary>
Allow read and write access to alsa shared memory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="portage" filename="policy/modules/admin/portage.if">
<summary>
Portage Package Management System. The primary package management and
distribution system for Gentoo.
</summary>
<interface name="portage_domtrans" lineno="16">
<summary>
Execute emerge in the portage domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="portage_run" lineno="52">
<summary>
Execute emerge in the portage domain, and
allow the specified role the portage domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to allow the portage domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow for portage to use.
</summary>
</param>
</interface>
<template name="portage_compile_domain_template" lineno="88">
<summary>
Template for portage sandbox.
</summary>
<desc>
<p>
Template for portage sandbox.  Portage
does all compiling in the sandbox.
</p>
</desc>
<param name="prefix">
<summary>
Name to be used to derive types.
</summary>
</param>
</template>
</module>
<module name="certwatch" filename="policy/modules/admin/certwatch.if">
<summary>Digital Certificate Tracking</summary>
<interface name="certwatch_domtrans" lineno="13">
<summary>
Domain transition to certwatch.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="certwatach_run" lineno="51">
<summary>
Execute certwatch in the certwatch domain, and
allow the specified role the certwatch domain,
and use the caller's terminal. Has a sigchld
backchannel.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the certwatch domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the certwatch domain to use.
</summary>
</param>
</interface>
</module>
</layer>
<layer name="kernel">
<summary>Policy modules for kernel resources.</summary>
<module name="selinux" filename="policy/modules/kernel/selinux.if">
<summary>
Policy for kernel security interface, in particular, selinuxfs.
</summary>
<required val="true">
Contains the policy for the kernel SELinux security interface.
</required>
<interface name="selinux_get_fs_mount" lineno="18">
<summary>
Gets the caller the mountpoint of the selinuxfs filesystem.
</summary>
<param name="domain">
<summary>
The process type requesting the selinuxfs mountpoint.
</summary>
</param>
</interface>
<interface name="selinux_dontaudit_getattr_dir" lineno="35">
<summary>
Do not audit attempts to get the
attributes of the selinuxfs directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="selinux_search_fs" lineno="53">
<summary>
Search selinuxfs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="selinux_dontaudit_search_fs" lineno="71">
<summary>
Do not audit attempts to search selinuxfs.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="selinux_dontaudit_read_fs" lineno="90">
<summary>
Do not audit attempts to read
generic selinuxfs entries
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="selinux_get_enforce_mode" lineno="110">
<summary>
Allows the caller to get the mode of policy enforcement
(enforcing or permissive mode).
</summary>
<param name="domain">
<summary>
The process type to allow to get the enforcing mode.
</summary>
</param>
</interface>
<interface name="selinux_set_enforce_mode" lineno="140">
<summary>
Allow caller to set the mode of policy enforcement
(enforcing or permissive mode).
</summary>
<desc>
<p>
Allow caller to set the mode of policy enforcement
(enforcing or permissive mode).
</p>
<p>
Since this is a security event, this action is
always audited.
</p>
</desc>
<param name="domain">
<summary>
The process type to allow to set the enforcement mode.
</summary>
</param>
</interface>
<interface name="selinux_load_policy" lineno="167">
<summary>
Allow caller to load the policy into the kernel.
</summary>
<param name="domain">
<summary>
The process type that will load the policy.
</summary>
</param>
</interface>
<interface name="selinux_set_boolean" lineno="205">
<summary>
Allow caller to set the state of Booleans to
enable or disable conditional portions of the policy.
</summary>
<desc>
<p>
Allow caller to set the state of Booleans to
enable or disable conditional portions of the policy.
</p>
<p>
Since this is a security event, this action is
always audited.
</p>
</desc>
<param name="domain">
<summary>
The process type allowed to set the Boolean.
</summary>
</param>
</interface>
<interface name="selinux_set_parameters" lineno="242">
<summary>
Allow caller to set SELinux access vector cache parameters.
</summary>
<desc>
<p>
Allow caller to set SELinux access vector cache parameters.
The allows the domain to set performance related parameters
of the AVC, such as cache threshold.
</p>
<p>
Since this is a security event, this action is
always audited.
</p>
</desc>
<param name="domain">
<summary>
The process type to allow to set security parameters.
</summary>
</param>
</interface>
<interface name="selinux_validate_context" lineno="265">
<summary>
Allows caller to validate security contexts.
</summary>
<param name="domain">
<summary>
The process type permitted to validate contexts.
</summary>
</param>
</interface>
<interface name="selinux_compute_access_vector" lineno="285">
<summary>
Allows caller to compute an access vector.
</summary>
<param name="domain">
<summary>
The process type allowed to compute an access vector.
</summary>
</param>
</interface>
<interface name="selinux_compute_create_context" lineno="305">
<summary>
Calculate the default type for object creation.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="selinux_compute_member" lineno="326">
<summary>
Allows caller to compute polyinstatntiated
directory members.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="selinux_compute_relabel_context" lineno="355">
<summary>
Calculate the context for relabeling objects.
</summary>
<desc>
<p>
Calculate the context for relabeling objects.
This is determined by using the type_change
rules in the policy, and is generally used
for determining the context for relabeling
a terminal when a user logs in.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="selinux_compute_user_contexts" lineno="375">
<summary>
Allows caller to compute possible contexts for a user.
</summary>
<param name="domain">
<summary>
The process type allowed to compute user contexts.
</summary>
</param>
</interface>
<interface name="selinux_unconfined" lineno="395">
<summary>
Unconfined access to the SELinux kernel security server.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="mls" filename="policy/modules/kernel/mls.if">
<summary>Multilevel security policy</summary>
<desc>
<p>
This module contains interfaces for handling multilevel
security.  The interfaces allow the specified subjects
and objects to be allowed certain privileges in the
MLS rules.
</p>
</desc>
<required val="true">
Contains attributes used in MLS policy.
</required>
<interface name="mls_file_read_up" lineno="25">
<summary>
Make specified domain MLS trusted
for reading from files at higher levels.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_file_write_down" lineno="44">
<summary>
Make specified domain MLS trusted
for writing to files at lower levels.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_file_upgrade" lineno="63">
<summary>
Make specified domain MLS trusted
for raising the level of files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_file_downgrade" lineno="82">
<summary>
Make specified domain MLS trusted
for lowering the level of files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_rangetrans_source" lineno="102">
<summary>
Allow the specified domain to do a MLS
range transition that changes
the current level.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_rangetrans_target" lineno="122">
<summary>
Make specified domain a target domain
for MLS range transitions that change
the current level.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_process_read_up" lineno="141">
<summary>
Make specified domain MLS trusted
for reading from processes at higher levels.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_process_write_down" lineno="160">
<summary>
Make specified domain MLS trusted
for writing to processes at lower levels.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_process_set_level" lineno="180">
<summary>
Make specified domain MLS trusted
for setting the level of processes
it executes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mls_trusted_object" lineno="210">
<summary>
Make specified object MLS trusted.
</summary>
<desc>
<p>
Make specified object MLS trusted.  This
allows all levels to read and write the
object.
</p>
<p>
This currently only applies to filesystem
objects, for example, files and directories.
</p>
</desc>
<param name="domain">
<summary>
The type of the object.
</summary>
</param>
</interface>
</module>
<module name="storage" filename="policy/modules/kernel/storage.if">
<summary>Policy controlling access to storage devices</summary>
<interface name="storage_getattr_fixed_disk_dev" lineno="14">
<summary>
Allow the caller to get the attributes of fixed disk
device nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_getattr_fixed_disk_dev" lineno="34">
<summary>
Do not audit attempts made by the caller to get
the attributes of fixed disk device nodes.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="storage_setattr_fixed_disk_dev" lineno="53">
<summary>
Allow the caller to set the attributes of fixed disk
device nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_setattr_fixed_disk_dev" lineno="73">
<summary>
Do not audit attempts made by the caller to set
the attributes of fixed disk device nodes.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="storage_raw_read_fixed_disk" lineno="94">
<summary>
Allow the caller to directly read from a fixed disk.
This is extremly dangerous as it can bypass the
SELinux protections for filesystem objects, and
should only be used by trusted domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_read_fixed_disk" lineno="116">
<summary>
Do not audit attempts made by the caller to read
fixed disk device nodes.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="storage_raw_write_fixed_disk" lineno="138">
<summary>
Allow the caller to directly write to a fixed disk.
This is extremly dangerous as it can bypass the
SELinux protections for filesystem objects, and
should only be used by trusted domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_write_fixed_disk" lineno="160">
<summary>
Do not audit attempts made by the caller to write
fixed disk device nodes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="storage_manage_fixed_disk" lineno="179">
<summary>
Create, read, write, and delete fixed disk device nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dev_filetrans_fixed_disk" lineno="201">
<summary>
Create block devices in /dev with the fixed disk type
via an automatic type transition.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_tmpfs_filetrans_fixed_disk" lineno="220">
<summary>
Create block devices in on a tmpfs filesystem with the
fixed disk type via an automatic type transition.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_relabel_fixed_disk" lineno="238">
<summary>
Relabel fixed disk device nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_swapon_fixed_disk" lineno="257">
<summary>
Enable a fixed disk device as swap space
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_getattr_scsi_generic_dev" lineno="277">
<summary>
Allow the caller to get the attributes of
the generic SCSI interface device nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_setattr_scsi_generic_dev" lineno="297">
<summary>
Allow the caller to set the attributes of
the generic SCSI interface device nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_read_scsi_generic" lineno="320">
<summary>
Allow the caller to directly read, in a
generic fashion, from any SCSI device.
This is extremly dangerous as it can bypass the
SELinux protections for filesystem objects, and
should only be used by trusted domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_write_scsi_generic" lineno="345">
<summary>
Allow the caller to directly write, in a
generic fashion, from any SCSI device.
This is extremly dangerous as it can bypass the
SELinux protections for filesystem objects, and
should only be used by trusted domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_setattr_scsi_generic_dev_dev" lineno="367">
<summary>
Set attributes of the device nodes
for the SCSI generic inerface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_rw_scsi_generic" lineno="387">
<summary>
Do not audit attempts to read or write
SCSI generic device interfaces.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="storage_getattr_removable_dev" lineno="406">
<summary>
Allow the caller to get the attributes of removable
devices device nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_getattr_removable_dev" lineno="426">
<summary>
Do not audit attempts made by the caller to get
the attributes of removable devices device nodes.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_read_removable_device" lineno="445">
<summary>
Do not audit attempts made by the caller to read
removable devices device nodes.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="storage_setattr_removable_dev" lineno="465">
<summary>
Allow the caller to set the attributes of removable
devices device nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_setattr_removable_dev" lineno="485">
<summary>
Do not audit attempts made by the caller to set
the attributes of removable devices device nodes.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="storage_raw_read_removable_device" lineno="507">
<summary>
Allow the caller to directly read from
a removable device.
This is extremly dangerous as it can bypass the
SELinux protections for filesystem objects, and
should only be used by trusted domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_raw_read_removable_device" lineno="526">
<summary>
Do not audit attempts to directly read removable devices.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="storage_raw_write_removable_device" lineno="548">
<summary>
Allow the caller to directly write to
a removable device.
This is extremly dangerous as it can bypass the
SELinux protections for filesystem objects, and
should only be used by trusted domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_dontaudit_raw_write_removable_device" lineno="567">
<summary>
Do not audit attempts to directly write removable devices.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="storage_read_tape" lineno="586">
<summary>
Allow the caller to directly read
a tape device.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_write_tape" lineno="606">
<summary>
Allow the caller to directly read
a tape device.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_getattr_tape_dev" lineno="626">
<summary>
Allow the caller to get the attributes
of device nodes of tape devices.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_setattr_tape_dev" lineno="646">
<summary>
Allow the caller to set the attributes
of device nodes of tape devices.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="storage_unconfined" lineno="665">
<summary>
Unconfined access to storage devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="devices" filename="policy/modules/kernel/devices.if">
<summary>
Device nodes and interfaces for many basic system devices.
</summary>
<desc>
<p>
This module creates the device node concept and provides
the policy for many of the device files. Notable exceptions are
the mass storage and terminal devices that are covered by other
modules.
</p>
<p>
This module creates the concept of a device node. That is a
char or block device file, usually in /dev. All types that
are used to label device nodes should use the dev_node macro.
</p>
<p>
Additionally, this module controls access to three things:
<ul>
<li>the device directories containing device nodes</li>
<li>device nodes as a group</li>
<li>individual access to specific device nodes covered by
this module.</li>
</ul>
</p>
</desc>
<required val="true">
Depended on by other required modules.
</required>
<interface name="dev_node" lineno="41">
<summary>
Make the passed in type a type appropriate for
use on device nodes (usually files in /dev).
</summary>
<param name="object_type">
<summary>
The object type that will be used on device nodes.
</summary>
</param>
</interface>
<interface name="dev_relabel_all_dev_nodes" lineno="63">
<summary>
Allow full relabeling (to and from) of all device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed to relabel.
</summary>
</param>
</interface>
<interface name="dev_list_all_dev_nodes" lineno="88">
<summary>
List all of the device nodes in a device directory.
</summary>
<param name="domain">
<summary>
Domain allowed to list device nodes.
</summary>
</param>
</interface>
<interface name="dev_setattr_generic_dirs" lineno="107">
<summary>
Set the attributes of /dev directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_list_all_dev_nodes" lineno="125">
<summary>
Dontaudit attempts to list all device nodes.
</summary>
<param name="domain">
<summary>
Domain to dontaudit listing of device nodes.
</summary>
</param>
</interface>
<interface name="dev_create_generic_dirs" lineno="143">
<summary>
Create a directory in the device directory.
</summary>
<param name="domain">
<summary>
Domain allowed to create the directory.
</summary>
</param>
</interface>
<interface name="dev_relabel_generic_dev_dirs" lineno="161">
<summary>
Allow full relabeling (to and from) of directories in /dev.
</summary>
<param name="domain">
<summary>
Domain allowed to relabel.
</summary>
</param>
</interface>
<interface name="dev_rw_generic_files" lineno="179">
<summary>
Read and write generic files in /dev.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_delete_generic_files" lineno="198">
<summary>
Delete generic files in /dev.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_manage_generic_files" lineno="217">
<summary>
Create a file in the device directory.
</summary>
<param name="domain">
<summary>
Domain allowed to create the files.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_generic_pipes" lineno="236">
<summary>
Dontaudit getattr on generic pipes.
</summary>
<param name="domain">
<summary>
Domain to dontaudit.
</summary>
</param>
</interface>
<interface name="dev_getattr_generic_blk_files" lineno="254">
<summary>
Allow getattr on generic block devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_generic_blk_files" lineno="273">
<summary>
Dontaudit getattr on generic block devices.
</summary>
<param name="domain">
<summary>
Domain to dontaudit access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_setattr_generic_blk_files" lineno="291">
<summary>
Dontaudit setattr on generic block devices.
</summary>
<param name="domain">
<summary>
Domain to dontaudit access.
</summary>
</param>
</interface>
<interface name="dev_create_generic_chr_files" lineno="309">
<summary>
Allow read, write, and create for generic character device files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_generic_chr_files" lineno="330">
<summary>
Allow getattr for generic character device files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_generic_chr_files" lineno="349">
<summary>
Dontaudit getattr for generic character device files.
</summary>
<param name="domain">
<summary>
Domain to dontaudit access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_setattr_generic_chr_files" lineno="367">
<summary>
Dontaudit setattr for generic character device files.
</summary>
<param name="domain">
<summary>
Domain to dontaudit access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_setattr_generic_symlinks" lineno="386">
<summary>
Do not audit attempts to set the attributes
of symbolic links in device directories (/dev).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_delete_generic_symlinks" lineno="404">
<summary>
Delete symbolic links in device directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_manage_generic_symlinks" lineno="423">
<summary>
Create, delete, read, and write symbolic links in device directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_relabel_generic_symlinks" lineno="442">
<summary>
Relabel symbolic links in device directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_manage_all_dev_nodes" lineno="461">
<summary>
Create, delete, read, and write device nodes in device directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_rw_generic_dev_nodes" lineno="494">
<summary>
Dontaudit getattr for generic device files.
</summary>
<param name="domain">
<summary>
Domain to dontaudit access.
</summary>
</param>
</interface>
<interface name="dev_manage_generic_blk_files" lineno="512">
<summary>
Create, delete, read, and write block device files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_manage_generic_chr_files" lineno="531">
<summary>
Create, delete, read, and write character device files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_filetrans" lineno="562">
<summary>
Create, read, and write device nodes. The node
will be transitioned to the type provided.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file">
<summary>
Type to which the created node will be transitioned.
</summary>
</param>
<param name="objectclass(es)">
<summary>
Object class(es) (single or set including {}) for which this
the transition will occur.
</summary>
</param>
</interface>
<interface name="dev_getattr_all_blk_files" lineno="584">
<summary>
Getattr on all block file device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_all_blk_files" lineno="603">
<summary>
Dontaudit getattr on all block file device nodes.
</summary>
<param name="domain">
<summary>
Domain to dontaudit access.
</summary>
</param>
</interface>
<interface name="dev_getattr_all_chr_files" lineno="621">
<summary>
Getattr on all character file device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_all_chr_files" lineno="640">
<summary>
Dontaudit getattr on all character file device nodes.
</summary>
<param name="domain">
<summary>
Domain to dontaudit access.
</summary>
</param>
</interface>
<interface name="dev_setattr_all_blk_files" lineno="658">
<summary>
Setattr on all block file device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_all_chr_files" lineno="677">
<summary>
Setattr on all character file device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_read_all_blk_files" lineno="696">
<summary>
Dontaudit read on all block file device nodes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_read_all_chr_files" lineno="714">
<summary>
Dontaudit read on all character file device nodes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_manage_all_blk_files" lineno="732">
<summary>
Read, write, create, and delete all block device files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_manage_all_chr_files" lineno="757">
<summary>
Read, write, create, and delete all character device files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_agp_dev" lineno="778">
<summary>
Getattr the agp devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_agp" lineno="797">
<summary>
Read and write the agp devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_apm_bios_dev" lineno="816">
<summary>
Get the attributes of the apm bios device node.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_apm_bios_dev" lineno="836">
<summary>
Do not audit attempts to get the attributes of
the apm bios device node.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_setattr_apm_bios_dev" lineno="854">
<summary>
Set the attributes of the apm bios device node.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_setattr_apm_bios_dev" lineno="874">
<summary>
Do not audit attempts to set the attributes of
the apm bios device node.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_rw_apm_bios" lineno="892">
<summary>
Read and write the apm bios.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_cardmgr" lineno="911">
<summary>
Read and write the PCMCIA card manager device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_rw_cardmgr" lineno="931">
<summary>
Do not audit attempts to read and
write the PCMCIA card manager device.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_manage_cardmgr_dev" lineno="950">
<summary>
Create, read, write, and delete
the PCMCIA card manager device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_create_cardmgr_dev" lineno="971">
<summary>
Create, read, write, and delete
the PCMCIA card manager device
with the correct type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_cpu_dev" lineno="992">
<summary>
Get the attributes of the CPU
microcode and id interfaces.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_cpuid" lineno="1011">
<summary>
Read the CPU identity.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_cpu_microcode" lineno="1031">
<summary>
Read and write the the CPU microcode device. This
is required to load CPU microcode.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_crypto" lineno="1050">
<summary>
Read and write the the hardware SSL accelerator.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_dri_dev" lineno="1069">
<summary>
getattr the dri devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_dri_dev" lineno="1088">
<summary>
Setattr the dri devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_dri" lineno="1107">
<summary>
Read and write the dri devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_rw_dri" lineno="1126">
<summary>
Dontaudit read and write on the dri devices.
</summary>
<param name="domain">
<summary>
Domain to dontaudit access.
</summary>
</param>
</interface>
<interface name="dev_manage_dri_dev" lineno="1144">
<summary>
Create, read, write, and delete the dri devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_input" lineno="1164">
<summary>
Read input event devices (/dev/input).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_input_dev" lineno="1183">
<summary>
Read input event devices (/dev/input).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_framebuffer_dev" lineno="1202">
<summary>
Get the attributes of the framebuffer device node.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_framebuffer_dev" lineno="1221">
<summary>
Set the attributes of the framebuffer device node.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_setattr_framebuffer_dev" lineno="1241">
<summary>
Dot not audit attempts to set the attributes
of the framebuffer device node.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_read_framebuffer" lineno="1259">
<summary>
Read the framebuffer.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_read_framebuffer" lineno="1278">
<summary>
Do not audit attempts to read the framebuffer.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_framebuffer" lineno="1296">
<summary>
Write the framebuffer.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_framebuffer" lineno="1315">
<summary>
Read and write the framebuffer.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_lvm_control" lineno="1334">
<summary>
Read the lvm comtrol device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_lvm_control" lineno="1353">
<summary>
Read and write the lvm control device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_delete_lvm_control_dev" lineno="1372">
<summary>
Delete the lvm control device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_memory_dev" lineno="1391">
<summary>
dontaudit getattr raw memory devices (e.g. /dev/mem).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_raw_memory" lineno="1409">
<summary>
Read raw memory devices (e.g. /dev/mem).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_raw_memory" lineno="1432">
<summary>
Write raw memory devices (e.g. /dev/mem).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rx_raw_memory" lineno="1455">
<summary>
Read and execute raw memory devices (e.g. /dev/mem).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_wx_raw_memory" lineno="1474">
<summary>
Write and execute raw memory devices (e.g. /dev/mem).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_misc_dev" lineno="1493">
<summary>
Get the attributes of miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_misc_dev" lineno="1513">
<summary>
Do not audit attempts to get the attributes
of miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_misc_dev" lineno="1531">
<summary>
Set the attributes of miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_setattr_misc_dev" lineno="1551">
<summary>
Do not audit attempts to set the attributes
of miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_misc" lineno="1569">
<summary>
Read miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_misc" lineno="1588">
<summary>
Write miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_rw_misc" lineno="1607">
<summary>
Do not audit attempts to read and write miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_mouse_dev" lineno="1625">
<summary>
Get the attributes of the mouse devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_mouse_dev" lineno="1644">
<summary>
Set the attributes of the mouse devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_mouse" lineno="1663">
<summary>
Read the mouse devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_mouse" lineno="1682">
<summary>
Read and write to mouse devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_mtrr_dev" lineno="1701">
<summary>
Get the attributes of the mtrr device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_mtrr" lineno="1722">
<summary>
Read the mtrr device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_mtrr" lineno="1741">
<summary>
Write the mtrr device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_mtrr" lineno="1760">
<summary>
Read and write the mtrr device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_null" lineno="1775">
<summary>
Read and write to the null device (/dev/null).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_printer_dev" lineno="1794">
<summary>
Set the attributes of the printer device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_append_printer" lineno="1814">
<summary>
Append the printer device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_printer" lineno="1833">
<summary>
Read and write the printer device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_rand" lineno="1853">
<summary>
Read from random number generator
devices (e.g., /dev/random)
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_read_rand" lineno="1873">
<summary>
Do not audit attempts to read from random
number generator devices (e.g., /dev/random)
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_rand" lineno="1893">
<summary>
Write to the random device (e.g., /dev/random). This adds
entropy used to generate the random data read from the
random device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_realtime_clock" lineno="1912">
<summary>
Read the realtime clock (/dev/rtc).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_realtime_clock" lineno="1931">
<summary>
Set the realtime clock (/dev/rtc).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_realtime_clock" lineno="1950">
<summary>
Read and set the realtime clock (/dev/rtc).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_scanner_dev" lineno="1965">
<summary>
Get the attributes of the scanner device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_scanner_dev" lineno="1985">
<summary>
Do not audit attempts to get the attributes of
the scanner device.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_setattr_scanner_dev" lineno="2003">
<summary>
Set the attributes of the scanner device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_setattr_scanner_dev" lineno="2023">
<summary>
Do not audit attempts to set the attributes of
the scanner device.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_rw_scanner" lineno="2041">
<summary>
Read and write the scanner device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_sound_dev" lineno="2060">
<summary>
Get the attributes of the sound devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_sound_dev" lineno="2079">
<summary>
Set the attributes of the sound devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_sound" lineno="2098">
<summary>
Read the sound devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_sound" lineno="2117">
<summary>
Write the sound devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_read_sound_mixer" lineno="2136">
<summary>
Read the sound mixer devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_sound_mixer" lineno="2155">
<summary>
Write the sound mixer devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_power_mgmt_dev" lineno="2174">
<summary>
Get the attributes of the the power management device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_power_mgmt_dev" lineno="2193">
<summary>
Set the attributes of the the power management device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_power_management" lineno="2212">
<summary>
Read and write the the power management device.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_getattr_sysfs_dirs" lineno="2231">
<summary>
Get the attributes of sysfs directories.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="dev_search_sysfs" lineno="2249">
<summary>
Search the sysfs directories.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_search_sysfs" lineno="2267">
<summary>
Do not audit attempts to search sysfs.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="dev_list_sysfs" lineno="2285">
<summary>
List the contents of the sysfs directories.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="dev_read_sysfs" lineno="2303">
<summary>
Allow caller to read hardware state information.
</summary>
<param name="domain">
<summary>
The process type reading hardware state information.
</summary>
</param>
</interface>
<interface name="dev_rw_sysfs" lineno="2322">
<summary>
Allow caller to modify hardware state information.
</summary>
<param name="domain">
<summary>
The process type modifying hardware state information.
</summary>
</param>
</interface>
<interface name="dev_read_urand" lineno="2342">
<summary>
Read from pseudo random devices (e.g., /dev/urandom)
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_write_urand" lineno="2362">
<summary>
Write to the pseudo random device (e.g., /dev/urandom). This
sets the random number generator seed.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_generic_usb_dev" lineno="2381">
<summary>
Read and write generic the USB devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_mount_usbfs" lineno="2400">
<summary>
Mount a usbfs filesystem.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="dev_associate_usbfs" lineno="2418">
<summary>
Associate a file to a usbfs filesystem.
</summary>
<param name="file_type">
<summary>
The type of the file to be associated to usbfs.
</summary>
</param>
</interface>
<interface name="dev_getattr_usbfs_dirs" lineno="2436">
<summary>
Get the attributes of a directory in the usb filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_usbfs_dirs" lineno="2455">
<summary>
Do not audit attempts to get the attributes
of a directory in the usb filesystem.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_search_usbfs" lineno="2473">
<summary>
Search the directory containing USB hardware information.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="dev_list_usbfs" lineno="2491">
<summary>
Allow caller to get a list of usb hardware.
</summary>
<param name="domain">
<summary>
The process type getting the list.
</summary>
</param>
</interface>
<interface name="dev_read_usbfs" lineno="2512">
<summary>
Read USB hardware information using
the usbfs filesystem interface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="dev_rw_usbfs" lineno="2531">
<summary>
Allow caller to modify usb hardware configuration files.
</summary>
<param name="domain">
<summary>
The process type modifying the options.
</summary>
</param>
</interface>
<interface name="dev_getattr_video_dev" lineno="2551">
<summary>
Get the attributes of video4linux devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_getattr_video_dev" lineno="2571">
<summary>
Do not audit attempts to get the attributes
of video4linux device nodes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_setattr_video_dev" lineno="2589">
<summary>
Set the attributes of video4linux device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_dontaudit_setattr_video_dev" lineno="2609">
<summary>
Do not audit attempts to set the attributes
of video4linux device nodes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="dev_getattr_xserver_misc_dev" lineno="2627">
<summary>
Get the attributes of X server miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_setattr_xserver_misc_dev" lineno="2646">
<summary>
Set the attributes of X server miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_xserver_misc" lineno="2665">
<summary>
Read and write X server miscellaneous devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rw_zero" lineno="2684">
<summary>
Read and write to the zero device (/dev/zero).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_rwx_zero" lineno="2703">
<summary>
Read, write, and execute the zero device (/dev/zero).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dev_unconfined" lineno="2722">
<summary>
Unconfined access to devices.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="corecommands" filename="policy/modules/kernel/corecommands.if">
<summary>
Core policy for shells, and generic programs
in /bin, /sbin, /usr/bin, and /usr/sbin.
</summary>
<required val="true">
Contains the base bin and sbin directory types
which need to be searched for the kernel to
run init.
</required>
<interface name="corecmd_bin_alias" lineno="30">
<summary>
Create a aliased type to generic bin files.
</summary>
<desc>
<p>
Create a aliased type to generic bin files.
</p>
<p>
This is added to support targeted policy.  Its
use should be limited.  It has no effect
on the strict policy.
</p>
</desc>
<param name="domain">
<summary>
Alias type for bin_t.
</summary>
</param>
</interface>
<interface name="corecmd_shell_entry_type" lineno="51">
<summary>
Make the shell an entrypoint for the specified domain.
</summary>
<param name="domain">
<summary>
The domain for which the shell is an entrypoint.
</summary>
</param>
</interface>
<interface name="corecmd_search_bin" lineno="63">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_list_bin" lineno="75">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_getattr_bin_files" lineno="93">
<summary>
Get the attributes of files in bin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_read_bin_files" lineno="111">
<summary>
Read files in bin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_read_bin_symlinks" lineno="130">
<summary>
Read symbolic links in bin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_read_bin_pipes" lineno="149">
<summary>
Read pipes in bin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_read_bin_sockets" lineno="168">
<summary>
Read named sockets in bin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_exec_bin" lineno="181">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_manage_bin_files" lineno="202">
<summary>
Create, read, write, and delete bin files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_relabel_bin_files" lineno="221">
<summary>
Relabel to and from the bin type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_mmap_bin_files" lineno="240">
<summary>
Mmap a bin file as executable.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_bin_spec_domtrans" lineno="285">
<summary>
Execute a file in a bin directory
in the specified domain but do not
do it automatically. This is an explicit
transition, requiring the caller to use setexeccon().
</summary>
<desc>
<p>
Execute a file in a bin directory
in the specified domain.  This allows
the specified domain to execute any file
on these filesystems in the specified
domain.  This is not suggested.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
<p>
This interface was added to handle
the userhelper policy.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the new process.
</summary>
</param>
</interface>
<interface name="corecmd_bin_domtrans" lineno="330">
<summary>
Execute a file in a bin directory
in the specified domain.
</summary>
<desc>
<p>
Execute a file in a bin directory
in the specified domain.  This allows
the specified domain to execute any file
on these filesystems in the specified
domain.  This is not suggested.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
<p>
This interface was added to handle
the ssh-agent policy.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the new process.
</summary>
</param>
</interface>
<interface name="corecmd_search_sbin" lineno="343">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_dontaudit_search_sbin" lineno="362">
<summary>
Do not audit attempts to search
sbin directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="corecmd_list_sbin" lineno="374">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_getattr_sbin_files" lineno="386">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_dontaudit_getattr_sbin_files" lineno="398">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_read_sbin_files" lineno="416">
<summary>
Read files in sbin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_read_sbin_symlinks" lineno="435">
<summary>
Read symbolic links in sbin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_read_sbin_pipes" lineno="454">
<summary>
Read named pipes in sbin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_read_sbin_sockets" lineno="473">
<summary>
Read named sockets in sbin directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_exec_sbin" lineno="486">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_manage_sbin_files" lineno="507">
<summary>
Create, read, write, and delete sbin files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_relabel_sbin_files" lineno="527">
<summary>
Relabel to and from the sbin type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_mmap_sbin_files" lineno="547">
<summary>
Mmap a sbin file as executable.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_sbin_domtrans" lineno="590">
<summary>
Execute a file in a sbin directory
in the specified domain.
</summary>
<desc>
<p>
Execute a file in a sbin directory
in the specified domain.  This allows
the specified domain to execute any file
on these filesystems in the specified
domain.  This is not suggested.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
<p>
This interface was added to handle
the ssh-agent policy.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the new process.
</summary>
</param>
</interface>
<interface name="corecmd_sbin_spec_domtrans" lineno="637">
<summary>
Execute a file in a sbin directory
in the specified domain but do not
do it automatically. This is an explicit
transition, requiring the caller to use setexeccon().
</summary>
<desc>
<p>
Execute a file in a sbin directory
in the specified domain.  This allows
the specified domain to execute any file
on these filesystems in the specified
domain.  This is not suggested.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
<p>
This interface was added to handle
the userhelper policy.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the new process.
</summary>
</param>
</interface>
<interface name="corecmd_check_exec_shell" lineno="658">
<summary>
Check if a shell is executable (DAC-wise).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corecmd_exec_shell" lineno="672">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_exec_ls" lineno="686">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="corecmd_shell_spec_domtrans" lineno="725">
<summary>
Execute a shell in the target domain.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<desc>
<p>
Execute a shell in the target domain.  This
is an explicit transition, requiring the
caller to use setexeccon().
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the shell process.
</summary>
</param>
</interface>
<interface name="corecmd_shell_domtrans" lineno="761">
<summary>
Execute a shell in the specified domain.
</summary>
<desc>
<p>
Execute a shell in the specified domain.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the shell process.
</summary>
</param>
</interface>
<interface name="corecmd_exec_chroot" lineno="774">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
</module>
<module name="files" filename="policy/modules/kernel/files.if">
<summary>
Basic filesystem types and interfaces.
</summary>
<desc>
<p>
This module contains basic filesystem types and interfaces. This
includes:
<ul>
<li>The concept of different file types including basic
files, mount points, tmp files, etc.</li>
<li>Access to groups of files and all files.</li>
<li>Types and interfaces for the basic filesystem layout
(/, /etc, /tmp, /usr, etc.).</li>
</ul>
</p>
</desc>
<required val="true">
Contains the concept of a file.
Comains the file initial SID.
</required>
<interface name="files_type" lineno="33">
<summary>
Make the specified type usable for files
in a filesystem.
</summary>
<param name="type">
<summary>
Type to be used for files.
</summary>
</param>
</interface>
<interface name="files_lock_file" lineno="47">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_mountpoint" lineno="60">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_pid_file" lineno="73">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_config_file" lineno="93">
<summary>
Make the specified type a
configuration file.
</summary>
<param name="file_type">
<summary>
Type to be used as a configuration file.
</summary>
</param>
</interface>
<interface name="files_poly" lineno="116">
<summary>
Make the specified type a
polyinstantiated directory.
</summary>
<param name="file_type">
<summary>
Type of the file to be used as a
polyinstantiated directory.
</summary>
</param>
</interface>
<interface name="files_poly_parent" lineno="137">
<summary>
Make the specified type a parent
of a polyinstantiated directory.
</summary>
<param name="file_type">
<summary>
Type of the file to be used as a
parent directory.
</summary>
</param>
</interface>
<interface name="files_poly_member" lineno="158">
<summary>
Make the specified type a
polyinstantiation member directory.
</summary>
<param name="file_type">
<summary>
Type of the file to be used as a
member directory.
</summary>
</param>
</interface>
<interface name="files_poly_member_tmp" lineno="185">
<summary>
Make the domain use the specified
type of polyinstantiated directory.
</summary>
<param name="domain">
<summary>
Domain using the polyinstantiated
directory.
</summary>
</param>
<param name="file_type">
<summary>
Type of the file to be used as a
member directory.
</summary>
</param>
</interface>
<interface name="files_security_file" lineno="206">
<summary>
Make the specified type a file that
should not be dontaudited from
browsing from user domains.
</summary>
<param name="file_type">
<summary>
Type of the file to be used as a
member directory.
</summary>
</param>
</interface>
<interface name="files_tmp_file" lineno="227">
<summary>
Make the specified type a file
used for temporary files.
</summary>
<param name="file_type">
<summary>
Type of the file to be used as a
temporary file.
</summary>
</param>
</interface>
<interface name="files_tmpfs_file" lineno="251">
<summary>
Transform the type into a file, for use on a
virtual memory filesystem (tmpfs).
</summary>
<param name="type">
<summary>
The type to be transformed.
</summary>
</param>
</interface>
<interface name="files_getattr_all_dirs" lineno="274">
<summary>
Get the attributes of all directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_all_dirs" lineno="293">
<summary>
Do not audit attempts to get the attributes
of all directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_list_non_security" lineno="311">
<summary>
List all non-security directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_list_non_security" lineno="330">
<summary>
Do not audit attempts to list all
non-security directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_getattr_all_files" lineno="348">
<summary>
Get the attributes of all files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_all_files" lineno="369">
<summary>
Do not audit attempts to get the attributes
of all files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_non_security_files" lineno="388">
<summary>
Do not audit attempts to get the attributes
of non security files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_read_all_files" lineno="406">
<summary>
Read all files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_non_security_files" lineno="429">
<summary>
Read all non-security files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_all_dirs_except" lineno="456">
<summary>
Read all directories on the filesystem, except
the listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="files_read_all_files_except" lineno="481">
<summary>
Read all files on the filesystem, except
the listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="files_read_all_symlinks_except" lineno="508">
<summary>
Read all symbolic links on the filesystem, except
the listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="files_getattr_all_symlinks" lineno="528">
<summary>
Get the attributes of all symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_all_symlinks" lineno="548">
<summary>
Do not audit attempts to get the attributes
of all symbolic links.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_non_security_symlinks" lineno="567">
<summary>
Do not audit attempts to get the attributes
of non security symbolic links.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_non_security_blk_files" lineno="586">
<summary>
Do not audit attempts to get the attributes
of non security block devices.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_non_security_chr_files" lineno="605">
<summary>
Do not audit attempts to get the attributes
of non security character devices.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_read_all_symlinks" lineno="623">
<summary>
Read all symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_getattr_all_pipes" lineno="642">
<summary>
Get the attributes of all named pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_all_pipes" lineno="662">
<summary>
Do not audit attempts to get the attributes
of all named pipes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_non_security_pipes" lineno="681">
<summary>
Do not audit attempts to get the attributes
of non security named pipes.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_getattr_all_sockets" lineno="699">
<summary>
Get the attributes of all named sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_all_sockets" lineno="719">
<summary>
Do not audit attempts to get the attributes
of all named sockets.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_non_security_sockets" lineno="738">
<summary>
Do not audit attempts to get the attributes
of non security named sockets.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_read_all_blk_files" lineno="756">
<summary>
Read all block nodes with file types.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_all_chr_files" lineno="775">
<summary>
Read all character nodes with file types.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_relabel_all_files" lineno="801">
<summary>
Relabel all files on the filesystem, except
the listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="files_manage_all_files" lineno="835">
<summary>
Manage all files on the filesystem, except
the listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="files_search_all" lineno="855">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_list_all" lineno="867">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_all_dirs" lineno="879">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_relabelto_all_file_type_fs" lineno="891">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_mount_all_file_type_fs" lineno="903">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_unmount_all_file_type_fs" lineno="915">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_mounton_all_mountpoints" lineno="927">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_list_root" lineno="940">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_root_filetrans" lineno="970">
<summary>
Create an object in the root directory, with a private
type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object">
<summary>
The object class of the object being created.
</summary>
</param>
</interface>
<interface name="files_dontaudit_read_root_files" lineno="983">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_dontaudit_rw_root_files" lineno="995">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_dontaudit_rw_root_chr_files" lineno="1007">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_delete_root_dir_entry" lineno="1019">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_unmount_rootfs" lineno="1031">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_getattr_boot_dirs" lineno="1049">
<summary>
Get attributes of the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_boot_dirs" lineno="1068">
<summary>
Do not audit attempts to get attributes
of the /boot directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_search_boot" lineno="1086">
<summary>
Search the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_boot" lineno="1104">
<summary>
Do not audit attempts to search the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_create_boot_dirs" lineno="1122">
<summary>
Create directories in /boot
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_boot_filetrans" lineno="1151">
<summary>
Create a private type object in boot
with an automatic type transition
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object_class">
<summary>
The object class of the object being created.
</summary>
</param>
</interface>
<interface name="files_manage_boot_files" lineno="1171">
<summary>
Create, read, write, and delete files
in the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_relabelfrom_boot_files" lineno="1190">
<summary>
Relabel from files in the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_rw_boot_symlinks" lineno="1209">
<summary>
Read and write symbolic links
in the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_boot_symlinks" lineno="1229">
<summary>
Create, read, write, and delete symbolic links
in the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_create_kernel_img" lineno="1248">
<summary>
Install a kernel into the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_delete_kernel" lineno="1268">
<summary>
Delete a kernel from /boot.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_getattr_default_dirs" lineno="1287">
<summary>
Getattr of directories with the default file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_default_dirs" lineno="1306">
<summary>
Do not audit attempts to get the attributes of
directories with the default file type.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_search_default" lineno="1324">
<summary>
Search the contents of directories with the default file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_list_default" lineno="1342">
<summary>
List contents of directories with the default file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_list_default" lineno="1361">
<summary>
Do not audit attempts to list contents of
directories with the default file type.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_mounton_default" lineno="1379">
<summary>
Mount a filesystem on a directory with the default file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_default_files" lineno="1398">
<summary>
Do not audit attempts to get the attributes of
files with the default file type.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_read_default_files" lineno="1416">
<summary>
Read files with the default file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_read_default_files" lineno="1435">
<summary>
Do not audit attempts to read files
with the default file type.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_read_default_symlinks" lineno="1453">
<summary>
Read symbolic links with the default file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_default_sockets" lineno="1471">
<summary>
Read sockets with the default file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_default_pipes" lineno="1489">
<summary>
Read named pipes with the default file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_search_etc" lineno="1501">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_setattr_etc_dirs" lineno="1519">
<summary>
Set the attributes of the /etc directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_list_etc" lineno="1531">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_read_etc_files" lineno="1543">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_rw_etc_files" lineno="1557">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_manage_etc_files" lineno="1571">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_delete_etc_files" lineno="1591">
<summary>
Delete system configuration files in /etc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_exec_etc_files" lineno="1604">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_relabel_etc_files" lineno="1625">
<summary>
Relabel from and to generic files in /etc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_create_boot_flag" lineno="1640">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_read_etc_runtime_files" lineno="1661">
<summary>
Read files in /etc that are dynamically
created on boot, such as mtab.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_read_etc_runtime_files" lineno="1683">
<summary>
Do not audit attempts to read files
in /etc that are dynamically
created on boot, such as mtab.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_rw_etc_runtime_files" lineno="1702">
<summary>
Read and write files in /etc that are dynamically
created on boot, such as mtab.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_etc_runtime_files" lineno="1723">
<summary>
Create, read, write, and delete files in
/etc that are dynamically created on boot,
such as mtab.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_etc_filetrans" lineno="1737">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_getattr_isid_type_dirs" lineno="1757">
<summary>
Getattr of directories on new filesystems
that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_isid_type_dirs" lineno="1776">
<summary>
Do not audit attempts to search directories on new filesystems
that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_list_isid_type_dirs" lineno="1795">
<summary>
List the contents of directories on new filesystems
that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_rw_isid_type_dirs" lineno="1814">
<summary>
Read and write directories on new filesystems
that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_isid_type_dirs" lineno="1833">
<summary>
Create, read, write, and delete directories
on new filesystems that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_mounton_isid_type_dirs" lineno="1852">
<summary>
Mount a filesystem on a directory on new filesystems
that has not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_isid_type_files" lineno="1871">
<summary>
Read files on new filesystems
that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_isid_type_files" lineno="1891">
<summary>
Create, read, write, and delete files
on new filesystems that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_isid_type_symlinks" lineno="1911">
<summary>
Create, read, write, and delete symbolic links
on new filesystems that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_rw_isid_type_blk_files" lineno="1931">
<summary>
Read and write block device nodes on new filesystems
that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_isid_type_blk_files" lineno="1951">
<summary>
Create, read, write, and delete block device nodes
on new filesystems that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_isid_type_chr_files" lineno="1971">
<summary>
Create, read, write, and delete character device nodes
on new filesystems that have not yet been labeled.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_getattr_home_dir" lineno="1991">
<summary>
Get the attributes of the home directories root
(/home).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_home_dir" lineno="2011">
<summary>
Do not audit attempts to get the
attributes of the home directories root
(/home).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_search_home" lineno="2029">
<summary>
Search home directories root (/home).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_home" lineno="2048">
<summary>
Do not audit attempts to search
home directories root (/home).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_dontaudit_list_home" lineno="2067">
<summary>
Do not audit attempts to list
home directories root (/home).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_list_home" lineno="2085">
<summary>
Get listing of home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_home_filetrans" lineno="2113">
<summary>
Create objects in /home.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="home_type">
<summary>
The private type.
</summary>
</param>
<param name="object">
<summary>
The class of the object being created.
</summary>
</param>
</interface>
<interface name="files_manage_lost_found" lineno="2133">
<summary>
Create, read, write, and delete objects in
lost+found directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_search_mnt" lineno="2149">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_list_mnt" lineno="2161">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_mounton_mnt" lineno="2179">
<summary>
Mount a filesystem on /mnt.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_mnt_dirs" lineno="2197">
<summary>
Create, read, write, and delete directories in /mnt.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_mnt_files" lineno="2215">
<summary>
Create, read, write, and delete files in /mnt.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_mnt_symlinks" lineno="2234">
<summary>
Create, read, write, and delete symbolic links in /mnt.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_search_kernel_modules" lineno="2253">
<summary>
Search the contents of the kernel module directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_list_kernel_modules" lineno="2271">
<summary>
List the contents of the kernel module directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_getattr_kernel_modules" lineno="2289">
<summary>
Get the attributes of kernel module files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_kernel_modules" lineno="2308">
<summary>
Read kernel module files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_write_kernel_modules" lineno="2328">
<summary>
Write kernel module files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_delete_kernel_modules" lineno="2347">
<summary>
Delete kernel module files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_kernel_modules" lineno="2367">
<summary>
Create, read, write, and delete
kernel module files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_relabel_kernel_modules" lineno="2386">
<summary>
Relabel from and to kernel module files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_kernel_modules_filetrans" lineno="2416">
<summary>
Create objects in the kernel module directories
with a private type via an automatic type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object_class">
<summary>
The object class of the object being created.
</summary>
</param>
</interface>
<interface name="files_list_world_readable" lineno="2435">
<summary>
List world-readable directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_world_readable_files" lineno="2453">
<summary>
Read world-readable files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_world_readable_symlinks" lineno="2471">
<summary>
Read world-readable symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_world_readable_pipes" lineno="2489">
<summary>
Read world-readable named pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_world_readable_sockets" lineno="2507">
<summary>
Read world-readable sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_associate_tmp" lineno="2527">
<summary>
Allow the specified type to associate
to a filesystem with the type of the
temporary directory (/tmp).
</summary>
<param name="file_type">
<summary>
Type of the file to associate.
</summary>
</param>
</interface>
<interface name="files_getattr_tmp_dirs" lineno="2545">
<summary>
Get the	attributes of the tmp directory (/tmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_tmp_dirs" lineno="2564">
<summary>
Do not audit attempts to get the
attributes of the tmp directory (/tmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_search_tmp" lineno="2582">
<summary>
Search the tmp directory (/tmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_list_tmp" lineno="2600">
<summary>
Read the tmp directory (/tmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_list_tmp" lineno="2618">
<summary>
Do not audit listing of the tmp directory (/tmp).
</summary>
<param name="domain">
<summary>
Domain not to audit.
</summary>
</param>
</interface>
<interface name="files_read_generic_tmp_files" lineno="2636">
<summary>
Read files in the tmp directory (/tmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_generic_tmp_symlinks" lineno="2655">
<summary>
Read symbolic links in the tmp directory (/tmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_rw_generic_tmp_sockets" lineno="2674">
<summary>
Read and write generic named sockets in the tmp directory (/tmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_setattr_all_tmp_dirs" lineno="2693">
<summary>
Set the attributes of all tmp directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_tmp_filetrans" lineno="2705">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_purge_tmp" lineno="2718">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_search_usr" lineno="2731">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_list_usr" lineno="2750">
<summary>
List the contents of generic
directories in /usr.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_getattr_usr_files" lineno="2768">
<summary>
Get the attributes of files in /usr.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_usr_files" lineno="2781">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_exec_usr_files" lineno="2800">
<summary>
Execute generic programs in /usr in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_relabelto_usr_files" lineno="2821">
<summary>
Relabel a file to the type used in /usr.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_usr_symlinks" lineno="2839">
<summary>
Read symbolic links in /usr.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_usr_filetrans" lineno="2868">
<summary>
Create objects in the /usr directory
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file_type">
<summary>
The type of the object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
</interface>
<interface name="files_exec_usr_src_files" lineno="2887">
<summary>
Execute programs in /usr/src in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_src" lineno="2902">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_read_usr_src_files" lineno="2914">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_create_kernel_symbol_table" lineno="2934">
<summary>
Install a system.map into the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_kernel_symbol_table" lineno="2953">
<summary>
Read system.map in the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_delete_kernel_symbol_table" lineno="2975">
<summary>
Delete a system.map in the /boot directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_search_var" lineno="2994">
<summary>
Search the contents of /var.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_write_var_dirs" lineno="3012">
<summary>
Do not audit attempts to write to /var.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_var" lineno="3031">
<summary>
Do not audit attempts to search
the contents of /var.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_list_var" lineno="3049">
<summary>
List the contents of /var.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_var_dirs" lineno="3068">
<summary>
Create, read, write, and delete directories
in the /var directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_var_files" lineno="3086">
<summary>
Read files in the /var directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_var_files" lineno="3105">
<summary>
Create, read, write, and delete files in the /var directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_var_symlinks" lineno="3124">
<summary>
Read symbolic links in the /var directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_var_symlinks" lineno="3144">
<summary>
Create, read, write, and delete symbolic
links in the /var directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_var_filetrans" lineno="3173">
<summary>
Create objects in the /var directory
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file_type">
<summary>
The type of the object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
</interface>
<interface name="files_getattr_var_lib_dirs" lineno="3192">
<summary>
Get the attributes of the /var/lib directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_search_var_lib" lineno="3211">
<summary>
Search the /var/lib directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_list_var_lib" lineno="3229">
<summary>
List the contents of the /var/lib directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_var_lib_filetrans" lineno="3258">
<summary>
Create objects in the /var/lib directory
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file_type">
<summary>
The type of the object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
</interface>
<interface name="files_read_var_lib_files" lineno="3278">
<summary>
Read generic files in /var/lib.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_var_lib_symlinks" lineno="3297">
<summary>
Read generic symbolic links in /var/lib
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_manage_urandom_seed" lineno="3313">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_manage_mounttab" lineno="3334">
<summary>
Allow domain to manage mount tables
necessary for rpcd, nfsd, etc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_search_locks" lineno="3354">
<summary>
Search the locks directory (/var/lock).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_locks" lineno="3373">
<summary>
Do not audit attempts to search the
locks directory (/var/lock).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_rw_lock_dirs" lineno="3392">
<summary>
Add and remove entries in the /var/lock
directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_getattr_generic_locks" lineno="3405">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_manage_generic_locks" lineno="3419">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_delete_all_locks" lineno="3432">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_read_all_locks" lineno="3451">
<summary>
Read all lock files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_lock_filetrans" lineno="3467">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_dontaudit_getattr_pid_dirs" lineno="3488">
<summary>
Do not audit attempts to get the attributes
of the /var/run directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_search_pids" lineno="3500">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_pids" lineno="3520">
<summary>
Do not audit attempts to search
the /var/run directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_list_pids" lineno="3532">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_pid_filetrans" lineno="3545">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_rw_generic_pids" lineno="3559">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_dontaudit_write_all_pids" lineno="3579">
<summary>
Do not audit attempts to write to daemon runtime data files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_dontaudit_ioctl_all_pids" lineno="3597">
<summary>
Do not audit attempts to ioctl daemon runtime data files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_read_all_pids" lineno="3609">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_mounton_all_poly_members" lineno="3631">
<summary>
Mount filesystems on all polyinstantiation
member directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_delete_all_pids" lineno="3643">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_delete_all_pid_dirs" lineno="3661">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_search_spool" lineno="3675">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_dontaudit_search_spool" lineno="3695">
<summary>
Do not audit attempts to search generic
spool directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="files_list_spool" lineno="3707">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_manage_generic_spool_dirs" lineno="3720">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_read_generic_spool" lineno="3733">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_manage_generic_spool" lineno="3747">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="files_polyinstantiate_all" lineno="3768">
<summary>
Allow access to manage all polyinstantiated
directories on the system.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_unconfined" lineno="3810">
<summary>
Unconfined access to files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="files_write_non_security_dirs" lineno="3844">
<summary>
Allow attempts to modify any directory
</summary>
<param name="domain">
<summary>
Domain to allow
</summary>
</param>
</interface>
</module>
<module name="filesystem" filename="policy/modules/kernel/filesystem.if">
<summary>Policy for filesystems.</summary>
<required val="true">
Contains the initial SID for the filesystems.
</required>
<interface name="fs_type" lineno="16">
<summary>
Transform specified type into a filesystem type.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_noxattr_type" lineno="38">
<summary>
Transform specified type into a filesystem
type which does not have extended attribute
support.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_associate" lineno="61">
<summary>
Associate the specified file type to persistent
filesystems with extended attributes.  This
allows a file of this type to be created on
a filesystem such as ext3, JFS, and XFS.
</summary>
<param name="file_type">
<summary>
The type of the to be associated.
</summary>
</param>
</interface>
<interface name="fs_associate_noxattr" lineno="83">
<summary>
Associate the specified file type to
filesystems which lack extended attributes
support.  This allows a file of this type
to be created on a filesystem such as
FAT32, and NFS.
</summary>
<param name="file_type">
<summary>
The type of the to be associated.
</summary>
</param>
</interface>
<interface name="fs_exec_noxattr" lineno="102">
<summary>
Execute files on a filesystem that does
not support extended attributes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_mount_xattr_fs" lineno="122">
<summary>
Mount a persistent filesystem which
has extended attributes, such as
ext3, JFS, or XFS.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_xattr_fs" lineno="143">
<summary>
Remount a persistent filesystem which
has extended attributes, such as
ext3, JFS, or XFS.  This allows
some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_xattr_fs" lineno="163">
<summary>
Unmount a persistent filesystem which
has extended attributes, such as
ext3, JFS, or XFS.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_xattr_fs" lineno="184">
<summary>
Get the attributes of a persistent
filesystem which has extended
attributes, such as ext3, JFS, or XFS.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_getattr_xattr_fs" lineno="205">
<summary>
Do not audit attempts to
get the attributes of a persistent
filesystem which has extended
attributes, such as ext3, JFS, or XFS.
</summary>
<param name="domain">
<summary>
The type of the domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_relabelfrom_xattr_fs" lineno="225">
<summary>
Allow changing of the label of a
filesystem with extended attributes
using the context= mount option.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_get_xattr_fs_quotas" lineno="244">
<summary>
Get the filesystem quotas of a filesystem
with extended attributes.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_set_xattr_fs_quotas" lineno="263">
<summary>
Set the filesystem quotas of a filesystem
with extended attributes.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_mount_autofs" lineno="281">
<summary>
Mount an automount pseudo filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_autofs" lineno="301">
<summary>
Remount an automount pseudo filesystem
This allows some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_autofs" lineno="319">
<summary>
Unmount an automount pseudo filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_autofs" lineno="339">
<summary>
Get the attributes of an automount
pseudo filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_search_auto_mountpoints" lineno="358">
<summary>
Search automount filesystem to use automatically
mounted filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain performing this action.
</summary>
</param>
</interface>
<interface name="fs_list_auto_mountpoints" lineno="377">
<summary>
Read directories of automatically
mounted filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain performing this action.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_list_auto_mountpoints" lineno="396">
<summary>
Do not audit attempts to list directories of automatically
mounted filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain performing this action.
</summary>
</param>
</interface>
<interface name="fs_register_binary_executable_type" lineno="421">
<summary>
Register an interpreter for new binary
file types, using the kernel binfmt_misc
support.  A common use for this is to
register a JVM as an interpreter for
Java byte code.  Registered binaries
can be directly executed on a command line
without specifying the interpreter.
</summary>
<param name="domain">
<summary>
The type of the domain registering
the interpreter.
</summary>
</param>
</interface>
<interface name="fs_mount_cifs" lineno="440">
<summary>
Mount a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_cifs" lineno="459">
<summary>
Remount a CIFS or SMB network filesystem.
This allows some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_cifs" lineno="477">
<summary>
Unmount a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_cifs" lineno="497">
<summary>
Get the attributes of a CIFS or
SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_search_cifs" lineno="515">
<summary>
Search directories on a CIFS or SMB filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_list_cifs" lineno="534">
<summary>
List the contents of directories on a
CIFS or SMB filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_list_cifs" lineno="553">
<summary>
Do not audit attempts to list the contents
of directories on a CIFS or SMB filesystem.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_read_cifs_files" lineno="571">
<summary>
Read files on a CIFS or SMB filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_list_noxattr_fs" lineno="590">
<summary>
Read all noxattrfs directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_read_noxattr_fs_files" lineno="609">
<summary>
Read all noxattrfs files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_read_noxattr_fs_symlinks" lineno="629">
<summary>
Read all noxattrfs symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_read_cifs_files" lineno="649">
<summary>
Do not audit attempts to read
files on a CIFS or SMB filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_rw_cifs_files" lineno="668">
<summary>
Do not audit attempts to read or
write files on a CIFS or SMB filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_read_cifs_symlinks" lineno="686">
<summary>
Read symbolic links on a CIFS or SMB filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain reading the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_exec_cifs_files" lineno="707">
<summary>
Execute files on a CIFS or SMB
network filesystem, in the caller
domain.
</summary>
<param name="domain">
<summary>
The type of the domain executing the files.
</summary>
</param>
</interface>
<interface name="fs_manage_cifs_dirs" lineno="727">
<summary>
Create, read, write, and delete directories
on a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the directories.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_manage_cifs_dirs" lineno="747">
<summary>
Do not audit attempts to create, read,
write, and delete directories
on a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the directories.
</summary>
</param>
</interface>
<interface name="fs_manage_cifs_files" lineno="766">
<summary>
Create, read, write, and delete files
on a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the files.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_manage_cifs_files" lineno="787">
<summary>
Do not audit attempts to create, read,
write, and delete files
on a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_manage_cifs_symlinks" lineno="806">
<summary>
Create, read, write, and delete symbolic links
on a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_manage_cifs_named_pipes" lineno="826">
<summary>
Create, read, write, and delete named pipes
on a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the pipes.
</summary>
</param>
</interface>
<interface name="fs_manage_cifs_named_sockets" lineno="846">
<summary>
Create, read, write, and delete named sockets
on a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the sockets.
</summary>
</param>
</interface>
<interface name="fs_cifs_domtrans" lineno="890">
<summary>
Execute a file on a CIFS or SMB filesystem
in the specified domain.
</summary>
<desc>
<p>
Execute a file on a CIFS or SMB filesystem
in the specified domain.  This allows
the specified domain to execute any file
on these filesystems in the specified
domain.  This is not suggested.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
<p>
This interface was added to handle
home directories on CIFS/SMB filesystems,
in particular used by the ssh-agent policy.
</p>
</desc>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the new process.
</summary>
</param>
</interface>
<interface name="fs_mount_dos_fs" lineno="911">
<summary>
Mount a DOS filesystem, such as
FAT32 or NTFS.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_dos_fs" lineno="931">
<summary>
Remount a DOS filesystem, such as
FAT32 or NTFS.  This allows
some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_dos_fs" lineno="950">
<summary>
Unmount a DOS filesystem, such as
FAT32 or NTFS.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_dos_fs" lineno="970">
<summary>
Get the attributes of a DOS
filesystem, such as FAT32 or NTFS.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_relabelfrom_dos_fs" lineno="989">
<summary>
Allow changing of the label of a
DOS filesystem using the context= mount option.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_read_eventpollfs" lineno="1007">
<summary>
Read eventpollfs files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_search_inotifyfs" lineno="1026">
<summary>
Search inotifyfs filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_list_inotifyfs" lineno="1044">
<summary>
List inotifyfs filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_mount_iso9660_fs" lineno="1063">
<summary>
Mount an iso9660 filesystem, which
is usually used on CDs.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_iso9660_fs" lineno="1083">
<summary>
Remount an iso9660 filesystem, which
is usually used on CDs.  This allows
some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_iso9660_fs" lineno="1102">
<summary>
Unmount an iso9660 filesystem, which
is usually used on CDs.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_iso9660_fs" lineno="1122">
<summary>
Get the attributes of an iso9660
filesystem, which is usually used on CDs.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_mount_nfs" lineno="1140">
<summary>
Mount a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_nfs" lineno="1159">
<summary>
Remount a NFS filesystem.  This allows
some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_nfs" lineno="1177">
<summary>
Unmount a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_nfs" lineno="1196">
<summary>
Get the attributes of a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_search_nfs" lineno="1214">
<summary>
Search directories on a NFS filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_list_nfs" lineno="1232">
<summary>
List NFS filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_list_nfs" lineno="1251">
<summary>
Do not audit attempts to list the contents
of directories on a NFS filesystem.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_read_nfs_files" lineno="1269">
<summary>
Read files on a NFS filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_read_nfs_files" lineno="1289">
<summary>
Do not audit attempts to read
files on a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_write_nfs_files" lineno="1307">
<summary>
Read files on a NFS filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_exec_nfs_files" lineno="1326">
<summary>
Execute files on a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain executing the files.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_rw_nfs_files" lineno="1346">
<summary>
Do not audit attempts to read or
write files on a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_read_nfs_symlinks" lineno="1364">
<summary>
Read symbolic links on a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain reading the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_getattr_rpc_dirs" lineno="1383">
<summary>
Read directories of RPC file system pipes.
</summary>
<param name="domain">
<summary>
The type of the domain reading the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_search_rpc" lineno="1402">
<summary>
Search directories of RPC file system pipes.
</summary>
<param name="domain">
<summary>
The type of the domain reading the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_search_removable" lineno="1420">
<summary>
Search removable storage directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_list_removable" lineno="1439">
<summary>
Do not audit attempts to list removable storage directories.
</summary>
<param name="domain">
<summary>
Domain not to audit.
</summary>
</param>
</interface>
<interface name="fs_read_removable_files" lineno="1456">
<summary>
Read removable storage files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_donaudit_read_removable_files" lineno="1475">
<summary>
Do not audit attempts to read removable storage files.
</summary>
<param name="domain">
<summary>
Domain not to audit.
</summary>
</param>
</interface>
<interface name="fs_read_removable_symlinks" lineno="1492">
<summary>
Read removable storage symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_list_rpc" lineno="1511">
<summary>
Read directories of RPC file system pipes.
</summary>
<param name="domain">
<summary>
The type of the domain reading the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_read_rpc_files" lineno="1530">
<summary>
Read files of RPC file system pipes.
</summary>
<param name="domain">
<summary>
The type of the domain reading the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_read_rpc_symlinks" lineno="1549">
<summary>
Read symbolic links of RPC file system pipes.
</summary>
<param name="domain">
<summary>
The type of the domain reading the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_read_rpc_sockets" lineno="1568">
<summary>
Read sockets of RPC file system pipes.
</summary>
<param name="domain">
<summary>
The type of the domain reading the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_manage_nfs_dirs" lineno="1588">
<summary>
Create, read, write, and delete directories
on a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the directories.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_manage_nfs_dirs" lineno="1608">
<summary>
Do not audit attempts to create, read,
write, and delete directories
on a NFS filesystem.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_manage_nfs_files" lineno="1627">
<summary>
Create, read, write, and delete files
on a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the files.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_manage_nfs_files" lineno="1648">
<summary>
Do not audit attempts to create,
read, write, and delete files
on a NFS filesystem.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_manage_nfs_symlinks" lineno="1667">
<summary>
Create, read, write, and delete symbolic links
on a CIFS or SMB network filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the symbolic links.
</summary>
</param>
</interface>
<interface name="fs_manage_nfs_named_pipes" lineno="1687">
<summary>
Create, read, write, and delete named pipes
on a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the pipes.
</summary>
</param>
</interface>
<interface name="fs_manage_nfs_named_sockets" lineno="1707">
<summary>
Create, read, write, and delete named sockets
on a NFS filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain managing the sockets.
</summary>
</param>
</interface>
<interface name="fs_nfs_domtrans" lineno="1751">
<summary>
Execute a file on a NFS filesystem
in the specified domain.
</summary>
<desc>
<p>
Execute a file on a NFS filesystem
in the specified domain.  This allows
the specified domain to execute any file
on a NFS filesystem in the specified
domain.  This is not suggested.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
<p>
This interface was added to handle
home directories on NFS filesystems,
in particular used by the ssh-agent policy.
</p>
</desc>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the new process.
</summary>
</param>
</interface>
<interface name="fs_mount_nfsd_fs" lineno="1771">
<summary>
Mount a NFS server pseudo filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_nfsd_fs" lineno="1790">
<summary>
Mount a NFS server pseudo filesystem.
This allows some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_nfsd_fs" lineno="1808">
<summary>
Unmount a NFS server pseudo filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_nfsd_fs" lineno="1828">
<summary>
Get the attributes of a NFS server
pseudo filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_search_nfsd_fs" lineno="1847">
<summary>
Search NFS server directories.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
search on nfsd directories.
</summary>
</param>
</interface>
<interface name="fs_rw_nfsd_fs" lineno="1866">
<summary>
Read and write NFS server files.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
read or write on nfsd files.
</summary>
</param>
</interface>
<interface name="fs_mount_ramfs" lineno="1884">
<summary>
Mount a RAM filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_ramfs" lineno="1903">
<summary>
Remount a RAM filesystem.  This allows
some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_ramfs" lineno="1921">
<summary>
Unmount a RAM filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_ramfs" lineno="1940">
<summary>
Get the attributes of a RAM filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_search_ramfs" lineno="1958">
<summary>
Search directories on a ramfs
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_search_ramfs" lineno="1976">
<summary>
Dontaudit Search directories on a ramfs
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_read_ramfs_files" lineno="1994">
<summary>
Dontaudit read on a ramfs files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_read_ramfs_pipes" lineno="2012">
<summary>
Dontaudit read on a ramfs fifo_files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_write_ramfs_pipes" lineno="2030">
<summary>
Write to named pipe on a ramfs filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_rw_ramfs_pipes" lineno="2048">
<summary>
Read and write a named pipe on a ramfs filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_write_ramfs_sockets" lineno="2066">
<summary>
Write to named socket on a ramfs filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_mount_romfs" lineno="2084">
<summary>
Mount a ROM filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_romfs" lineno="2103">
<summary>
Remount a ROM filesystem.  This allows
some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_romfs" lineno="2121">
<summary>
Unmount a ROM filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_romfs" lineno="2141">
<summary>
Get the attributes of a ROM
filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_mount_rpc_pipefs" lineno="2159">
<summary>
Mount a RPC pipe filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_rpc_pipefs" lineno="2178">
<summary>
Remount a RPC pipe filesystem.  This
allows some mount option to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_rpc_pipefs" lineno="2196">
<summary>
Unmount a RPC pipe filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_rpc_pipefs" lineno="2216">
<summary>
Get the attributes of a RPC pipe
filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_mount_tmpfs" lineno="2234">
<summary>
Mount a tmpfs filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_tmpfs" lineno="2252">
<summary>
Remount a tmpfs filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_tmpfs" lineno="2270">
<summary>
Unmount a tmpfs filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_tmpfs" lineno="2290">
<summary>
Get the attributes of a tmpfs
filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_associate_tmpfs" lineno="2308">
<summary>
Allow the type to associate to tmpfs filesystems.
</summary>
<param name="type">
<summary>
The type of the object to be associated.
</summary>
</param>
</interface>
<interface name="fs_getattr_tmpfs_dirs" lineno="2326">
<summary>
Get the attributes of tmpfs directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_setattr_tmpfs_dirs" lineno="2344">
<summary>
Set the attributes of tmpfs directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_search_tmpfs" lineno="2362">
<summary>
Search tmpfs directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_list_tmpfs" lineno="2380">
<summary>
List the contents of generic tmpfs directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_list_tmpfs" lineno="2399">
<summary>
Do not audit attempts to list the
contents of generic tmpfs directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_manage_tmpfs_dirs" lineno="2418">
<summary>
Create, read, write, and delete
tmpfs directories
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_tmpfs_filetrans" lineno="2430">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="fs_dontaudit_rw_tmpfs_files" lineno="2451">
<summary>
Do not audit attempts to read or write
generic tmpfs files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_manage_auto_mountpoints" lineno="2470">
<summary>
Create, read, write, and delete
auto moutpoints.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_rw_tmpfs_files" lineno="2488">
<summary>
Read and write generic tmpfs files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_read_tmpfs_symlinks" lineno="2507">
<summary>
Read tmpfs link files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_rw_tmpfs_chr_files" lineno="2526">
<summary>
Read and write character nodes on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_use_tmpfs_chr_dev" lineno="2545">
<summary>
dontaudit Read and write character nodes on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_relabel_tmpfs_chr_file" lineno="2564">
<summary>
Relabel character nodes on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_rw_tmpfs_blk_files" lineno="2583">
<summary>
Read and write block nodes on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_relabel_tmpfs_blk_file" lineno="2602">
<summary>
Relabel block nodes on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_manage_tmpfs_files" lineno="2622">
<summary>
Read and write, create and delete generic
files on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_manage_tmpfs_symlinks" lineno="2642">
<summary>
Read and write, create and delete symbolic
links on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_manage_tmpfs_sockets" lineno="2662">
<summary>
Read and write, create and delete socket
files on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_manage_tmpfs_chr_files" lineno="2682">
<summary>
Read and write, create and delete character
nodes on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_manage_tmpfs_blk_files" lineno="2702">
<summary>
Read and write, create and delete block nodes
on tmpfs filesystems.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fs_mount_all_fs" lineno="2721">
<summary>
Mount all filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_remount_all_fs" lineno="2740">
<summary>
Remount all filesystems.  This
allows some mount options to be changed.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_unmount_all_fs" lineno="2758">
<summary>
Unmount all filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_all_fs" lineno="2778">
<summary>
Get the attributes of all persistent
filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_getattr_all_fs" lineno="2797">
<summary>
Do not audit attempts to get the attributes
all filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain to not audit.
</summary>
</param>
</interface>
<interface name="fs_get_all_fs_quotas" lineno="2815">
<summary>
Get the quotas of all filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain getting quotas.
</summary>
</param>
</interface>
<interface name="fs_set_all_quotas" lineno="2833">
<summary>
Set the quotas of all filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain setting quotas.
</summary>
</param>
</interface>
<interface name="fs_relabelfrom_all_fs" lineno="2852">
<summary>
Relabelfrom all filesystems.
</summary>
<param name="domain">
<summary>
The type of the domain doing the
getattr on the filesystem.
</summary>
</param>
</interface>
<interface name="fs_getattr_all_dirs" lineno="2871">
<summary>
Get the attributes of all directories
with a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_search_all" lineno="2889">
<summary>
Search all directories with a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_list_all" lineno="2907">
<summary>
List all directories with a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_getattr_all_files" lineno="2926">
<summary>
Get the attributes of all files with
a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_getattr_all_symlinks" lineno="2946">
<summary>
Get the attributes of all symbolic links with
a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_getattr_all_pipes" lineno="2966">
<summary>
Get the attributes of all named pipes with
a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_getattr_all_sockets" lineno="2986">
<summary>
Get the attributes of all named sockets with
a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_getattr_all_files" lineno="3006">
<summary>
Do not audit attempts to get the attributes
of all files with a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_getattr_all_symlinks" lineno="3025">
<summary>
Do not audit attempts to get the attributes
of all symbolic links with a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_getattr_all_pipes" lineno="3044">
<summary>
Do not audit attempts to get the attributes
of all named pipes with a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_dontaudit_getattr_all_sockets" lineno="3063">
<summary>
Do not audit attempts to get the attributes
of all named sockets with a filesystem type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="fs_unconfined" lineno="3081">
<summary>
Unconfined access to filesystems
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="kernel" filename="policy/modules/kernel/kernel.if">
<summary>
Policy for kernel threads, proc filesystem,
and unlabeled processes and objects.
</summary>
<required val="true">
This module has initial SIDs.
</required>
<interface name="kernel_domtrans_to" lineno="25">
<summary>
Allows to start userland processes
by transitioning to the specified domain.
</summary>
<param name="domain">
<summary>
The process type entered by kernel.
</summary>
</param>
<param name="entrypoint">
<summary>
The executable type for the entrypoint.
</summary>
</param>
</interface>
<interface name="kernel_rootfs_mountpoint" lineno="53">
<summary>
Allows the kernel to mount filesystems on
the specified directory type.
</summary>
<param name="directory_type">
<summary>
The type of the directory to use as a mountpoint.
</summary>
</param>
</interface>
<interface name="kernel_setpgid" lineno="71">
<summary>
Set the process group of kernel threads.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_sigchld" lineno="89">
<summary>
Send a SIGCHLD signal to kernel threads.
</summary>
<param name="domain">
<summary>
The type of the process sending the signal.
</summary>
</param>
</interface>
<interface name="kernel_signal" lineno="107">
<summary>
Send a generic signal to kernel threads.
</summary>
<param name="domain">
<summary>
The type of the process sending the signal.
</summary>
</param>
</interface>
<interface name="kernel_share_state" lineno="126">
<summary>
Allows the kernel to share state information with
the caller.
</summary>
<param name="domain">
<summary>
The type of the process with which to share state information.
</summary>
</param>
</interface>
<interface name="kernel_use_fds" lineno="144">
<summary>
Permits caller to use kernel file descriptors.
</summary>
<param name="domain">
<summary>
The type of the process using the descriptors.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_use_fds" lineno="163">
<summary>
Do not audit attempts to use
kernel file descriptors.
</summary>
<param name="domain">
<summary>
The type of process not to audit.
</summary>
</param>
</interface>
<interface name="kernel_rw_pipes" lineno="181">
<summary>
Read and write kernel unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_rw_unix_dgram_sockets" lineno="199">
<summary>
Read and write kernel unix datagram sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dgram_send" lineno="217">
<summary>
Send messages to kernel unix datagram sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_tcp_recvfrom" lineno="235">
<summary>
Receive messages from kernel TCP sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_udp_send" lineno="253">
<summary>
Send UDP network traffic to the kernel.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_udp_recvfrom" lineno="272">
<summary>
Receive messages from kernel UDP sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_load_module" lineno="290">
<summary>
Allows caller to load kernel modules
</summary>
<param name="domain">
<summary>
The process type to allow to load kernel modules.
</summary>
</param>
</interface>
<interface name="kernel_read_ring_buffer" lineno="309">
<summary>
Allows caller to read the ring buffer.
</summary>
<param name="domain">
<summary>
The process type allowed to read the ring buffer.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_read_ring_buffer" lineno="327">
<summary>
Do not audit attempts to read the ring buffer.
</summary>
<param name="domain">
<summary>
The domain to not audit.
</summary>
</param>
</interface>
<interface name="kernel_change_ring_buffer_level" lineno="345">
<summary>
Change the level of kernel messages logged to the console.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_clear_ring_buffer" lineno="363">
<summary>
Allows the caller to clear the ring buffer.
</summary>
<param name="domain">
<summary>
The process type clearing the buffer.
</summary>
</param>
</interface>
<interface name="kernel_get_sysvipc_info" lineno="381">
<summary>
Get information on all System V IPC objects.
</summary>
<param name="domain">
<summary>

</summary>
</param>
</interface>
<interface name="kernel_getattr_debugfs" lineno="399">
<summary>
Get the attributes of a kernel debugging filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_mount_debugfs" lineno="417">
<summary>
Mount a kernel debugging filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain mounting the filesystem.
</summary>
</param>
</interface>
<interface name="kernel_unmount_debugfs" lineno="435">
<summary>
Unmount a kernel debugging filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain unmounting the filesystem.
</summary>
</param>
</interface>
<interface name="kernel_remount_debugfs" lineno="453">
<summary>
Remount a kernel debugging filesystem.
</summary>
<param name="domain">
<summary>
The type of the domain remounting the filesystem.
</summary>
</param>
</interface>
<interface name="kernel_search_debugfs" lineno="471">
<summary>
Search the contents of a kernel debugging filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_read_debugfs" lineno="489">
<summary>
Read information from the debugging filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_getattr_proc" lineno="509">
<summary>
Get the attributes of the proc filesystem.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_search_proc" lineno="527">
<summary>
Search directories in /proc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_list_proc" lineno="545">
<summary>
List the contents of directories in /proc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_list_proc" lineno="564">
<summary>
Do not audit attempts to list the
contents of directories in /proc.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="kernel_getattr_proc_files" lineno="582">
<summary>
Get the attributes of files in /proc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_read_proc_symlinks" lineno="601">
<summary>
Read symbolic links in /proc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_read_system_state" lineno="620">
<summary>
Allows caller to read system state information in proc.
</summary>
<param name="domain">
<summary>
The process type reading the system state information.
</summary>
</param>
</interface>
<interface name="kernel_write_proc_files" lineno="644">
<summary>
Write to generic proc entries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_read_system_state" lineno="664">
<summary>
Do not audit attempts by caller to
read system state information in proc.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_read_proc_symlinks" lineno="683">
<summary>
Do not audit attempts by caller to
read system state information in proc.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_read_software_raid_state" lineno="701">
<summary>
Allow caller to read the state information for software raid.
</summary>
<param name="domain">
<summary>
The process type reading software raid state.
</summary>
</param>
</interface>
<interface name="kernel_rw_software_raid_state" lineno="720">
<summary>
Allow caller to read and set the state information for software raid.
</summary>
<param name="domain">
<summary>
The process type reading software raid state.
</summary>
</param>
</interface>
<interface name="kernel_getattr_core_if" lineno="739">
<summary>
Allows caller to get attribues of core kernel interface.
</summary>
<param name="domain">
<summary>
The process type getting the attibutes.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_getattr_core_if" lineno="759">
<summary>
Do not audit attempts to get the attributes of
core kernel interfaces.
</summary>
<param name="domain">
<summary>
The process type to not audit.
</summary>
</param>
</interface>
<interface name="kernel_read_messages" lineno="778">
<summary>
Allow caller to read kernel messages
using the /proc/kmsg interface.
</summary>
<param name="domain">
<summary>
The process type reading the messages.
</summary>
</param>
</interface>
<interface name="kernel_getattr_message_if" lineno="800">
<summary>
Allow caller to get the attributes of kernel message
interface (/proc/kmsg).
</summary>
<param name="domain">
<summary>
The process type getting the attributes.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_getattr_message_if" lineno="820">
<summary>
Do not audit attempts by caller to get the attributes of kernel
message interfaces.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_search_network_state" lineno="840">
<summary>
Do not audit attempts to search the network
state directory.
</summary>
<param name="domain">
<summary>
The process type reading the state.
</summary>
</param>

</interface>
<interface name="kernel_search_network_state" lineno="859">
<summary>
Allow searching of network state directory.
</summary>
<param name="domain">
<summary>
The process type reading the state.
</summary>
</param>

</interface>
<interface name="kernel_read_network_state" lineno="878">
<summary>
Allow caller to read the network state information.
</summary>
<param name="domain">
<summary>
The process type reading the state.
</summary>
</param>

</interface>
<interface name="kernel_read_network_state_symlinks" lineno="900">
<summary>
Allow caller to read the network state symbolic links.
</summary>
<param name="domain">
<summary>
The process type reading the state.
</summary>
</param>

</interface>
<interface name="kernel_dontaudit_search_sysctl" lineno="922">
<summary>
Do not audit attempts by caller to search
the base directory of sysctls.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>

</interface>
<interface name="kernel_read_sysctl" lineno="941">
<summary>
Allow access to read sysctl directories.
</summary>
<param name="domain">
<summary>
The process type to allow to read sysctl directories.
</summary>
</param>

</interface>
<interface name="kernel_read_device_sysctls" lineno="959">
<summary>
Allow caller to read the device sysctls.
</summary>
<param name="domain">
<summary>
The process type to allow to read the device sysctls.
</summary>
</param>
</interface>
<interface name="kernel_rw_device_sysctls" lineno="980">
<summary>
Read and write device sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_search_vm_sysctl" lineno="1001">
<summary>
Allow caller to search virtual memory sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>

</interface>
<interface name="kernel_read_vm_sysctls" lineno="1020">
<summary>
Allow caller to read virtual memory sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>

</interface>
<interface name="kernel_rw_vm_sysctls" lineno="1040">
<summary>
Read and write virtual memory sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_search_network_sysctl" lineno="1060">
<summary>
Search network sysctl directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_search_network_sysctl" lineno="1078">
<summary>
Do not audit attempts by caller to search network sysctl directories.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_read_net_sysctls" lineno="1097">
<summary>
Allow caller to read network sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>

</interface>
<interface name="kernel_rw_net_sysctls" lineno="1118">
<summary>
Allow caller to modiry contents of sysctl network files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_read_unix_sysctls" lineno="1140">
<summary>
Allow caller to read unix domain
socket sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_rw_unix_sysctls" lineno="1162">
<summary>
Read and write unix domain
socket sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_read_hotplug_sysctls" lineno="1183">
<summary>
Read the hotplug sysctl.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_rw_hotplug_sysctls" lineno="1204">
<summary>
Read and write the hotplug sysctl.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_read_modprobe_sysctls" lineno="1225">
<summary>
Read the modprobe sysctl.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_rw_modprobe_sysctls" lineno="1246">
<summary>
Read and write the modprobe sysctl.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_search_kernel_sysctl" lineno="1267">
<summary>
Do not audit attempts to search generic kernel sysctls.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="kernel_read_kernel_sysctls" lineno="1285">
<summary>
Read generic kernel sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_write_kernel_sysctl" lineno="1306">
<summary>
Do not audit attempts to write generic kernel sysctls.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="kernel_rw_kernel_sysctl" lineno="1324">
<summary>
Read and write generic kernel sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_read_fs_sysctls" lineno="1345">
<summary>
Read filesystem sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_rw_fs_sysctls" lineno="1366">
<summary>
Read and write fileystem sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_read_irq_sysctls" lineno="1387">
<summary>
Read IRQ sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_rw_irq_sysctls" lineno="1408">
<summary>
Read and write IRQ sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>

</interface>
<interface name="kernel_read_rpc_sysctls" lineno="1422">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="kernel_rw_rpc_sysctls" lineno="1437">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="kernel_read_all_sysctls" lineno="1458">
<summary>
Allow caller to read all sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_rw_all_sysctls" lineno="1481">
<summary>
Read and write all sysctls.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_kill_unlabeled" lineno="1504">
<summary>
Send a kill signal to unlabeled processes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_signal_unlabeled" lineno="1522">
<summary>
Send general signals to unlabeled processes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_signull_unlabeled" lineno="1540">
<summary>
Send a null signal to unlabeled processes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_sigstop_unlabeled" lineno="1558">
<summary>
Send a stop signal to unlabeled processes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_sigchld_unlabeled" lineno="1576">
<summary>
Send a child terminated signal to unlabeled processes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_list_unlabeled" lineno="1594">
<summary>
List unlabeled directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_list_unlabeled" lineno="1612">
<summary>
Do not audit attempts to list unlabeled directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_rw_unlabeled_dirs" lineno="1630">
<summary>
Read and write unlabeled directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_getattr_unlabeled_files" lineno="1649">
<summary>
Do not audit attempts by caller to get the
attributes of an unlabeled file.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_read_unlabeled_files" lineno="1668">
<summary>
Do not audit attempts by caller to
read an unlabeled file.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_getattr_unlabeled_symlinks" lineno="1687">
<summary>
Do not audit attempts by caller to get the
attributes of unlabeled symbolic links.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_getattr_unlabeled_pipes" lineno="1706">
<summary>
Do not audit attempts by caller to get the
attributes of unlabeled named pipes.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_getattr_unlabeled_sockets" lineno="1725">
<summary>
Do not audit attempts by caller to get the
attributes of unlabeled named sockets.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_getattr_unlabeled_blk_files" lineno="1744">
<summary>
Do not audit attempts by caller to get attributes for
unlabeled block devices.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_rw_unlabeled_blk_files" lineno="1762">
<summary>
Read and write unlabeled block device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_dontaudit_getattr_unlabeled_chr_files" lineno="1781">
<summary>
Do not audit attempts by caller to get attributes for
unlabeled character devices.
</summary>
<param name="domain">
<summary>
The process type not to audit.
</summary>
</param>
</interface>
<interface name="kernel_relabelfrom_unlabeled_dirs" lineno="1799">
<summary>
Allow caller to relabel unlabeled directories.
</summary>
<param name="domain">
<summary>
The process type relabeling the objects.
</summary>
</param>
</interface>
<interface name="kernel_relabelfrom_unlabeled_files" lineno="1817">
<summary>
Allow caller to relabel unlabeled files.
</summary>
<param name="domain">
<summary>
The process type relabeling the objects.
</summary>
</param>
</interface>
<interface name="kernel_relabelfrom_unlabeled_symlinks" lineno="1836">
<summary>
Allow caller to relabel unlabeled symbolic links.
</summary>
<param name="domain">
<summary>
The process type relabeling the objects.
</summary>
</param>
</interface>
<interface name="kernel_relabelfrom_unlabeled_pipes" lineno="1855">
<summary>
Allow caller to relabel unlabeled named pipes.
</summary>
<param name="domain">
<summary>
The process type relabeling the objects.
</summary>
</param>
</interface>
<interface name="kernel_relabelfrom_unlabeled_sockets" lineno="1874">
<summary>
Allow caller to relabel unlabeled named sockets.
</summary>
<param name="domain">
<summary>
The process type relabeling the objects.
</summary>
</param>
</interface>
<interface name="kernel_sendrecv_unlabeled_association" lineno="1908">
<summary>
Send and receive messages from an
unlabeled IPSEC association.
</summary>
<desc>
<p>
Send and receive messages from an
unlabeled IPSEC association.  Network
connections that are not protected
by IPSEC have use an unlabeled
assocation.
</p>
<p>
The corenetwork interface
corenet_non_ipsec_sendrecv() should
be used instead of this one.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kernel_unconfined" lineno="1926">
<summary>
Unconfined access to kernel module resources.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="domain" filename="policy/modules/kernel/domain.if">
<summary>Core policy for domains.</summary>
<required val="true">
Contains the concept of a domain.
</required>
<interface name="domain_base_type" lineno="26">
<summary>
Make the specified type usable as a basic domain.
</summary>
<desc>
<p>
Make the specified type usable as a basic domain.
</p>
<p>
This is primarily used for kernel threads;
generally the domain_type() interface is
more appropriate for userland processes.
</p>
</desc>
<param name="type">
<summary>
Type to be used as a basic domain type.
</summary>
</param>
</interface>
<interface name="domain_type" lineno="63">
<summary>
Make the specified type usable as a domain.
</summary>
<param name="type">
<summary>
Type to be used as a domain type.
</summary>
</param>
</interface>
<interface name="domain_entry_file" lineno="121">
<summary>
Make the specified type usable as
an entry point for the domain.
</summary>
<param name="domain">
<summary>
Domain to be entered.
</summary>
</param>
<param name="type">
<summary>
Type of program used for entering
the domain.
</summary>
</param>
</interface>
<interface name="domain_interactive_fd" lineno="138">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="domain_dyntrans_type" lineno="150">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="domain_system_change_exemption" lineno="170">
<summary>
Makes caller and execption to the constraint
preventing changing to the system user
identity and system role.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_subj_id_change_exemption" lineno="189">
<summary>
Makes caller an exception to the constraint preventing
changing of user identity.
</summary>
<param name="domain">
<summary>
The process type to make an exception to the constraint.
</summary>
</param>
</interface>
<interface name="domain_role_change_exemption" lineno="208">
<summary>
Makes caller an exception to the constraint preventing
changing of role.
</summary>
<param name="domain">
<summary>
The process type to make an exception to the constraint.
</summary>
</param>
</interface>
<interface name="domain_obj_id_change_exemption" lineno="227">
<summary>
Makes caller an exception to the constraint preventing
changing the user identity in object contexts.
</summary>
<param name="domain">
<summary>
The process type to make an exception to the constraint.
</summary>
</param>
</interface>
<interface name="domain_user_exemption_target" lineno="262">
<summary>
Make the specified domain the target of
the user domain exception of the
SELinux role and identity change
constraints.
</summary>
<desc>
<p>
Make the specified domain the target of
the user domain exception of the
SELinux role and identity change
constraints.
</p>
<p>
This interface is needed to decouple
the user domains from the base module.
It should not be used other than on
user domains.
</p>
</desc>
<param name="domain">
<summary>
Domain target for user exemption.
</summary>
</param>
</interface>
<interface name="domain_cron_exemption_source" lineno="297">
<summary>
Make the specified domain the source of
the cron domain exception of the
SELinux role and identity change
constraints.
</summary>
<desc>
<p>
Make the specified domain the source of
the cron domain exception of the
SELinux role and identity change
constraints.
</p>
<p>
This interface is needed to decouple
the cron domains from the base module.
It should not be used other than on
cron domains.
</p>
</desc>
<param name="domain">
<summary>
Domain target for user exemption.
</summary>
</param>
</interface>
<interface name="domain_cron_exemption_target" lineno="332">
<summary>
Make the specified domain the target of
the cron domain exception of the
SELinux role and identity change
constraints.
</summary>
<desc>
<p>
Make the specified domain the target of
the cron domain exception of the
SELinux role and identity change
constraints.
</p>
<p>
This interface is needed to decouple
the cron domains from the base module.
It should not be used other than on
user cron jobs.
</p>
</desc>
<param name="domain">
<summary>
Domain target for user exemption.
</summary>
</param>
</interface>
<interface name="domain_use_interactive_fds" lineno="344">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="domain_dontaudit_use_interactive_fds" lineno="356">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="domain_sigchld_interactive_fds" lineno="376">
<summary>
Send a SIGCHLD signal to domains whose file
discriptors are widely inheritable.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_setpriority_all_domains" lineno="388">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="domain_signal_all_domains" lineno="406">
<summary>
Send general signals to all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_signull_all_domains" lineno="424">
<summary>
Send a null signal to all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_sigstop_all_domains" lineno="442">
<summary>
Send a stop signal to all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_sigchld_all_domains" lineno="460">
<summary>
Send a child terminated signal to all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_kill_all_domains" lineno="478">
<summary>
Send a kill signal to all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_search_all_domains_state" lineno="497">
<summary>
Search the process state directory (/proc/pid) of all domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_search_all_domains_state" lineno="517">
<summary>
Do not audit attempts to search the process
state directory (/proc/pid) of all domains.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="domain_read_all_domains_state" lineno="535">
<summary>
Read the process state (/proc/pid) of all domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_getattr_all_domains" lineno="556">
<summary>
Get the attributes of all domains of all domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_domains" lineno="574">
<summary>
Get the attributes of all domains of all domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_read_confined_domains_state" lineno="592">
<summary>
Read the process state (/proc/pid) of all confined domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_getattr_confined_domains" lineno="616">
<summary>
Get the attributes of all confined domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_ptrace_all_domains" lineno="634">
<summary>
Ptrace all domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_ptrace_all_domains" lineno="663">
<summary>
Do not audit attempts to ptrace all domains.
</summary>
<desc>
<p>
Do not audit attempts to ptrace all domains.
</p>
<p>
Generally this needs to be suppressed because procps tries to access
/proc/pid/environ and this now triggers a ptrace check in recent kernels
(2.4 and 2.6).
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_ptrace_confined_domains" lineno="691">
<summary>
Do not audit attempts to ptrace confined domains.
</summary>
<desc>
<p>
Do not audit attempts to ptrace confined domains.
</p>
<p>
Generally this needs to be suppressed because procps tries to access
/proc/pid/environ and this now triggers a ptrace check in recent kernels
(2.4 and 2.6).
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_read_all_domains_state" lineno="710">
<summary>
Do not audit attempts to read the process
state (/proc/pid) of all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_list_all_domains_state" lineno="735">
<summary>
Do not audit attempts to read the process state
directories of all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_getsession_all_domains" lineno="753">
<summary>
Get the session ID of all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getsession_all_domains" lineno="772">
<summary>
Do not audit attempts to get the
session ID of all domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_getattr_all_sockets" lineno="801">
<summary>
Get the attributes of all domains
sockets, for all socket types.
</summary>
<desc>
<p>
Get the attributes of all domains
sockets, for all socket types.
</p>
<p>
This is commonly used for domains
that can use lsof on all domains.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_sockets" lineno="830">
<summary>
Do not audit attempts to get the attributes
of all domains sockets, for all socket types.
</summary>
<desc>
<p>
Do not audit attempts to get the attributes
of all domains sockets, for all socket types.
</p>
<p>
This interface was added for PCMCIA cardmgr
and is probably excessive.
</p>
</desc>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_tcp_sockets" lineno="849">
<summary>
Do not audit attempts to get the attributes
of all domains TCP sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_udp_sockets" lineno="868">
<summary>
Do not audit attempts to get the attributes
of all domains UDP sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_rw_all_udp_sockets" lineno="887">
<summary>
Do not audit attempts to read or write
all domains UDP sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_key_sockets" lineno="906">
<summary>
Do not audit attempts to get attribues of
all domains IPSEC key management sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_packet_sockets" lineno="925">
<summary>
Do not audit attempts to get attribues of
all domains packet sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_raw_sockets" lineno="944">
<summary>
Do not audit attempts to get attribues of
all domains raw sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_rw_all_key_sockets" lineno="963">
<summary>
Do not audit attempts to read or write
all domains key sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_dgram_sockets" lineno="982">
<summary>
Do not audit attempts to get the attributes
of all domains unix datagram sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_stream_sockets" lineno="1001">
<summary>
Do not audit attempts to get the attributes
of all domains unix datagram sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_dontaudit_getattr_all_pipes" lineno="1020">
<summary>
Do not audit attempts to get the attributes
of all domains unnamed pipes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_getattr_all_entry_files" lineno="1039">
<summary>
Get the attributes of entry point
files for all domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_read_all_entry_files" lineno="1052">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="domain_exec_all_entry_files" lineno="1065">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="domain_manage_all_entry_files" lineno="1085">
<summary>
Create, read, write, and delete all
entrypoint files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_relabel_all_entry_files" lineno="1105">
<summary>
Relabel to and from all entry point
file types.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_mmap_all_entry_files" lineno="1124">
<summary>
Mmap all entry point files as executable.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="domain_entry_file_spec_domtrans" lineno="1143">
<summary>
Execute an entry_type in the specified domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="domain_unconfined" lineno="1161">
<summary>
Unconfined access to domains.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<template name="domain_trans" lineno="1210">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</template>
<template name="domain_auto_trans" lineno="1220">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</template>
</module>
<module name="terminal" filename="policy/modules/kernel/terminal.if">
<summary>Policy for terminals.</summary>
<required val="true">
Depended on by other required modules.
</required>
<interface name="term_pty" lineno="16">
<summary>
Transform specified type into a pty type.
</summary>
<param name="pty_type">
<summary>
An object type that will applied to a pty.
</summary>
</param>
</interface>
<interface name="term_user_pty" lineno="45">
<summary>
Transform specified type into an user
pty type. This allows it to be relabeled via
type change by login programs such as ssh.
</summary>
<param name="userdomain">
<summary>
The type of the user domain associated with
this pty.
</summary>
</param>
<param name="object_type">
<summary>
An object type that will applied to a pty.
</summary>
</param>
</interface>
<interface name="term_login_pty" lineno="65">
<summary>
Transform specified type into a pty type
used by login programs, such as sshd.
</summary>
<param name="pty_type">
<summary>
An object type that will applied to a pty.
</summary>
</param>
</interface>
<interface name="term_tty" lineno="84">
<summary>
Transform specified type into a tty type.
</summary>
<param name="tty_type">
<summary>
An object type that will applied to a tty.
</summary>
</param>
</interface>
<interface name="term_create_pty" lineno="125">
<summary>
Create a pty in the /dev/pts directory.
</summary>
<param name="domain">
<summary>
The type of the process creating the pty.
</summary>
</param>
<param name="pty_type">
<summary>
The type of the pty.
</summary>
</param>
</interface>
<interface name="term_use_all_terms" lineno="150">
<summary>
Read and write the console, all
ttys and all ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_write_console" lineno="171">
<summary>
Write to the console.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_read_console" lineno="190">
<summary>
Read from the console.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_use_console" lineno="209">
<summary>
Read from and write to the console.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_use_console" lineno="229">
<summary>
Do not audit attemtps to read from
or write to the console.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_setattr_console" lineno="248">
<summary>
Set the attributes of the console
device node.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_getattr_pty_dirs" lineno="268">
<summary>
Do not audit attempts to get the
attributes of the /dev/pts directory.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="term_search_ptys" lineno="286">
<summary>
Search the contents of the /dev/pts directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_search_ptys" lineno="306">
<summary>
Do not audit attempts to search the
contents of the /dev/pts directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_list_ptys" lineno="326">
<summary>
Read the /dev/pts directory to
list all ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_list_ptys" lineno="346">
<summary>
Do not audit attempts to read the
/dev/pts directory.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="term_dontaudit_manage_pty_dirs" lineno="365">
<summary>
Do not audit attempts to create, read,
write, or delete the /dev/pts directory.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="term_ioctl_generic_ptys" lineno="384">
<summary>
ioctl of generic pty types.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_use_generic_ptys" lineno="406">
<summary>
Read and write the generic pty
type.  This is generally only used in
the targeted policy.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_use_generic_ptys" lineno="428">
<summary>
Dot not audit attempts to read and
write the generic pty type.  This is
generally only used in the targeted policy.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="term_use_controlling_term" lineno="447">
<summary>
Read and write the controlling
terminal (/dev/tty).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_use_ptmx" lineno="466">
<summary>
Read and write the pty multiplexor (/dev/ptmx).
</summary>
<param name="domain">
<summary>
The type of the process to allow access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_use_ptmx" lineno="485">
<summary>
Do not audit attempts to read and
write the pty multiplexor (/dev/ptmx).
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="term_getattr_all_user_ptys" lineno="504">
<summary>
Get the attributes of all user
pty device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_getattr_all_user_ptys" lineno="526">
<summary>
Do not audit attempts to get the
attributes of any user pty
device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_setattr_all_user_ptys" lineno="547">
<summary>
Set the attributes of all user
pty device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_relabelto_all_user_ptys" lineno="567">
<summary>
Relabel to all user ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_use_all_user_ptys" lineno="585">
<summary>
Read and write all user ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_use_all_user_ptys" lineno="607">
<summary>
Do not audit attempts to read any
user ptys.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="term_relabel_all_user_ptys" lineno="626">
<summary>
Relabel from and to all user
user pty device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_getattr_unallocated_ttys" lineno="648">
<summary>
Get the attributes of all unallocated
tty device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_getattr_unallocated_ttys" lineno="668">
<summary>
Do not audit attempts to get the attributes
of all unallocated tty device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_setattr_unallocated_ttys" lineno="687">
<summary>
Set the attributes of all unallocated
tty device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_ioctl_unallocated_ttys" lineno="707">
<summary>
Do not audit attempts to ioctl
unallocated tty device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_relabel_unallocated_ttys" lineno="726">
<summary>
Relabel from and to the unallocated
tty type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_reset_tty_labels" lineno="746">
<summary>
Relabel from all user tty types to
the unallocated tty type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_write_unallocated_ttys" lineno="767">
<summary>
Write to unallocated ttys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_use_unallocated_ttys" lineno="786">
<summary>
Read and write unallocated ttys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_use_unallocated_ttys" lineno="806">
<summary>
Do not audit attempts to read or
write unallocated ttys.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="term_getattr_all_user_ttys" lineno="825">
<summary>
Get the attributes of all user tty
device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_getattr_all_user_ttys" lineno="846">
<summary>
Do not audit attempts to get the
attributes of any user tty
device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_setattr_all_user_ttys" lineno="866">
<summary>
Set the attributes of all user tty
device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_relabel_all_user_ttys" lineno="886">
<summary>
Relabel from and to all user
user tty device nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_write_all_user_ttys" lineno="905">
<summary>
Write to all user ttys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_use_all_user_ttys" lineno="924">
<summary>
Read and write all user to all user ttys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="term_dontaudit_use_all_user_ttys" lineno="944">
<summary>
Do not audit attempts to read or write
any user ttys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="mcs" filename="policy/modules/kernel/mcs.if">
<summary>Multicategory security policy</summary>
<required val="true">
Contains attributes used in MCS policy.
</required>
<interface name="mcs_killall" lineno="17">
<summary>
This domain is allowed to sigkill and sigstop
all domains regardless of their MCS level.
</summary>
<param name="domain">
<summary>
Domain target for user exemption.
</summary>
</param>
</interface>
</module>
<module name="corenetwork" filename="policy/modules/kernel/corenetwork.if">
<summary>Policy controlling access to network objects</summary>
<required val="true">
Contains the initial SIDs for network objects.
</required>
<interface name="corenet_tcp_sendrecv_generic_if" lineno="21">
<summary>
Send and receive TCP network traffic on the generic interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_generic_if" lineno="39">
<summary>
Send UDP network traffic on generic interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_receive_generic_if" lineno="57">
<summary>
Receive UDP network traffic on generic interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_sendrecv_generic_if" lineno="75">
<summary>
Send and Receive UDP network traffic on generic interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_send_generic_if" lineno="90">
<summary>
Send raw IP packets on generic interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_receive_generic_if" lineno="112">
<summary>
Receive raw IP packets on generic interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_sendrecv_generic_if" lineno="130">
<summary>
Send and receive raw IP packets on generic interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_all_if" lineno="145">
<summary>
Send and receive TCP network traffic on all interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_send_all_if" lineno="163">
<summary>
Send UDP network traffic on all interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_receive_all_if" lineno="181">
<summary>
Receive UDP network traffic on all interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_sendrecv_all_if" lineno="199">
<summary>
Send and receive UDP network traffic on all interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_send_all_if" lineno="214">
<summary>
Send raw IP packets on all interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_receive_all_if" lineno="236">
<summary>
Receive raw IP packets on all interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_sendrecv_all_if" lineno="254">
<summary>
Send and receive raw IP packets on all interfaces.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_generic_node" lineno="269">
<summary>
Send and receive TCP network traffic on generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_send_generic_node" lineno="287">
<summary>
Send UDP network traffic on generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_receive_generic_node" lineno="305">
<summary>
Receive UDP network traffic on generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_sendrecv_generic_node" lineno="323">
<summary>
Send and receive UDP network traffic on generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_send_generic_node" lineno="338">
<summary>
Send raw IP packets on generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_receive_generic_node" lineno="356">
<summary>
Receive raw IP packets on generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_sendrecv_generic_node" lineno="374">
<summary>
Send and receive raw IP packets on generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_bind_generic_node" lineno="389">
<summary>
Bind TCP sockets to generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_bind_generic_node" lineno="407">
<summary>
Bind UDP sockets to generic nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_all_nodes" lineno="425">
<summary>
Send and receive TCP network traffic on all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_send_all_nodes" lineno="443">
<summary>
Send UDP network traffic on all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_receive_all_nodes" lineno="461">
<summary>
Receive UDP network traffic on all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_sendrecv_all_nodes" lineno="479">
<summary>
Send and receive UDP network traffic on all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_send_all_nodes" lineno="494">
<summary>
Send raw IP packets on all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_receive_all_nodes" lineno="512">
<summary>
Receive raw IP packets on all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_sendrecv_all_nodes" lineno="530">
<summary>
Send and receive raw IP packets on all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_bind_all_nodes" lineno="545">
<summary>
Bind TCP sockets to all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_bind_all_nodes" lineno="563">
<summary>
Bind UDP sockets to all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_raw_bind_all_nodes" lineno="581">
<summary>
Bind raw sockets to all nodes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_generic_port" lineno="599">
<summary>
Send and receive TCP network traffic on generic ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_send_generic_port" lineno="617">
<summary>
Send UDP network traffic on generic ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_receive_generic_port" lineno="635">
<summary>
Receive UDP network traffic on generic ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_sendrecv_generic_port" lineno="653">
<summary>
Send and receive UDP network traffic on generic ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_bind_generic_port" lineno="668">
<summary>
Bind TCP sockets to generic ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_bind_generic_port" lineno="686">
<summary>
Bind UDP sockets to generic ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_connect_generic_port" lineno="704">
<summary>
Connect TCP sockets to generic ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_all_ports" lineno="722">
<summary>
Send and receive TCP network traffic on all ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_send_all_ports" lineno="740">
<summary>
Send UDP network traffic on all ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_receive_all_ports" lineno="758">
<summary>
Receive UDP network traffic on all ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_sendrecv_all_ports" lineno="776">
<summary>
Send and receive UDP network traffic on all ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_bind_all_ports" lineno="791">
<summary>
Bind TCP sockets to all ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_dontaudit_tcp_bind_all_ports" lineno="809">
<summary>
Do not audit attepts to bind TCP sockets to any ports.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="corenet_udp_bind_all_ports" lineno="827">
<summary>
Bind UDP sockets to all ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_connect_all_ports" lineno="845">
<summary>
Connect TCP sockets to all ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_reserved_port" lineno="863">
<summary>
Send and receive TCP network traffic on generic reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_send_reserved_port" lineno="881">
<summary>
Send UDP network traffic on generic reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_receive_reserved_port" lineno="899">
<summary>
Receive UDP network traffic on generic reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_sendrecv_reserved_port" lineno="917">
<summary>
Send and receive UDP network traffic on generic reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_bind_reserved_port" lineno="932">
<summary>
Bind TCP sockets to generic reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_bind_reserved_port" lineno="951">
<summary>
Bind UDP sockets to generic reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_connect_reserved_port" lineno="970">
<summary>
Connect TCP sockets to generic reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_all_reserved_ports" lineno="988">
<summary>
Send and receive TCP network traffic on all reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_send_all_reserved_ports" lineno="1006">
<summary>
Send UDP network traffic on all reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_receive_all_reserved_ports" lineno="1024">
<summary>
Receive UDP network traffic on all reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_udp_sendrecv_all_reserved_ports" lineno="1042">
<summary>
Send and receive UDP network traffic on all reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_bind_all_reserved_ports" lineno="1057">
<summary>
Bind TCP sockets to all reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_dontaudit_tcp_bind_all_reserved_ports" lineno="1076">
<summary>
Do not audit attempts to bind TCP sockets to all reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="corenet_udp_bind_all_reserved_ports" lineno="1094">
<summary>
Bind UDP sockets to all reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_dontaudit_udp_bind_all_reserved_ports" lineno="1113">
<summary>
Do not audit attempts to bind UDP sockets to all reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process to not audit.
</summary>
</param>
</interface>
<interface name="corenet_tcp_connect_all_reserved_ports" lineno="1131">
<summary>
Connect TCP sockets to reserved ports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_dontaudit_tcp_connect_all_reserved_ports" lineno="1150">
<summary>
Do not audit attempts to connect TCP sockets
all reserved ports.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="corenet_rw_tun_tap_dev" lineno="1168">
<summary>
Read and write the TUN/TAP virtual network device.
</summary>
<param name="domain">
<summary>
The domain allowed access.
</summary>
</param>
</interface>
<interface name="corenet_rw_ppp_dev" lineno="1187">
<summary>
Read and write the point-to-point device.
</summary>
<param name="domain">
<summary>
The domain allowed access.
</summary>
</param>
</interface>
<interface name="corenet_non_ipsec_sendrecv" lineno="1208">
<summary>
Send and receive messages on a
non-encrypted (no IPSEC) network
session.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="corenet_unconfined" lineno="1222">
<summary>
Unconfined access to network objects.
</summary>
<param name="domain">
<summary>
The domain allowed access.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_afs_bos_port" lineno="1314">
<summary>
Send and receive TCP traffic on the afs_bos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_afs_bos_port" lineno="1333">
<summary>
Send UDP traffic on the afs_bos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_afs_bos_port" lineno="1352">
<summary>
Receive UDP traffic on the afs_bos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_afs_bos_port" lineno="1371">
<summary>
Send and receive UDP traffic on the afs_bos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_afs_bos_port" lineno="1387">
<summary>
Bind TCP sockets to the afs_bos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_afs_bos_port" lineno="1407">
<summary>
Bind UDP sockets to the afs_bos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_afs_bos_port" lineno="1426">
<summary>
Make a TCP connection to the afs_bos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_afs_fs_port" lineno="1448">
<summary>
Send and receive TCP traffic on the afs_fs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_afs_fs_port" lineno="1467">
<summary>
Send UDP traffic on the afs_fs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_afs_fs_port" lineno="1486">
<summary>
Receive UDP traffic on the afs_fs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_afs_fs_port" lineno="1505">
<summary>
Send and receive UDP traffic on the afs_fs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_afs_fs_port" lineno="1521">
<summary>
Bind TCP sockets to the afs_fs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_afs_fs_port" lineno="1541">
<summary>
Bind UDP sockets to the afs_fs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_afs_fs_port" lineno="1560">
<summary>
Make a TCP connection to the afs_fs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_afs_ka_port" lineno="1582">
<summary>
Send and receive TCP traffic on the afs_ka port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_afs_ka_port" lineno="1601">
<summary>
Send UDP traffic on the afs_ka port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_afs_ka_port" lineno="1620">
<summary>
Receive UDP traffic on the afs_ka port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_afs_ka_port" lineno="1639">
<summary>
Send and receive UDP traffic on the afs_ka port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_afs_ka_port" lineno="1655">
<summary>
Bind TCP sockets to the afs_ka port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_afs_ka_port" lineno="1675">
<summary>
Bind UDP sockets to the afs_ka port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_afs_ka_port" lineno="1694">
<summary>
Make a TCP connection to the afs_ka port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_afs_pt_port" lineno="1716">
<summary>
Send and receive TCP traffic on the afs_pt port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_afs_pt_port" lineno="1735">
<summary>
Send UDP traffic on the afs_pt port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_afs_pt_port" lineno="1754">
<summary>
Receive UDP traffic on the afs_pt port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_afs_pt_port" lineno="1773">
<summary>
Send and receive UDP traffic on the afs_pt port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_afs_pt_port" lineno="1789">
<summary>
Bind TCP sockets to the afs_pt port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_afs_pt_port" lineno="1809">
<summary>
Bind UDP sockets to the afs_pt port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_afs_pt_port" lineno="1828">
<summary>
Make a TCP connection to the afs_pt port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_afs_vl_port" lineno="1850">
<summary>
Send and receive TCP traffic on the afs_vl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_afs_vl_port" lineno="1869">
<summary>
Send UDP traffic on the afs_vl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_afs_vl_port" lineno="1888">
<summary>
Receive UDP traffic on the afs_vl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_afs_vl_port" lineno="1907">
<summary>
Send and receive UDP traffic on the afs_vl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_afs_vl_port" lineno="1923">
<summary>
Bind TCP sockets to the afs_vl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_afs_vl_port" lineno="1943">
<summary>
Bind UDP sockets to the afs_vl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_afs_vl_port" lineno="1962">
<summary>
Make a TCP connection to the afs_vl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_amanda_port" lineno="1984">
<summary>
Send and receive TCP traffic on the amanda port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_amanda_port" lineno="2003">
<summary>
Send UDP traffic on the amanda port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_amanda_port" lineno="2022">
<summary>
Receive UDP traffic on the amanda port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_amanda_port" lineno="2041">
<summary>
Send and receive UDP traffic on the amanda port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_amanda_port" lineno="2057">
<summary>
Bind TCP sockets to the amanda port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_amanda_port" lineno="2077">
<summary>
Bind UDP sockets to the amanda port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_amanda_port" lineno="2096">
<summary>
Make a TCP connection to the amanda port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_amavisd_recv_port" lineno="2118">
<summary>
Send and receive TCP traffic on the amavisd_recv port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_amavisd_recv_port" lineno="2137">
<summary>
Send UDP traffic on the amavisd_recv port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_amavisd_recv_port" lineno="2156">
<summary>
Receive UDP traffic on the amavisd_recv port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_amavisd_recv_port" lineno="2175">
<summary>
Send and receive UDP traffic on the amavisd_recv port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_amavisd_recv_port" lineno="2191">
<summary>
Bind TCP sockets to the amavisd_recv port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_amavisd_recv_port" lineno="2211">
<summary>
Bind UDP sockets to the amavisd_recv port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_amavisd_recv_port" lineno="2230">
<summary>
Make a TCP connection to the amavisd_recv port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_amavisd_send_port" lineno="2252">
<summary>
Send and receive TCP traffic on the amavisd_send port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_amavisd_send_port" lineno="2271">
<summary>
Send UDP traffic on the amavisd_send port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_amavisd_send_port" lineno="2290">
<summary>
Receive UDP traffic on the amavisd_send port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_amavisd_send_port" lineno="2309">
<summary>
Send and receive UDP traffic on the amavisd_send port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_amavisd_send_port" lineno="2325">
<summary>
Bind TCP sockets to the amavisd_send port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_amavisd_send_port" lineno="2345">
<summary>
Bind UDP sockets to the amavisd_send port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_amavisd_send_port" lineno="2364">
<summary>
Make a TCP connection to the amavisd_send port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_asterisk_port" lineno="2386">
<summary>
Send and receive TCP traffic on the asterisk port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_asterisk_port" lineno="2405">
<summary>
Send UDP traffic on the asterisk port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_asterisk_port" lineno="2424">
<summary>
Receive UDP traffic on the asterisk port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_asterisk_port" lineno="2443">
<summary>
Send and receive UDP traffic on the asterisk port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_asterisk_port" lineno="2459">
<summary>
Bind TCP sockets to the asterisk port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_asterisk_port" lineno="2479">
<summary>
Bind UDP sockets to the asterisk port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_asterisk_port" lineno="2498">
<summary>
Make a TCP connection to the asterisk port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_auth_port" lineno="2520">
<summary>
Send and receive TCP traffic on the auth port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_auth_port" lineno="2539">
<summary>
Send UDP traffic on the auth port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_auth_port" lineno="2558">
<summary>
Receive UDP traffic on the auth port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_auth_port" lineno="2577">
<summary>
Send and receive UDP traffic on the auth port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_auth_port" lineno="2593">
<summary>
Bind TCP sockets to the auth port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_auth_port" lineno="2613">
<summary>
Bind UDP sockets to the auth port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_auth_port" lineno="2632">
<summary>
Make a TCP connection to the auth port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_bgp_port" lineno="2654">
<summary>
Send and receive TCP traffic on the bgp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_bgp_port" lineno="2673">
<summary>
Send UDP traffic on the bgp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_bgp_port" lineno="2692">
<summary>
Receive UDP traffic on the bgp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_bgp_port" lineno="2711">
<summary>
Send and receive UDP traffic on the bgp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_bgp_port" lineno="2727">
<summary>
Bind TCP sockets to the bgp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_bgp_port" lineno="2747">
<summary>
Bind UDP sockets to the bgp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_bgp_port" lineno="2766">
<summary>
Make a TCP connection to the bgp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_clamd_port" lineno="2788">
<summary>
Send and receive TCP traffic on the clamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_clamd_port" lineno="2807">
<summary>
Send UDP traffic on the clamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_clamd_port" lineno="2826">
<summary>
Receive UDP traffic on the clamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_clamd_port" lineno="2845">
<summary>
Send and receive UDP traffic on the clamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_clamd_port" lineno="2861">
<summary>
Bind TCP sockets to the clamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_clamd_port" lineno="2881">
<summary>
Bind UDP sockets to the clamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_clamd_port" lineno="2900">
<summary>
Make a TCP connection to the clamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_clockspeed_port" lineno="2922">
<summary>
Send and receive TCP traffic on the clockspeed port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_clockspeed_port" lineno="2941">
<summary>
Send UDP traffic on the clockspeed port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_clockspeed_port" lineno="2960">
<summary>
Receive UDP traffic on the clockspeed port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_clockspeed_port" lineno="2979">
<summary>
Send and receive UDP traffic on the clockspeed port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_clockspeed_port" lineno="2995">
<summary>
Bind TCP sockets to the clockspeed port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_clockspeed_port" lineno="3015">
<summary>
Bind UDP sockets to the clockspeed port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_clockspeed_port" lineno="3034">
<summary>
Make a TCP connection to the clockspeed port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_comsat_port" lineno="3056">
<summary>
Send and receive TCP traffic on the comsat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_comsat_port" lineno="3075">
<summary>
Send UDP traffic on the comsat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_comsat_port" lineno="3094">
<summary>
Receive UDP traffic on the comsat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_comsat_port" lineno="3113">
<summary>
Send and receive UDP traffic on the comsat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_comsat_port" lineno="3129">
<summary>
Bind TCP sockets to the comsat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_comsat_port" lineno="3149">
<summary>
Bind UDP sockets to the comsat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_comsat_port" lineno="3168">
<summary>
Make a TCP connection to the comsat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_cvs_port" lineno="3190">
<summary>
Send and receive TCP traffic on the cvs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_cvs_port" lineno="3209">
<summary>
Send UDP traffic on the cvs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_cvs_port" lineno="3228">
<summary>
Receive UDP traffic on the cvs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_cvs_port" lineno="3247">
<summary>
Send and receive UDP traffic on the cvs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_cvs_port" lineno="3263">
<summary>
Bind TCP sockets to the cvs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_cvs_port" lineno="3283">
<summary>
Bind UDP sockets to the cvs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_cvs_port" lineno="3302">
<summary>
Make a TCP connection to the cvs port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_dcc_port" lineno="3324">
<summary>
Send and receive TCP traffic on the dcc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_dcc_port" lineno="3343">
<summary>
Send UDP traffic on the dcc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_dcc_port" lineno="3362">
<summary>
Receive UDP traffic on the dcc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_dcc_port" lineno="3381">
<summary>
Send and receive UDP traffic on the dcc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_dcc_port" lineno="3397">
<summary>
Bind TCP sockets to the dcc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_dcc_port" lineno="3417">
<summary>
Bind UDP sockets to the dcc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_dcc_port" lineno="3436">
<summary>
Make a TCP connection to the dcc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_dbskkd_port" lineno="3458">
<summary>
Send and receive TCP traffic on the dbskkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_dbskkd_port" lineno="3477">
<summary>
Send UDP traffic on the dbskkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_dbskkd_port" lineno="3496">
<summary>
Receive UDP traffic on the dbskkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_dbskkd_port" lineno="3515">
<summary>
Send and receive UDP traffic on the dbskkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_dbskkd_port" lineno="3531">
<summary>
Bind TCP sockets to the dbskkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_dbskkd_port" lineno="3551">
<summary>
Bind UDP sockets to the dbskkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_dbskkd_port" lineno="3570">
<summary>
Make a TCP connection to the dbskkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_dhcpc_port" lineno="3592">
<summary>
Send and receive TCP traffic on the dhcpc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_dhcpc_port" lineno="3611">
<summary>
Send UDP traffic on the dhcpc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_dhcpc_port" lineno="3630">
<summary>
Receive UDP traffic on the dhcpc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_dhcpc_port" lineno="3649">
<summary>
Send and receive UDP traffic on the dhcpc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_dhcpc_port" lineno="3665">
<summary>
Bind TCP sockets to the dhcpc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_dhcpc_port" lineno="3685">
<summary>
Bind UDP sockets to the dhcpc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_dhcpc_port" lineno="3704">
<summary>
Make a TCP connection to the dhcpc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_dhcpd_port" lineno="3726">
<summary>
Send and receive TCP traffic on the dhcpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_dhcpd_port" lineno="3745">
<summary>
Send UDP traffic on the dhcpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_dhcpd_port" lineno="3764">
<summary>
Receive UDP traffic on the dhcpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_dhcpd_port" lineno="3783">
<summary>
Send and receive UDP traffic on the dhcpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_dhcpd_port" lineno="3799">
<summary>
Bind TCP sockets to the dhcpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_dhcpd_port" lineno="3819">
<summary>
Bind UDP sockets to the dhcpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_dhcpd_port" lineno="3838">
<summary>
Make a TCP connection to the dhcpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_dict_port" lineno="3860">
<summary>
Send and receive TCP traffic on the dict port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_dict_port" lineno="3879">
<summary>
Send UDP traffic on the dict port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_dict_port" lineno="3898">
<summary>
Receive UDP traffic on the dict port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_dict_port" lineno="3917">
<summary>
Send and receive UDP traffic on the dict port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_dict_port" lineno="3933">
<summary>
Bind TCP sockets to the dict port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_dict_port" lineno="3953">
<summary>
Bind UDP sockets to the dict port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_dict_port" lineno="3972">
<summary>
Make a TCP connection to the dict port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_distccd_port" lineno="3994">
<summary>
Send and receive TCP traffic on the distccd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_distccd_port" lineno="4013">
<summary>
Send UDP traffic on the distccd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_distccd_port" lineno="4032">
<summary>
Receive UDP traffic on the distccd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_distccd_port" lineno="4051">
<summary>
Send and receive UDP traffic on the distccd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_distccd_port" lineno="4067">
<summary>
Bind TCP sockets to the distccd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_distccd_port" lineno="4087">
<summary>
Bind UDP sockets to the distccd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_distccd_port" lineno="4106">
<summary>
Make a TCP connection to the distccd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_dns_port" lineno="4128">
<summary>
Send and receive TCP traffic on the dns port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_dns_port" lineno="4147">
<summary>
Send UDP traffic on the dns port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_dns_port" lineno="4166">
<summary>
Receive UDP traffic on the dns port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_dns_port" lineno="4185">
<summary>
Send and receive UDP traffic on the dns port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_dns_port" lineno="4201">
<summary>
Bind TCP sockets to the dns port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_dns_port" lineno="4221">
<summary>
Bind UDP sockets to the dns port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_dns_port" lineno="4240">
<summary>
Make a TCP connection to the dns port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_fingerd_port" lineno="4262">
<summary>
Send and receive TCP traffic on the fingerd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_fingerd_port" lineno="4281">
<summary>
Send UDP traffic on the fingerd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_fingerd_port" lineno="4300">
<summary>
Receive UDP traffic on the fingerd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_fingerd_port" lineno="4319">
<summary>
Send and receive UDP traffic on the fingerd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_fingerd_port" lineno="4335">
<summary>
Bind TCP sockets to the fingerd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_fingerd_port" lineno="4355">
<summary>
Bind UDP sockets to the fingerd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_fingerd_port" lineno="4374">
<summary>
Make a TCP connection to the fingerd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ftp_data_port" lineno="4396">
<summary>
Send and receive TCP traffic on the ftp_data port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ftp_data_port" lineno="4415">
<summary>
Send UDP traffic on the ftp_data port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ftp_data_port" lineno="4434">
<summary>
Receive UDP traffic on the ftp_data port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ftp_data_port" lineno="4453">
<summary>
Send and receive UDP traffic on the ftp_data port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ftp_data_port" lineno="4469">
<summary>
Bind TCP sockets to the ftp_data port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ftp_data_port" lineno="4489">
<summary>
Bind UDP sockets to the ftp_data port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ftp_data_port" lineno="4508">
<summary>
Make a TCP connection to the ftp_data port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ftp_port" lineno="4530">
<summary>
Send and receive TCP traffic on the ftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ftp_port" lineno="4549">
<summary>
Send UDP traffic on the ftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ftp_port" lineno="4568">
<summary>
Receive UDP traffic on the ftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ftp_port" lineno="4587">
<summary>
Send and receive UDP traffic on the ftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ftp_port" lineno="4603">
<summary>
Bind TCP sockets to the ftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ftp_port" lineno="4623">
<summary>
Bind UDP sockets to the ftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ftp_port" lineno="4642">
<summary>
Make a TCP connection to the ftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_gatekeeper_port" lineno="4664">
<summary>
Send and receive TCP traffic on the gatekeeper port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_gatekeeper_port" lineno="4683">
<summary>
Send UDP traffic on the gatekeeper port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_gatekeeper_port" lineno="4702">
<summary>
Receive UDP traffic on the gatekeeper port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_gatekeeper_port" lineno="4721">
<summary>
Send and receive UDP traffic on the gatekeeper port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_gatekeeper_port" lineno="4737">
<summary>
Bind TCP sockets to the gatekeeper port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_gatekeeper_port" lineno="4757">
<summary>
Bind UDP sockets to the gatekeeper port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_gatekeeper_port" lineno="4776">
<summary>
Make a TCP connection to the gatekeeper port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_giftd_port" lineno="4798">
<summary>
Send and receive TCP traffic on the giftd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_giftd_port" lineno="4817">
<summary>
Send UDP traffic on the giftd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_giftd_port" lineno="4836">
<summary>
Receive UDP traffic on the giftd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_giftd_port" lineno="4855">
<summary>
Send and receive UDP traffic on the giftd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_giftd_port" lineno="4871">
<summary>
Bind TCP sockets to the giftd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_giftd_port" lineno="4891">
<summary>
Bind UDP sockets to the giftd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_giftd_port" lineno="4910">
<summary>
Make a TCP connection to the giftd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_gopher_port" lineno="4932">
<summary>
Send and receive TCP traffic on the gopher port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_gopher_port" lineno="4951">
<summary>
Send UDP traffic on the gopher port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_gopher_port" lineno="4970">
<summary>
Receive UDP traffic on the gopher port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_gopher_port" lineno="4989">
<summary>
Send and receive UDP traffic on the gopher port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_gopher_port" lineno="5005">
<summary>
Bind TCP sockets to the gopher port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_gopher_port" lineno="5025">
<summary>
Bind UDP sockets to the gopher port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_gopher_port" lineno="5044">
<summary>
Make a TCP connection to the gopher port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_http_cache_port" lineno="5066">
<summary>
Send and receive TCP traffic on the http_cache port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_http_cache_port" lineno="5085">
<summary>
Send UDP traffic on the http_cache port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_http_cache_port" lineno="5104">
<summary>
Receive UDP traffic on the http_cache port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_http_cache_port" lineno="5123">
<summary>
Send and receive UDP traffic on the http_cache port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_http_cache_port" lineno="5139">
<summary>
Bind TCP sockets to the http_cache port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_http_cache_port" lineno="5159">
<summary>
Bind UDP sockets to the http_cache port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_http_cache_port" lineno="5178">
<summary>
Make a TCP connection to the http_cache port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_http_port" lineno="5200">
<summary>
Send and receive TCP traffic on the http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_http_port" lineno="5219">
<summary>
Send UDP traffic on the http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_http_port" lineno="5238">
<summary>
Receive UDP traffic on the http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_http_port" lineno="5257">
<summary>
Send and receive UDP traffic on the http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_http_port" lineno="5273">
<summary>
Bind TCP sockets to the http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_http_port" lineno="5293">
<summary>
Bind UDP sockets to the http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_http_port" lineno="5312">
<summary>
Make a TCP connection to the http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_howl_port" lineno="5334">
<summary>
Send and receive TCP traffic on the howl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_howl_port" lineno="5353">
<summary>
Send UDP traffic on the howl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_howl_port" lineno="5372">
<summary>
Receive UDP traffic on the howl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_howl_port" lineno="5391">
<summary>
Send and receive UDP traffic on the howl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_howl_port" lineno="5407">
<summary>
Bind TCP sockets to the howl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_howl_port" lineno="5427">
<summary>
Bind UDP sockets to the howl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_howl_port" lineno="5446">
<summary>
Make a TCP connection to the howl port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_hplip_port" lineno="5468">
<summary>
Send and receive TCP traffic on the hplip port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_hplip_port" lineno="5487">
<summary>
Send UDP traffic on the hplip port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_hplip_port" lineno="5506">
<summary>
Receive UDP traffic on the hplip port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_hplip_port" lineno="5525">
<summary>
Send and receive UDP traffic on the hplip port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_hplip_port" lineno="5541">
<summary>
Bind TCP sockets to the hplip port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_hplip_port" lineno="5561">
<summary>
Bind UDP sockets to the hplip port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_hplip_port" lineno="5580">
<summary>
Make a TCP connection to the hplip port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_i18n_input_port" lineno="5602">
<summary>
Send and receive TCP traffic on the i18n_input port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_i18n_input_port" lineno="5621">
<summary>
Send UDP traffic on the i18n_input port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_i18n_input_port" lineno="5640">
<summary>
Receive UDP traffic on the i18n_input port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_i18n_input_port" lineno="5659">
<summary>
Send and receive UDP traffic on the i18n_input port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_i18n_input_port" lineno="5675">
<summary>
Bind TCP sockets to the i18n_input port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_i18n_input_port" lineno="5695">
<summary>
Bind UDP sockets to the i18n_input port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_i18n_input_port" lineno="5714">
<summary>
Make a TCP connection to the i18n_input port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_imaze_port" lineno="5736">
<summary>
Send and receive TCP traffic on the imaze port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_imaze_port" lineno="5755">
<summary>
Send UDP traffic on the imaze port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_imaze_port" lineno="5774">
<summary>
Receive UDP traffic on the imaze port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_imaze_port" lineno="5793">
<summary>
Send and receive UDP traffic on the imaze port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_imaze_port" lineno="5809">
<summary>
Bind TCP sockets to the imaze port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_imaze_port" lineno="5829">
<summary>
Bind UDP sockets to the imaze port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_imaze_port" lineno="5848">
<summary>
Make a TCP connection to the imaze port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_inetd_child_port" lineno="5870">
<summary>
Send and receive TCP traffic on the inetd_child port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_inetd_child_port" lineno="5889">
<summary>
Send UDP traffic on the inetd_child port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_inetd_child_port" lineno="5908">
<summary>
Receive UDP traffic on the inetd_child port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_inetd_child_port" lineno="5927">
<summary>
Send and receive UDP traffic on the inetd_child port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_inetd_child_port" lineno="5943">
<summary>
Bind TCP sockets to the inetd_child port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_inetd_child_port" lineno="5963">
<summary>
Bind UDP sockets to the inetd_child port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_inetd_child_port" lineno="5982">
<summary>
Make a TCP connection to the inetd_child port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_innd_port" lineno="6004">
<summary>
Send and receive TCP traffic on the innd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_innd_port" lineno="6023">
<summary>
Send UDP traffic on the innd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_innd_port" lineno="6042">
<summary>
Receive UDP traffic on the innd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_innd_port" lineno="6061">
<summary>
Send and receive UDP traffic on the innd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_innd_port" lineno="6077">
<summary>
Bind TCP sockets to the innd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_innd_port" lineno="6097">
<summary>
Bind UDP sockets to the innd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_innd_port" lineno="6116">
<summary>
Make a TCP connection to the innd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ipp_port" lineno="6138">
<summary>
Send and receive TCP traffic on the ipp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ipp_port" lineno="6157">
<summary>
Send UDP traffic on the ipp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ipp_port" lineno="6176">
<summary>
Receive UDP traffic on the ipp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ipp_port" lineno="6195">
<summary>
Send and receive UDP traffic on the ipp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ipp_port" lineno="6211">
<summary>
Bind TCP sockets to the ipp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ipp_port" lineno="6231">
<summary>
Bind UDP sockets to the ipp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ipp_port" lineno="6250">
<summary>
Make a TCP connection to the ipp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ircd_port" lineno="6272">
<summary>
Send and receive TCP traffic on the ircd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ircd_port" lineno="6291">
<summary>
Send UDP traffic on the ircd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ircd_port" lineno="6310">
<summary>
Receive UDP traffic on the ircd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ircd_port" lineno="6329">
<summary>
Send and receive UDP traffic on the ircd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ircd_port" lineno="6345">
<summary>
Bind TCP sockets to the ircd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ircd_port" lineno="6365">
<summary>
Bind UDP sockets to the ircd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ircd_port" lineno="6384">
<summary>
Make a TCP connection to the ircd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_isakmp_port" lineno="6406">
<summary>
Send and receive TCP traffic on the isakmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_isakmp_port" lineno="6425">
<summary>
Send UDP traffic on the isakmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_isakmp_port" lineno="6444">
<summary>
Receive UDP traffic on the isakmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_isakmp_port" lineno="6463">
<summary>
Send and receive UDP traffic on the isakmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_isakmp_port" lineno="6479">
<summary>
Bind TCP sockets to the isakmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_isakmp_port" lineno="6499">
<summary>
Bind UDP sockets to the isakmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_isakmp_port" lineno="6518">
<summary>
Make a TCP connection to the isakmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_jabber_client_port" lineno="6540">
<summary>
Send and receive TCP traffic on the jabber_client port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_jabber_client_port" lineno="6559">
<summary>
Send UDP traffic on the jabber_client port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_jabber_client_port" lineno="6578">
<summary>
Receive UDP traffic on the jabber_client port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_jabber_client_port" lineno="6597">
<summary>
Send and receive UDP traffic on the jabber_client port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_jabber_client_port" lineno="6613">
<summary>
Bind TCP sockets to the jabber_client port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_jabber_client_port" lineno="6633">
<summary>
Bind UDP sockets to the jabber_client port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_jabber_client_port" lineno="6652">
<summary>
Make a TCP connection to the jabber_client port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_jabber_interserver_port" lineno="6674">
<summary>
Send and receive TCP traffic on the jabber_interserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_jabber_interserver_port" lineno="6693">
<summary>
Send UDP traffic on the jabber_interserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_jabber_interserver_port" lineno="6712">
<summary>
Receive UDP traffic on the jabber_interserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_jabber_interserver_port" lineno="6731">
<summary>
Send and receive UDP traffic on the jabber_interserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_jabber_interserver_port" lineno="6747">
<summary>
Bind TCP sockets to the jabber_interserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_jabber_interserver_port" lineno="6767">
<summary>
Bind UDP sockets to the jabber_interserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_jabber_interserver_port" lineno="6786">
<summary>
Make a TCP connection to the jabber_interserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_kerberos_admin_port" lineno="6808">
<summary>
Send and receive TCP traffic on the kerberos_admin port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_kerberos_admin_port" lineno="6827">
<summary>
Send UDP traffic on the kerberos_admin port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_kerberos_admin_port" lineno="6846">
<summary>
Receive UDP traffic on the kerberos_admin port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_kerberos_admin_port" lineno="6865">
<summary>
Send and receive UDP traffic on the kerberos_admin port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_kerberos_admin_port" lineno="6881">
<summary>
Bind TCP sockets to the kerberos_admin port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_kerberos_admin_port" lineno="6901">
<summary>
Bind UDP sockets to the kerberos_admin port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_kerberos_admin_port" lineno="6920">
<summary>
Make a TCP connection to the kerberos_admin port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_kerberos_master_port" lineno="6942">
<summary>
Send and receive TCP traffic on the kerberos_master port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_kerberos_master_port" lineno="6961">
<summary>
Send UDP traffic on the kerberos_master port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_kerberos_master_port" lineno="6980">
<summary>
Receive UDP traffic on the kerberos_master port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_kerberos_master_port" lineno="6999">
<summary>
Send and receive UDP traffic on the kerberos_master port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_kerberos_master_port" lineno="7015">
<summary>
Bind TCP sockets to the kerberos_master port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_kerberos_master_port" lineno="7035">
<summary>
Bind UDP sockets to the kerberos_master port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_kerberos_master_port" lineno="7054">
<summary>
Make a TCP connection to the kerberos_master port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_kerberos_port" lineno="7076">
<summary>
Send and receive TCP traffic on the kerberos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_kerberos_port" lineno="7095">
<summary>
Send UDP traffic on the kerberos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_kerberos_port" lineno="7114">
<summary>
Receive UDP traffic on the kerberos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_kerberos_port" lineno="7133">
<summary>
Send and receive UDP traffic on the kerberos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_kerberos_port" lineno="7149">
<summary>
Bind TCP sockets to the kerberos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_kerberos_port" lineno="7169">
<summary>
Bind UDP sockets to the kerberos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_kerberos_port" lineno="7188">
<summary>
Make a TCP connection to the kerberos port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ktalkd_port" lineno="7210">
<summary>
Send and receive TCP traffic on the ktalkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ktalkd_port" lineno="7229">
<summary>
Send UDP traffic on the ktalkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ktalkd_port" lineno="7248">
<summary>
Receive UDP traffic on the ktalkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ktalkd_port" lineno="7267">
<summary>
Send and receive UDP traffic on the ktalkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ktalkd_port" lineno="7283">
<summary>
Bind TCP sockets to the ktalkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ktalkd_port" lineno="7303">
<summary>
Bind UDP sockets to the ktalkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ktalkd_port" lineno="7322">
<summary>
Make a TCP connection to the ktalkd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ldap_port" lineno="7344">
<summary>
Send and receive TCP traffic on the ldap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ldap_port" lineno="7363">
<summary>
Send UDP traffic on the ldap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ldap_port" lineno="7382">
<summary>
Receive UDP traffic on the ldap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ldap_port" lineno="7401">
<summary>
Send and receive UDP traffic on the ldap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ldap_port" lineno="7417">
<summary>
Bind TCP sockets to the ldap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ldap_port" lineno="7437">
<summary>
Bind UDP sockets to the ldap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ldap_port" lineno="7456">
<summary>
Make a TCP connection to the ldap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_mail_port" lineno="7478">
<summary>
Send and receive TCP traffic on the mail port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_mail_port" lineno="7497">
<summary>
Send UDP traffic on the mail port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_mail_port" lineno="7516">
<summary>
Receive UDP traffic on the mail port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_mail_port" lineno="7535">
<summary>
Send and receive UDP traffic on the mail port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_mail_port" lineno="7551">
<summary>
Bind TCP sockets to the mail port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_mail_port" lineno="7571">
<summary>
Bind UDP sockets to the mail port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_mail_port" lineno="7590">
<summary>
Make a TCP connection to the mail port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_monopd_port" lineno="7612">
<summary>
Send and receive TCP traffic on the monopd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_monopd_port" lineno="7631">
<summary>
Send UDP traffic on the monopd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_monopd_port" lineno="7650">
<summary>
Receive UDP traffic on the monopd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_monopd_port" lineno="7669">
<summary>
Send and receive UDP traffic on the monopd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_monopd_port" lineno="7685">
<summary>
Bind TCP sockets to the monopd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_monopd_port" lineno="7705">
<summary>
Bind UDP sockets to the monopd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_monopd_port" lineno="7724">
<summary>
Make a TCP connection to the monopd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_mysqld_port" lineno="7746">
<summary>
Send and receive TCP traffic on the mysqld port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_mysqld_port" lineno="7765">
<summary>
Send UDP traffic on the mysqld port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_mysqld_port" lineno="7784">
<summary>
Receive UDP traffic on the mysqld port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_mysqld_port" lineno="7803">
<summary>
Send and receive UDP traffic on the mysqld port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_mysqld_port" lineno="7819">
<summary>
Bind TCP sockets to the mysqld port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_mysqld_port" lineno="7839">
<summary>
Bind UDP sockets to the mysqld port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_mysqld_port" lineno="7858">
<summary>
Make a TCP connection to the mysqld port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_nessus_port" lineno="7880">
<summary>
Send and receive TCP traffic on the nessus port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_nessus_port" lineno="7899">
<summary>
Send UDP traffic on the nessus port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_nessus_port" lineno="7918">
<summary>
Receive UDP traffic on the nessus port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_nessus_port" lineno="7937">
<summary>
Send and receive UDP traffic on the nessus port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_nessus_port" lineno="7953">
<summary>
Bind TCP sockets to the nessus port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_nessus_port" lineno="7973">
<summary>
Bind UDP sockets to the nessus port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_nessus_port" lineno="7992">
<summary>
Make a TCP connection to the nessus port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_nmbd_port" lineno="8014">
<summary>
Send and receive TCP traffic on the nmbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_nmbd_port" lineno="8033">
<summary>
Send UDP traffic on the nmbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_nmbd_port" lineno="8052">
<summary>
Receive UDP traffic on the nmbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_nmbd_port" lineno="8071">
<summary>
Send and receive UDP traffic on the nmbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_nmbd_port" lineno="8087">
<summary>
Bind TCP sockets to the nmbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_nmbd_port" lineno="8107">
<summary>
Bind UDP sockets to the nmbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_nmbd_port" lineno="8126">
<summary>
Make a TCP connection to the nmbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ntp_port" lineno="8148">
<summary>
Send and receive TCP traffic on the ntp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ntp_port" lineno="8167">
<summary>
Send UDP traffic on the ntp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ntp_port" lineno="8186">
<summary>
Receive UDP traffic on the ntp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ntp_port" lineno="8205">
<summary>
Send and receive UDP traffic on the ntp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ntp_port" lineno="8221">
<summary>
Bind TCP sockets to the ntp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ntp_port" lineno="8241">
<summary>
Bind UDP sockets to the ntp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ntp_port" lineno="8260">
<summary>
Make a TCP connection to the ntp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_openvpn_port" lineno="8282">
<summary>
Send and receive TCP traffic on the openvpn port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_openvpn_port" lineno="8301">
<summary>
Send UDP traffic on the openvpn port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_openvpn_port" lineno="8320">
<summary>
Receive UDP traffic on the openvpn port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_openvpn_port" lineno="8339">
<summary>
Send and receive UDP traffic on the openvpn port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_openvpn_port" lineno="8355">
<summary>
Bind TCP sockets to the openvpn port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_openvpn_port" lineno="8375">
<summary>
Bind UDP sockets to the openvpn port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_openvpn_port" lineno="8394">
<summary>
Make a TCP connection to the openvpn port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_pegasus_http_port" lineno="8416">
<summary>
Send and receive TCP traffic on the pegasus_http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_pegasus_http_port" lineno="8435">
<summary>
Send UDP traffic on the pegasus_http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_pegasus_http_port" lineno="8454">
<summary>
Receive UDP traffic on the pegasus_http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_pegasus_http_port" lineno="8473">
<summary>
Send and receive UDP traffic on the pegasus_http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_pegasus_http_port" lineno="8489">
<summary>
Bind TCP sockets to the pegasus_http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_pegasus_http_port" lineno="8509">
<summary>
Bind UDP sockets to the pegasus_http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_pegasus_http_port" lineno="8528">
<summary>
Make a TCP connection to the pegasus_http port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_pegasus_https_port" lineno="8550">
<summary>
Send and receive TCP traffic on the pegasus_https port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_pegasus_https_port" lineno="8569">
<summary>
Send UDP traffic on the pegasus_https port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_pegasus_https_port" lineno="8588">
<summary>
Receive UDP traffic on the pegasus_https port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_pegasus_https_port" lineno="8607">
<summary>
Send and receive UDP traffic on the pegasus_https port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_pegasus_https_port" lineno="8623">
<summary>
Bind TCP sockets to the pegasus_https port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_pegasus_https_port" lineno="8643">
<summary>
Bind UDP sockets to the pegasus_https port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_pegasus_https_port" lineno="8662">
<summary>
Make a TCP connection to the pegasus_https port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_pop_port" lineno="8684">
<summary>
Send and receive TCP traffic on the pop port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_pop_port" lineno="8703">
<summary>
Send UDP traffic on the pop port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_pop_port" lineno="8722">
<summary>
Receive UDP traffic on the pop port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_pop_port" lineno="8741">
<summary>
Send and receive UDP traffic on the pop port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_pop_port" lineno="8757">
<summary>
Bind TCP sockets to the pop port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_pop_port" lineno="8777">
<summary>
Bind UDP sockets to the pop port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_pop_port" lineno="8796">
<summary>
Make a TCP connection to the pop port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_portmap_port" lineno="8818">
<summary>
Send and receive TCP traffic on the portmap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_portmap_port" lineno="8837">
<summary>
Send UDP traffic on the portmap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_portmap_port" lineno="8856">
<summary>
Receive UDP traffic on the portmap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_portmap_port" lineno="8875">
<summary>
Send and receive UDP traffic on the portmap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_portmap_port" lineno="8891">
<summary>
Bind TCP sockets to the portmap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_portmap_port" lineno="8911">
<summary>
Bind UDP sockets to the portmap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_portmap_port" lineno="8930">
<summary>
Make a TCP connection to the portmap port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_postgresql_port" lineno="8952">
<summary>
Send and receive TCP traffic on the postgresql port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_postgresql_port" lineno="8971">
<summary>
Send UDP traffic on the postgresql port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_postgresql_port" lineno="8990">
<summary>
Receive UDP traffic on the postgresql port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_postgresql_port" lineno="9009">
<summary>
Send and receive UDP traffic on the postgresql port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_postgresql_port" lineno="9025">
<summary>
Bind TCP sockets to the postgresql port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_postgresql_port" lineno="9045">
<summary>
Bind UDP sockets to the postgresql port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_postgresql_port" lineno="9064">
<summary>
Make a TCP connection to the postgresql port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_postgrey_port" lineno="9086">
<summary>
Send and receive TCP traffic on the postgrey port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_postgrey_port" lineno="9105">
<summary>
Send UDP traffic on the postgrey port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_postgrey_port" lineno="9124">
<summary>
Receive UDP traffic on the postgrey port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_postgrey_port" lineno="9143">
<summary>
Send and receive UDP traffic on the postgrey port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_postgrey_port" lineno="9159">
<summary>
Bind TCP sockets to the postgrey port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_postgrey_port" lineno="9179">
<summary>
Bind UDP sockets to the postgrey port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_postgrey_port" lineno="9198">
<summary>
Make a TCP connection to the postgrey port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_printer_port" lineno="9220">
<summary>
Send and receive TCP traffic on the printer port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_printer_port" lineno="9239">
<summary>
Send UDP traffic on the printer port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_printer_port" lineno="9258">
<summary>
Receive UDP traffic on the printer port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_printer_port" lineno="9277">
<summary>
Send and receive UDP traffic on the printer port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_printer_port" lineno="9293">
<summary>
Bind TCP sockets to the printer port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_printer_port" lineno="9313">
<summary>
Bind UDP sockets to the printer port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_printer_port" lineno="9332">
<summary>
Make a TCP connection to the printer port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ptal_port" lineno="9354">
<summary>
Send and receive TCP traffic on the ptal port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ptal_port" lineno="9373">
<summary>
Send UDP traffic on the ptal port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ptal_port" lineno="9392">
<summary>
Receive UDP traffic on the ptal port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ptal_port" lineno="9411">
<summary>
Send and receive UDP traffic on the ptal port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ptal_port" lineno="9427">
<summary>
Bind TCP sockets to the ptal port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ptal_port" lineno="9447">
<summary>
Bind UDP sockets to the ptal port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ptal_port" lineno="9466">
<summary>
Make a TCP connection to the ptal port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_pxe_port" lineno="9488">
<summary>
Send and receive TCP traffic on the pxe port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_pxe_port" lineno="9507">
<summary>
Send UDP traffic on the pxe port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_pxe_port" lineno="9526">
<summary>
Receive UDP traffic on the pxe port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_pxe_port" lineno="9545">
<summary>
Send and receive UDP traffic on the pxe port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_pxe_port" lineno="9561">
<summary>
Bind TCP sockets to the pxe port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_pxe_port" lineno="9581">
<summary>
Bind UDP sockets to the pxe port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_pxe_port" lineno="9600">
<summary>
Make a TCP connection to the pxe port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_pyzor_port" lineno="9622">
<summary>
Send and receive TCP traffic on the pyzor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_pyzor_port" lineno="9641">
<summary>
Send UDP traffic on the pyzor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_pyzor_port" lineno="9660">
<summary>
Receive UDP traffic on the pyzor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_pyzor_port" lineno="9679">
<summary>
Send and receive UDP traffic on the pyzor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_pyzor_port" lineno="9695">
<summary>
Bind TCP sockets to the pyzor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_pyzor_port" lineno="9715">
<summary>
Bind UDP sockets to the pyzor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_pyzor_port" lineno="9734">
<summary>
Make a TCP connection to the pyzor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_radacct_port" lineno="9756">
<summary>
Send and receive TCP traffic on the radacct port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_radacct_port" lineno="9775">
<summary>
Send UDP traffic on the radacct port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_radacct_port" lineno="9794">
<summary>
Receive UDP traffic on the radacct port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_radacct_port" lineno="9813">
<summary>
Send and receive UDP traffic on the radacct port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_radacct_port" lineno="9829">
<summary>
Bind TCP sockets to the radacct port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_radacct_port" lineno="9849">
<summary>
Bind UDP sockets to the radacct port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_radacct_port" lineno="9868">
<summary>
Make a TCP connection to the radacct port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_radius_port" lineno="9890">
<summary>
Send and receive TCP traffic on the radius port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_radius_port" lineno="9909">
<summary>
Send UDP traffic on the radius port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_radius_port" lineno="9928">
<summary>
Receive UDP traffic on the radius port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_radius_port" lineno="9947">
<summary>
Send and receive UDP traffic on the radius port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_radius_port" lineno="9963">
<summary>
Bind TCP sockets to the radius port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_radius_port" lineno="9983">
<summary>
Bind UDP sockets to the radius port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_radius_port" lineno="10002">
<summary>
Make a TCP connection to the radius port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_razor_port" lineno="10024">
<summary>
Send and receive TCP traffic on the razor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_razor_port" lineno="10043">
<summary>
Send UDP traffic on the razor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_razor_port" lineno="10062">
<summary>
Receive UDP traffic on the razor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_razor_port" lineno="10081">
<summary>
Send and receive UDP traffic on the razor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_razor_port" lineno="10097">
<summary>
Bind TCP sockets to the razor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_razor_port" lineno="10117">
<summary>
Bind UDP sockets to the razor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_razor_port" lineno="10136">
<summary>
Make a TCP connection to the razor port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_rlogind_port" lineno="10158">
<summary>
Send and receive TCP traffic on the rlogind port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_rlogind_port" lineno="10177">
<summary>
Send UDP traffic on the rlogind port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_rlogind_port" lineno="10196">
<summary>
Receive UDP traffic on the rlogind port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_rlogind_port" lineno="10215">
<summary>
Send and receive UDP traffic on the rlogind port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_rlogind_port" lineno="10231">
<summary>
Bind TCP sockets to the rlogind port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_rlogind_port" lineno="10251">
<summary>
Bind UDP sockets to the rlogind port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_rlogind_port" lineno="10270">
<summary>
Make a TCP connection to the rlogind port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_rndc_port" lineno="10292">
<summary>
Send and receive TCP traffic on the rndc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_rndc_port" lineno="10311">
<summary>
Send UDP traffic on the rndc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_rndc_port" lineno="10330">
<summary>
Receive UDP traffic on the rndc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_rndc_port" lineno="10349">
<summary>
Send and receive UDP traffic on the rndc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_rndc_port" lineno="10365">
<summary>
Bind TCP sockets to the rndc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_rndc_port" lineno="10385">
<summary>
Bind UDP sockets to the rndc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_rndc_port" lineno="10404">
<summary>
Make a TCP connection to the rndc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_router_port" lineno="10426">
<summary>
Send and receive TCP traffic on the router port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_router_port" lineno="10445">
<summary>
Send UDP traffic on the router port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_router_port" lineno="10464">
<summary>
Receive UDP traffic on the router port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_router_port" lineno="10483">
<summary>
Send and receive UDP traffic on the router port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_router_port" lineno="10499">
<summary>
Bind TCP sockets to the router port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_router_port" lineno="10519">
<summary>
Bind UDP sockets to the router port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_router_port" lineno="10538">
<summary>
Make a TCP connection to the router port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_rsh_port" lineno="10560">
<summary>
Send and receive TCP traffic on the rsh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_rsh_port" lineno="10579">
<summary>
Send UDP traffic on the rsh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_rsh_port" lineno="10598">
<summary>
Receive UDP traffic on the rsh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_rsh_port" lineno="10617">
<summary>
Send and receive UDP traffic on the rsh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_rsh_port" lineno="10633">
<summary>
Bind TCP sockets to the rsh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_rsh_port" lineno="10653">
<summary>
Bind UDP sockets to the rsh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_rsh_port" lineno="10672">
<summary>
Make a TCP connection to the rsh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_rsync_port" lineno="10694">
<summary>
Send and receive TCP traffic on the rsync port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_rsync_port" lineno="10713">
<summary>
Send UDP traffic on the rsync port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_rsync_port" lineno="10732">
<summary>
Receive UDP traffic on the rsync port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_rsync_port" lineno="10751">
<summary>
Send and receive UDP traffic on the rsync port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_rsync_port" lineno="10767">
<summary>
Bind TCP sockets to the rsync port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_rsync_port" lineno="10787">
<summary>
Bind UDP sockets to the rsync port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_rsync_port" lineno="10806">
<summary>
Make a TCP connection to the rsync port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_smbd_port" lineno="10828">
<summary>
Send and receive TCP traffic on the smbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_smbd_port" lineno="10847">
<summary>
Send UDP traffic on the smbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_smbd_port" lineno="10866">
<summary>
Receive UDP traffic on the smbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_smbd_port" lineno="10885">
<summary>
Send and receive UDP traffic on the smbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_smbd_port" lineno="10901">
<summary>
Bind TCP sockets to the smbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_smbd_port" lineno="10921">
<summary>
Bind UDP sockets to the smbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_smbd_port" lineno="10940">
<summary>
Make a TCP connection to the smbd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_smtp_port" lineno="10962">
<summary>
Send and receive TCP traffic on the smtp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_smtp_port" lineno="10981">
<summary>
Send UDP traffic on the smtp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_smtp_port" lineno="11000">
<summary>
Receive UDP traffic on the smtp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_smtp_port" lineno="11019">
<summary>
Send and receive UDP traffic on the smtp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_smtp_port" lineno="11035">
<summary>
Bind TCP sockets to the smtp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_smtp_port" lineno="11055">
<summary>
Bind UDP sockets to the smtp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_smtp_port" lineno="11074">
<summary>
Make a TCP connection to the smtp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_snmp_port" lineno="11096">
<summary>
Send and receive TCP traffic on the snmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_snmp_port" lineno="11115">
<summary>
Send UDP traffic on the snmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_snmp_port" lineno="11134">
<summary>
Receive UDP traffic on the snmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_snmp_port" lineno="11153">
<summary>
Send and receive UDP traffic on the snmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_snmp_port" lineno="11169">
<summary>
Bind TCP sockets to the snmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_snmp_port" lineno="11189">
<summary>
Bind UDP sockets to the snmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_snmp_port" lineno="11208">
<summary>
Make a TCP connection to the snmp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_spamd_port" lineno="11230">
<summary>
Send and receive TCP traffic on the spamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_spamd_port" lineno="11249">
<summary>
Send UDP traffic on the spamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_spamd_port" lineno="11268">
<summary>
Receive UDP traffic on the spamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_spamd_port" lineno="11287">
<summary>
Send and receive UDP traffic on the spamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_spamd_port" lineno="11303">
<summary>
Bind TCP sockets to the spamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_spamd_port" lineno="11323">
<summary>
Bind UDP sockets to the spamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_spamd_port" lineno="11342">
<summary>
Make a TCP connection to the spamd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_ssh_port" lineno="11364">
<summary>
Send and receive TCP traffic on the ssh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_ssh_port" lineno="11383">
<summary>
Send UDP traffic on the ssh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_ssh_port" lineno="11402">
<summary>
Receive UDP traffic on the ssh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_ssh_port" lineno="11421">
<summary>
Send and receive UDP traffic on the ssh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_ssh_port" lineno="11437">
<summary>
Bind TCP sockets to the ssh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_ssh_port" lineno="11457">
<summary>
Bind UDP sockets to the ssh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_ssh_port" lineno="11476">
<summary>
Make a TCP connection to the ssh port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_soundd_port" lineno="11498">
<summary>
Send and receive TCP traffic on the soundd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_soundd_port" lineno="11517">
<summary>
Send UDP traffic on the soundd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_soundd_port" lineno="11536">
<summary>
Receive UDP traffic on the soundd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_soundd_port" lineno="11555">
<summary>
Send and receive UDP traffic on the soundd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_soundd_port" lineno="11571">
<summary>
Bind TCP sockets to the soundd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_soundd_port" lineno="11591">
<summary>
Bind UDP sockets to the soundd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_soundd_port" lineno="11610">
<summary>
Make a TCP connection to the soundd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_swat_port" lineno="11632">
<summary>
Send and receive TCP traffic on the swat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_swat_port" lineno="11651">
<summary>
Send UDP traffic on the swat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_swat_port" lineno="11670">
<summary>
Receive UDP traffic on the swat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_swat_port" lineno="11689">
<summary>
Send and receive UDP traffic on the swat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_swat_port" lineno="11705">
<summary>
Bind TCP sockets to the swat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_swat_port" lineno="11725">
<summary>
Bind UDP sockets to the swat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_swat_port" lineno="11744">
<summary>
Make a TCP connection to the swat port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_syslogd_port" lineno="11766">
<summary>
Send and receive TCP traffic on the syslogd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_syslogd_port" lineno="11785">
<summary>
Send UDP traffic on the syslogd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_syslogd_port" lineno="11804">
<summary>
Receive UDP traffic on the syslogd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_syslogd_port" lineno="11823">
<summary>
Send and receive UDP traffic on the syslogd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_syslogd_port" lineno="11839">
<summary>
Bind TCP sockets to the syslogd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_syslogd_port" lineno="11859">
<summary>
Bind UDP sockets to the syslogd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_syslogd_port" lineno="11878">
<summary>
Make a TCP connection to the syslogd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_telnetd_port" lineno="11900">
<summary>
Send and receive TCP traffic on the telnetd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_telnetd_port" lineno="11919">
<summary>
Send UDP traffic on the telnetd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_telnetd_port" lineno="11938">
<summary>
Receive UDP traffic on the telnetd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_telnetd_port" lineno="11957">
<summary>
Send and receive UDP traffic on the telnetd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_telnetd_port" lineno="11973">
<summary>
Bind TCP sockets to the telnetd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_telnetd_port" lineno="11993">
<summary>
Bind UDP sockets to the telnetd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_telnetd_port" lineno="12012">
<summary>
Make a TCP connection to the telnetd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_tftp_port" lineno="12034">
<summary>
Send and receive TCP traffic on the tftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_tftp_port" lineno="12053">
<summary>
Send UDP traffic on the tftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_tftp_port" lineno="12072">
<summary>
Receive UDP traffic on the tftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_tftp_port" lineno="12091">
<summary>
Send and receive UDP traffic on the tftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_tftp_port" lineno="12107">
<summary>
Bind TCP sockets to the tftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_tftp_port" lineno="12127">
<summary>
Bind UDP sockets to the tftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_tftp_port" lineno="12146">
<summary>
Make a TCP connection to the tftp port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_transproxy_port" lineno="12168">
<summary>
Send and receive TCP traffic on the transproxy port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_transproxy_port" lineno="12187">
<summary>
Send UDP traffic on the transproxy port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_transproxy_port" lineno="12206">
<summary>
Receive UDP traffic on the transproxy port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_transproxy_port" lineno="12225">
<summary>
Send and receive UDP traffic on the transproxy port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_transproxy_port" lineno="12241">
<summary>
Bind TCP sockets to the transproxy port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_transproxy_port" lineno="12261">
<summary>
Bind UDP sockets to the transproxy port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_transproxy_port" lineno="12280">
<summary>
Make a TCP connection to the transproxy port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_uucpd_port" lineno="12302">
<summary>
Send and receive TCP traffic on the uucpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_uucpd_port" lineno="12321">
<summary>
Send UDP traffic on the uucpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_uucpd_port" lineno="12340">
<summary>
Receive UDP traffic on the uucpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_uucpd_port" lineno="12359">
<summary>
Send and receive UDP traffic on the uucpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_uucpd_port" lineno="12375">
<summary>
Bind TCP sockets to the uucpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_uucpd_port" lineno="12395">
<summary>
Bind UDP sockets to the uucpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_uucpd_port" lineno="12414">
<summary>
Make a TCP connection to the uucpd port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_vnc_port" lineno="12436">
<summary>
Send and receive TCP traffic on the vnc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_vnc_port" lineno="12455">
<summary>
Send UDP traffic on the vnc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_vnc_port" lineno="12474">
<summary>
Receive UDP traffic on the vnc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_vnc_port" lineno="12493">
<summary>
Send and receive UDP traffic on the vnc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_vnc_port" lineno="12509">
<summary>
Bind TCP sockets to the vnc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_vnc_port" lineno="12529">
<summary>
Bind UDP sockets to the vnc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_vnc_port" lineno="12548">
<summary>
Make a TCP connection to the vnc port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_xserver_port" lineno="12570">
<summary>
Send and receive TCP traffic on the xserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_xserver_port" lineno="12589">
<summary>
Send UDP traffic on the xserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_xserver_port" lineno="12608">
<summary>
Receive UDP traffic on the xserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_xserver_port" lineno="12627">
<summary>
Send and receive UDP traffic on the xserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_xserver_port" lineno="12643">
<summary>
Bind TCP sockets to the xserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_xserver_port" lineno="12663">
<summary>
Bind UDP sockets to the xserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_xserver_port" lineno="12682">
<summary>
Make a TCP connection to the xserver port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_zebra_port" lineno="12704">
<summary>
Send and receive TCP traffic on the zebra port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_zebra_port" lineno="12723">
<summary>
Send UDP traffic on the zebra port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_zebra_port" lineno="12742">
<summary>
Receive UDP traffic on the zebra port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_zebra_port" lineno="12761">
<summary>
Send and receive UDP traffic on the zebra port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_zebra_port" lineno="12777">
<summary>
Bind TCP sockets to the zebra port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_zebra_port" lineno="12797">
<summary>
Bind UDP sockets to the zebra port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_zebra_port" lineno="12816">
<summary>
Make a TCP connection to the zebra port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_zope_port" lineno="12838">
<summary>
Send and receive TCP traffic on the zope port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_zope_port" lineno="12857">
<summary>
Send UDP traffic on the zope port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_zope_port" lineno="12876">
<summary>
Receive UDP traffic on the zope port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_zope_port" lineno="12895">
<summary>
Send and receive UDP traffic on the zope port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_zope_port" lineno="12911">
<summary>
Bind TCP sockets to the zope port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_zope_port" lineno="12931">
<summary>
Bind UDP sockets to the zope port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_connect_zope_port" lineno="12950">
<summary>
Make a TCP connection to the zope port.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="corenet_tcp_sendrecv_compat_ipv4_node" lineno="12973">
<summary>
Send and receive TCP traffic on the compat_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_compat_ipv4_node" lineno="12992">
<summary>
Send UDP traffic on the compat_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_compat_ipv4_node" lineno="13011">
<summary>
Receive UDP traffic on the compat_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_compat_ipv4_node" lineno="13030">
<summary>
Send and receive UDP traffic on the compat_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_compat_ipv4_node" lineno="13046">
<summary>
Send raw IP packets on the compat_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_compat_ipv4_node" lineno="13065">
<summary>
Receive raw IP packets on the compat_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_compat_ipv4_node" lineno="13084">
<summary>
Send and receive raw IP packets on the compat_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_compat_ipv4_node" lineno="13100">
<summary>
Bind TCP sockets to node compat_ipv4.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_compat_ipv4_node" lineno="13119">
<summary>
Bind UDP sockets to the compat_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_sendrecv_inaddr_any_node" lineno="13143">
<summary>
Send and receive TCP traffic on the inaddr_any node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_inaddr_any_node" lineno="13162">
<summary>
Send UDP traffic on the inaddr_any node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_inaddr_any_node" lineno="13181">
<summary>
Receive UDP traffic on the inaddr_any node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_inaddr_any_node" lineno="13200">
<summary>
Send and receive UDP traffic on the inaddr_any node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_inaddr_any_node" lineno="13216">
<summary>
Send raw IP packets on the inaddr_any node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_inaddr_any_node" lineno="13235">
<summary>
Receive raw IP packets on the inaddr_any node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_inaddr_any_node" lineno="13254">
<summary>
Send and receive raw IP packets on the inaddr_any node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_inaddr_any_node" lineno="13270">
<summary>
Bind TCP sockets to node inaddr_any.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_inaddr_any_node" lineno="13289">
<summary>
Bind UDP sockets to the inaddr_any node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_sendrecv_link_local_node" lineno="13313">
<summary>
Send and receive TCP traffic on the link_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_link_local_node" lineno="13332">
<summary>
Send UDP traffic on the link_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_link_local_node" lineno="13351">
<summary>
Receive UDP traffic on the link_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_link_local_node" lineno="13370">
<summary>
Send and receive UDP traffic on the link_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_link_local_node" lineno="13386">
<summary>
Send raw IP packets on the link_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_link_local_node" lineno="13405">
<summary>
Receive raw IP packets on the link_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_link_local_node" lineno="13424">
<summary>
Send and receive raw IP packets on the link_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_link_local_node" lineno="13440">
<summary>
Bind TCP sockets to node link_local.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_link_local_node" lineno="13459">
<summary>
Bind UDP sockets to the link_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_sendrecv_lo_node" lineno="13483">
<summary>
Send and receive TCP traffic on the lo node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_lo_node" lineno="13502">
<summary>
Send UDP traffic on the lo node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_lo_node" lineno="13521">
<summary>
Receive UDP traffic on the lo node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_lo_node" lineno="13540">
<summary>
Send and receive UDP traffic on the lo node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_lo_node" lineno="13556">
<summary>
Send raw IP packets on the lo node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_lo_node" lineno="13575">
<summary>
Receive raw IP packets on the lo node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_lo_node" lineno="13594">
<summary>
Send and receive raw IP packets on the lo node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_lo_node" lineno="13610">
<summary>
Bind TCP sockets to node lo.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_lo_node" lineno="13629">
<summary>
Bind UDP sockets to the lo node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_sendrecv_mapped_ipv4_node" lineno="13653">
<summary>
Send and receive TCP traffic on the mapped_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_mapped_ipv4_node" lineno="13672">
<summary>
Send UDP traffic on the mapped_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_mapped_ipv4_node" lineno="13691">
<summary>
Receive UDP traffic on the mapped_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_mapped_ipv4_node" lineno="13710">
<summary>
Send and receive UDP traffic on the mapped_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_mapped_ipv4_node" lineno="13726">
<summary>
Send raw IP packets on the mapped_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_mapped_ipv4_node" lineno="13745">
<summary>
Receive raw IP packets on the mapped_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_mapped_ipv4_node" lineno="13764">
<summary>
Send and receive raw IP packets on the mapped_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_mapped_ipv4_node" lineno="13780">
<summary>
Bind TCP sockets to node mapped_ipv4.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_mapped_ipv4_node" lineno="13799">
<summary>
Bind UDP sockets to the mapped_ipv4 node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_sendrecv_multicast_node" lineno="13823">
<summary>
Send and receive TCP traffic on the multicast node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_multicast_node" lineno="13842">
<summary>
Send UDP traffic on the multicast node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_multicast_node" lineno="13861">
<summary>
Receive UDP traffic on the multicast node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_multicast_node" lineno="13880">
<summary>
Send and receive UDP traffic on the multicast node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_multicast_node" lineno="13896">
<summary>
Send raw IP packets on the multicast node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_multicast_node" lineno="13915">
<summary>
Receive raw IP packets on the multicast node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_multicast_node" lineno="13934">
<summary>
Send and receive raw IP packets on the multicast node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_multicast_node" lineno="13950">
<summary>
Bind TCP sockets to node multicast.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_multicast_node" lineno="13969">
<summary>
Bind UDP sockets to the multicast node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_sendrecv_site_local_node" lineno="13993">
<summary>
Send and receive TCP traffic on the site_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_site_local_node" lineno="14012">
<summary>
Send UDP traffic on the site_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_site_local_node" lineno="14031">
<summary>
Receive UDP traffic on the site_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_site_local_node" lineno="14050">
<summary>
Send and receive UDP traffic on the site_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_site_local_node" lineno="14066">
<summary>
Send raw IP packets on the site_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_site_local_node" lineno="14085">
<summary>
Receive raw IP packets on the site_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_site_local_node" lineno="14104">
<summary>
Send and receive raw IP packets on the site_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_site_local_node" lineno="14120">
<summary>
Bind TCP sockets to node site_local.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_site_local_node" lineno="14139">
<summary>
Bind UDP sockets to the site_local node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_sendrecv_unspec_node" lineno="14163">
<summary>
Send and receive TCP traffic on the unspec node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_unspec_node" lineno="14182">
<summary>
Send UDP traffic on the unspec node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_unspec_node" lineno="14201">
<summary>
Receive UDP traffic on the unspec node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_unspec_node" lineno="14220">
<summary>
Send and receive UDP traffic on the unspec node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_unspec_node" lineno="14236">
<summary>
Send raw IP packets on the unspec node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_unspec_node" lineno="14255">
<summary>
Receive raw IP packets on the unspec node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_unspec_node" lineno="14274">
<summary>
Send and receive raw IP packets on the unspec node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_tcp_bind_unspec_node" lineno="14290">
<summary>
Bind TCP sockets to node unspec.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_udp_bind_unspec_node" lineno="14309">
<summary>
Bind UDP sockets to the unspec node.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="none"/>
</interface>
<interface name="corenet_tcp_sendrecv_lo_if" lineno="14333">
<summary>
Send and receive TCP network traffic on the lo interface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_udp_send_lo_if" lineno="14352">
<summary>
Send UDP network traffic on the lo interface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_udp_receive_lo_if" lineno="14371">
<summary>
Receive UDP network traffic on the lo interface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_udp_sendrecv_lo_if" lineno="14390">
<summary>
Send and receive UDP network traffic on the lo interface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
<interface name="corenet_raw_send_lo_if" lineno="14406">
<summary>
Send raw IP packets on the lo interface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="write" weight="10"/>
</interface>
<interface name="corenet_raw_receive_lo_if" lineno="14429">
<summary>
Receive raw IP packets on the lo interface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="read" weight="10"/>
</interface>
<interface name="corenet_raw_sendrecv_lo_if" lineno="14448">
<summary>
Send and receive raw IP packets on the lo interface.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<infoflow type="both" weight="10"/>
</interface>
</module>
</layer>
<layer name="apps">
<summary>Policy modules for applications</summary>
<module name="webalizer" filename="policy/modules/apps/webalizer.if">
<summary>Web server log analysis</summary>
<interface name="webalizer_domtrans" lineno="13">
<summary>
Execute webalizer in the webalizer domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="webalizer_run" lineno="47">
<summary>
Execute webalizer in the webalizer domain, and
allow the specified role the webalizer domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the webalizer domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the webalizer domain to use.
</summary>
</param>
</interface>
</module>
<module name="lockdev" filename="policy/modules/apps/lockdev.if">
<summary>device locking policy for lockdev</summary>
<template name="lockdev_per_userdomain_template" lineno="36">
<summary>
The per user domain template for the lockdev module.
</summary>
<desc>
<p>
This template creates derived domains which are used
for lockdev. A derived type is also created to protect
the user's device locks.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
</module>
<module name="loadkeys" filename="policy/modules/apps/loadkeys.if">
<summary>Load keyboard mappings.</summary>
<interface name="loadkeys_domtrans" lineno="13">
<summary>
Execute the loadkeys program in the loadkeys domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="loadkeys_run" lineno="52">
<summary>
Execute the loadkeys program in the loadkeys domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to allow the loadkeys domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the loadkeys domain to use.
</summary>
</param>
</interface>
<interface name="loadkeys_exec" lineno="77">
<summary>
Execute the loadkeys program in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="irc" filename="policy/modules/apps/irc.if">
<summary>IRC client policy</summary>
<template name="irc_per_userdomain_template" lineno="35">
<summary>
The per user domain template for the irc module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for an irc client sessions.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
</module>
<module name="gpg" filename="policy/modules/apps/gpg.if">
<summary>Policy for GNU Privacy Guard and related programs.</summary>
<template name="gpg_per_userdomain_template" lineno="37">
<summary>
The per user domain template for the gpg module.
</summary>
<desc>
<p>
This template creates the types and rules for GPG,
GPG-agent, and GPG helper programs.  This protects
the user keys and secrets, and runs the programs
in domains specific to the user type.
</p>
<p>
This is invoked automatically for each user and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="userdomain">
<summary>
The user domain.
</summary>
</param>
<param name="role">
<summary>
The role associated with the user.
</summary>
</param>
</template>
</module>
<module name="screen" filename="policy/modules/apps/screen.if">
<summary>GNU terminal multiplexer</summary>
<template name="screen_per_userdomain_template" lineno="35">
<summary>
The per user domain template for the screen module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for screen sessions.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
</module>
<module name="cdrecord" filename="policy/modules/apps/cdrecord.if">
<summary>Policy for cdrecord</summary>
<template name="cdrecord_per_userdomain_template" lineno="35">
<summary>
The per user domain template for the cdrecord module.
</summary>
<desc>
<p>
This template creates derived domains which are used
for cdrecord.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
</module>
<module name="slocate" filename="policy/modules/apps/slocate.if">
<summary>Update database for mlocate</summary>
<interface name="slocate_create_append_log" lineno="13">
<summary>
Create the locate log with append mode.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="usernetctl" filename="policy/modules/apps/usernetctl.if">
<summary>User network interface configuration helper</summary>
<interface name="usernetctl_domtrans" lineno="13">
<summary>
Execute usernetctl in the usernetctl domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="usernetctl_run" lineno="51">
<summary>
Execute usernetctl in the usernetctl domain, and
allow the specified role the usernetctl domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the usernetctl domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the usernetctl domain to use.
</summary>
</param>
</interface>
</module>
<module name="userhelper" filename="policy/modules/apps/userhelper.if">
<summary>SELinux utility to run a shell with a new role</summary>
<template name="userhelper_per_userdomain_template" lineno="35">
<summary>
The per user domain template for the userhelper module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for userhelper.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<interface name="userhelper_search_config" lineno="220">
<summary>
Search the userhelper configuration directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userhelper_dontaudit_search_config" lineno="239">
<summary>
Do not audit attempts to search
the userhelper configuration directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
</module>
<module name="mono" filename="policy/modules/apps/mono.if">
<summary>Run .NET server and client applications on Linux.</summary>
<interface name="mono_domtrans" lineno="13">
<summary>
Execute the mono program in the mono domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="wine" filename="policy/modules/apps/wine.if">
<summary>Wine Is Not an Emulator.  Run Windows programs in Linux.</summary>
<interface name="wine_domtrans" lineno="13">
<summary>
Execute the wine program in the wine domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="tvtime" filename="policy/modules/apps/tvtime.if">
<summary> tvtime - a high quality television application </summary>
<template name="tvtime_per_userdomain_template" lineno="35">
<summary>
The per user domain template for the tvtime module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for tvtime.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
</module>
<module name="uml" filename="policy/modules/apps/uml.if">
<summary>Policy for UML</summary>
<template name="uml_per_userdomain_template" lineno="35">
<summary>
The per user domain template for the uml module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for uml program.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<interface name="uml_setattr_util_sockets" lineno="241">
<summary>
Set attributes on uml utility socket files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="uml_manage_util_files" lineno="259">
<summary>
Manage uml utility files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="java" filename="policy/modules/apps/java.if">
<summary>Java virtual machine</summary>
<template name="java_per_userdomain_template" lineno="35">
<summary>
The per user domain template for the java module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for java plugins that are executed by a browser.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<interface name="java_domtrans" lineno="187">
<summary>
Execute the java program in the java domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
</layer>
<layer name="system">
<summary>
	Policy modules for system functions from init to multi-user login.
</summary>
<module name="getty" filename="policy/modules/system/getty.if">
<summary>Policy for getty.</summary>
<interface name="getty_domtrans" lineno="13">
<summary>
Execute gettys in the getty domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="getty_use_fds" lineno="37">
<summary>
Inherit and use getty file descriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="getty_read_log" lineno="55">
<summary>
Allow process to read getty log file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="getty_read_config" lineno="74">
<summary>
Allow process to read getty config file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="getty_rw_config" lineno="93">
<summary>
Allow process to edit getty config file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="mount" filename="policy/modules/system/mount.if">
<summary>Policy for mount.</summary>
<interface name="mount_domtrans" lineno="13">
<summary>
Execute mount in the mount domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mount_run" lineno="48">
<summary>
Execute mount in the mount domain, and
allow the specified role the mount domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the mount domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the mount domain to use.
</summary>
</param>
</interface>
<interface name="mount_exec" lineno="68">
<summary>
Execute mount in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mount_use_fds" lineno="89">
<summary>
Use file descriptors for mount.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="mount_send_nfs_client_request" lineno="108">
<summary>
Allow the mount domain to send nfs requests for mounting
network drives
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="ipsec" filename="policy/modules/system/ipsec.if">
<summary>TCP/IP encryption</summary>
<interface name="ipsec_domtrans" lineno="13">
<summary>
Execute ipsec in the ipsec domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="ipsec_stream_connect" lineno="36">
<summary>
Connect to IPSEC using a unix domain stream socket.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="ipsec_getattr_key_sockets" lineno="57">
<summary>
Get the attributes of an IPSEC key socket.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="ipsec_exec_mgmt" lineno="75">
<summary>
Execute the IPSEC management program in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="ipsec_read_config" lineno="93">
<summary>
Read the IPSEC configuration
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="ipsec_manage_pid" lineno="112">
<summary>
Create, read, write, and delete the IPSEC pid files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="modutils" filename="policy/modules/system/modutils.if">
<summary>Policy for kernel module utilities</summary>
<interface name="modutils_read_module_deps" lineno="13">
<summary>
Read the dependencies of kernel modules.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="modutils_read_module_config" lineno="33">
<summary>
Read the configuration options used when
loading modules.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="modutils_rename_module_config" lineno="57">
<summary>
Rename a file with the configuration options used when
loading modules.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="modutils_domtrans_insmod_uncond" lineno="77">
<summary>
Unconditionally execute insmod in the insmod domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="modutils_domtrans_insmod" lineno="101">
<summary>
Execute insmod in the insmod domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="modutils_run_insmod" lineno="134">
<summary>
Execute insmod in the insmod domain, and
allow the specified role the insmod domain,
and use the caller's terminal.  Has a sigchld
backchannel.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the insmod domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the insmod domain to use.
</summary>
</param>
</interface>
<interface name="modutils_exec_insmod" lineno="148">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="modutils_domtrans_depmod" lineno="167">
<summary>
Execute depmod in the depmod domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="modutils_run_depmod" lineno="201">
<summary>
Execute depmod in the depmod domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the depmod domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the depmod domain to use.
</summary>
</param>
</interface>
<interface name="modutils_exec_depmod" lineno="215">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="modutils_domtrans_update_mods" lineno="234">
<summary>
Execute depmod in the depmod domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="modutils_run_update_mods" lineno="268">
<summary>
Execute update_modules in the update_modules domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the update_modules domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the update_modules domain to use.
</summary>
</param>
</interface>
<interface name="modutils_exec_update_mods" lineno="282">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
</module>
<module name="locallogin" filename="policy/modules/system/locallogin.if">
<summary>Policy for local logins.</summary>
<interface name="locallogin_domtrans" lineno="13">
<summary>
Execute local logins in the local login domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="locallogin_use_fds" lineno="31">
<summary>
Allow processes to inherit local login file descriptors.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="locallogin_dontaudit_use_fds" lineno="49">
<summary>
Do not audit attempts to inherit local login file descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="locallogin_signull" lineno="67">
<summary>
Send a null signal to local login processes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="unconfined" filename="policy/modules/system/unconfined.if">
<summary>The unconfined domain.</summary>
<interface name="unconfined_domain_noaudit" lineno="13">
<summary>
Make the specified domain unconfined.
</summary>
<param name="domain">
<summary>
Domain to make unconfined.
</summary>
</param>
</interface>
<interface name="unconfined_domain" lineno="114">
<summary>
Make the specified domain unconfined and
audit executable memory and executable heap
usage.
</summary>
<param name="domain">
<summary>
Domain to make unconfined.
</summary>
</param>
</interface>
<interface name="unconfined_domtrans" lineno="136">
<summary>
Transition to the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_run" lineno="169">
<summary>
Execute specified programs in the unconfined domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to allow the unconfined domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the unconfined domain to use.
</summary>
</param>
</interface>
<interface name="unconfined_shell_domtrans" lineno="189">
<summary>
Transition to the unconfined domain by executing a shell.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_use_fds" lineno="207">
<summary>
Inherit file descriptors from the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_sigchld" lineno="225">
<summary>
Send a SIGCHLD signal to the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_signal" lineno="243">
<summary>
Send generic signals to the unconfined domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_read_pipes" lineno="261">
<summary>
Read unconfined domain unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_dontaudit_read_pipes" lineno="279">
<summary>
Do not audit attempts to read unconfined domain unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_rw_pipes" lineno="297">
<summary>
Read and write unconfined domain unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_dontaudit_rw_tcp_sockets" lineno="326">
<summary>
Do not audit attempts to read or write
unconfined domain tcp sockets.
</summary>
<desc>
<p>
Do not audit attempts to read or write
unconfined domain tcp sockets.
</p>
<p>
This interface was added due to a broken
symptom in ldconfig.
</p>
</desc>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="unconfined_dbus_send" lineno="344">
<summary>
Send messages to the unconfined domain over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="unconfined_alias_domain" lineno="373">
<summary>
Add an alias type to the unconfined domain.
</summary>
<desc>
<p>
Add an alias type to the unconfined domain.
</p>
<p>
This is added to support targeted policy.  Its
use should be limited.  It has no effect
on the strict policy.
</p>
</desc>
<param name="domain">
<summary>
New alias of the unconfined domain.
</summary>
</param>
</interface>
</module>
<module name="sysnetwork" filename="policy/modules/system/sysnetwork.if">
<summary>Policy for network configuration: ifconfig and dhcp client.</summary>
<interface name="sysnet_domtrans_dhcpc" lineno="13">
<summary>
Execute dhcp client in dhcpc domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="sysnet_run_dhcpc" lineno="48">
<summary>
Execute DHCP clients in the dhcpc domain, and
allow the specified role the dhcpc domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the clock domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the clock domain to use.
</summary>
</param>
</interface>
<interface name="sysnet_sigchld_dhcpc" lineno="68">
<summary>
Send a SIGCHLD signal to the dhcp client.
</summary>
<param name="domain">
<summary>
The domain sending the SIGCHLD.
</summary>
</param>
</interface>
<interface name="sysnet_kill_dhcpc" lineno="86">
<summary>
Send a kill signal to the dhcp client.
</summary>
<param name="domain">
<summary>
The domain sending the SIGKILL.
</summary>
</param>
</interface>
<interface name="sysnet_sigstop_dhcpc" lineno="104">
<summary>
Send a SIGSTOP signal to the dhcp client.
</summary>
<param name="domain">
<summary>
The domain sending the SIGSTOP.
</summary>
</param>
</interface>
<interface name="sysnet_signull_dhcpc" lineno="122">
<summary>
Send a null signal to the dhcp client.
</summary>
<param name="domain">
<summary>
The domain sending the null signal.
</summary>
</param>
</interface>
<interface name="sysnet_signal_dhcpc" lineno="140">
<summary>
Send a generic signal to the dhcp client.
</summary>
<param name="domain">
<summary>
The domain sending the signal.
</summary>
</param>
</interface>
<interface name="sysnet_dbus_chat_dhcpc" lineno="159">
<summary>
Send and receive messages from
dhcpc over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_rw_dhcp_config" lineno="179">
<summary>
Read and write dhcp configuration files.
</summary>
<param name="domain">
<summary>
The domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_read_dhcpc_state" lineno="198">
<summary>
Read dhcp client state files.
</summary>
<param name="domain">
<summary>
The domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_read_config" lineno="216">
<summary>
Allow network init to read network config files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="sysnet_dontaudit_read_config" lineno="235">
<summary>
Do not audit attempts to read network config files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="sysnet_etc_filetrans_config" lineno="254">
<summary>
Create files in /etc with the type used for
the network config files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="sysnet_manage_config" lineno="272">
<summary>
Create, read, write, and delete network config files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="sysnet_read_dhcpc_pid" lineno="290">
<summary>
Read the dhcp client pid file.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="sysnet_delete_dhcpc_pid" lineno="309">
<summary>
Delete the dhcp client pid file.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="sysnet_domtrans_ifconfig" lineno="327">
<summary>
Execute ifconfig in the ifconfig domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="sysnet_run_ifconfig" lineno="363">
<summary>
Execute ifconfig in the ifconfig domain, and
allow the specified role the ifconfig domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the ifconfig domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the ifconfig domain to use.
</summary>
</param>
</interface>
<interface name="sysnet_exec_ifconfig" lineno="384">
<summary>
Execute ifconfig in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_read_dhcp_config" lineno="403">
<summary>
Read the DHCP configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_search_dhcp_state" lineno="423">
<summary>
Search the DHCP state data directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_dhcp_state_filetrans" lineno="462">
<summary>
Create DHCP state data.
</summary>
<desc>
<p>
Create DHCP state data.
</p>
<p>
This is added for DHCP server, as
the server and client put their state
files in the same directory.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file_type">
<summary>
The type of the object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
</interface>
<interface name="sysnet_dns_name_resolve" lineno="482">
<summary>
Perform a DNS name resolution.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_use_ldap" lineno="516">
<summary>
Connect and use a LDAP server.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sysnet_use_portmap" lineno="546">
<summary>
Connect and use remote port mappers.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="fstools" filename="policy/modules/system/fstools.if">
<summary>Tools for filesystem management, such as mkfs and fsck.</summary>
<interface name="fstools_domtrans" lineno="13">
<summary>
Execute fs tools in the fstools domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fstools_run" lineno="48">
<summary>
Execute fs tools in the fstools domain, and
allow the specified role the fs tools domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the fs tools domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the fs tools domain to use.
</summary>
</param>
</interface>
<interface name="fstools_exec" lineno="68">
<summary>
Execute fsadm in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fstools_relabelto_entry_files" lineno="87">
<summary>
Relabel a file to the type used by the
filesystem tools programs.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="fstools_manage_entry_files" lineno="106">
<summary>
Create, read, write, and delete a file used by the
filesystem tools programs.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="pcmcia" filename="policy/modules/system/pcmcia.if">
<summary>PCMCIA card management services</summary>
<interface name="pcmcia_stub" lineno="13">
<summary>
PCMCIA stub interface.  No access allowed.
</summary>
<param name="domain" optional="true">
<summary>
N/A
</summary>
</param>
</interface>
<interface name="pcmcia_domtrans_cardmgr" lineno="29">
<summary>
Execute cardmgr in the cardmgr domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="pcmcia_use_cardmgr_fds" lineno="52">
<summary>
Inherit and use file descriptors from cardmgr.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="pcmcia_domtrans_cardctl" lineno="70">
<summary>
Execute cardctl in the cardmgr domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="pcmcia_run_cardctl" lineno="104">
<summary>
Execute cardmgr in the cardctl domain, and
allow the specified role the cardmgr domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the cardmgr domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the cardmgr domain to use.
</summary>
</param>
</interface>
<interface name="pcmcia_read_pid" lineno="124">
<summary>
Read cardmgr pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="pcmcia_manage_pid" lineno="146">
<summary>
Create, read, write, and delete
cardmgr pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="pcmcia_manage_pid_chr_files" lineno="167">
<summary>
Create, read, write, and delete
cardmgr runtime character nodes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="iptables" filename="policy/modules/system/iptables.if">
<summary>Policy for iptables.</summary>
<interface name="iptables_domtrans" lineno="13">
<summary>
Execute iptables in the iptables domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="iptables_run" lineno="48">
<summary>
Execute iptables in the iptables domain, and
allow the specified role the iptables domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the iptables domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the iptables domain to use.
</summary>
</param>
</interface>
<interface name="iptables_exec" lineno="68">
<summary>
Execute iptables in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="daemontools" filename="policy/modules/system/daemontools.if">
<summary>Collection of tools for managing UNIX services</summary>
<desc>
<p>
Policy for DJB's daemontools
</p>
</desc>
<interface name="daemontools_ipc_domain" lineno="18">
<summary>
An ipc channel between the supervised domain and svc_start_t
</summary>
<param name="domain">
<summary>
Domain allowed access to svc_start_t.
</summary>
</param>
</interface>
<interface name="daemontools_service_domain" lineno="44">
<summary>
Define a specified domain as a supervised service.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="entrypoint">
<summary>
The type associated with the process program.
</summary>
</param>
</interface>
<interface name="daemontools_domtrans_start" lineno="66">
<summary>
Execute in the svc_start_t domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="daemontools_domtrans_run" lineno="89">
<summary>
Execute in the svc_run_t domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="daemontools_domtrans_multilog" lineno="112">
<summary>
Execute in the svc_multilog_t domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="daemontools_read_svc" lineno="135">
<summary>
Allow a domain to read svc_svc_t files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="daemontools_manage_svc" lineno="154">
<summary>
Allow a domain to create svc_svc_t files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="hotplug" filename="policy/modules/system/hotplug.if">
<summary>
Policy for hotplug system, for supporting the
connection and disconnection of devices at runtime.
</summary>
<interface name="hotplug_domtrans" lineno="10">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="hotplug_exec" lineno="28">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="hotplug_use_fds" lineno="41">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="hotplug_dontaudit_use_fds" lineno="53">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="hotplug_dontaudit_search_config" lineno="65">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="hotplug_getattr_config_dirs" lineno="83">
<summary>
Get the attributes of the hotplug configuration directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hotplug_search_config" lineno="101">
<summary>
Search the hotplug configuration directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hotplug_read_config" lineno="119">
<summary>
Read the configuration files for hotplug.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="clock" filename="policy/modules/system/clock.if">
<summary>Policy for reading and setting the hardware clock.</summary>
<interface name="clock_domtrans" lineno="13">
<summary>
Execute hwclock in the clock domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="clock_run" lineno="47">
<summary>
Execute hwclock in the clock domain, and
allow the specified role the hwclock domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the clock domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the clock domain to use.
</summary>
</param>
</interface>
<interface name="clock_exec" lineno="67">
<summary>
Execute hwclock in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="clock_rw_adjtime" lineno="85">
<summary>
Allow executing domain to modify clock drift
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="lvm" filename="policy/modules/system/lvm.if">
<summary>Policy for logical volume management programs.</summary>
<interface name="lvm_domtrans" lineno="13">
<summary>
Execute lvm programs in the lvm domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="lvm_run" lineno="47">
<summary>
Execute lvm programs in the lvm domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to allow the LVM domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the LVM domain to use.
</summary>
</param>
</interface>
<interface name="lvm_read_config" lineno="67">
<summary>
Read LVM configuration files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="authlogin" filename="policy/modules/system/authlogin.if">
<summary>Common policy for authentication and user login.</summary>
<template name="authlogin_common_auth_domain_template" lineno="20">
<summary>
Common template to create a domain for authentication.
</summary>
<desc>
<p>
This template creates a derived domain which is allowed
to authenticate users by using PAM unix_chkpwd support.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="authlogin_per_userdomain_template" lineno="112">
<summary>
The per user domain template for the authlogin module.
</summary>
<desc>
<p>
This template creates a derived domain which is allowed
to authenticate users by using PAM unix_chkpwd support.
This domain will be used by any programs running in the
user domain which use PAM to authenticate.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<template name="auth_domtrans_user_chk_passwd" lineno="169">
<summary>
Run unix_chkpwd to check a password
for a user domain.
</summary>
<desc>
<p>
Run unix_chkpwd to check a password
for a user domain.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</template>
<interface name="auth_login_entry_type" lineno="205">
<summary>
Use the login program as an entry point program.
</summary>
<param name="domain">
<summary>
The type of process using the login program as entry point.
</summary>
</param>
</interface>
<interface name="auth_domtrans_login_program" lineno="228">
<summary>
Execute a login_program in the target domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the login_program process.
</summary>
</param>
</interface>
<interface name="auth_domtrans_chk_passwd" lineno="252">
<summary>
Run unix_chkpwd to check a password.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_getattr_shadow" lineno="301">
<summary>
Get the attributes of the shadow passwords file.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_dontaudit_getattr_shadow" lineno="321">
<summary>
Do not audit attempts to get the attributes
of the shadow passwords file.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_read_shadow" lineno="343">
<summary>
Read the shadow passwords file (/etc/shadow)
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_can_read_shadow_passwords" lineno="348">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_tunable_read_shadow" lineno="356">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_dontaudit_read_shadow" lineno="376">
<summary>
Do not audit attempts to read the shadow
password file (/etc/shadow).
</summary>
<param name="domain">
<summary>
The type of the domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_rw_shadow" lineno="394">
<summary>
Read and write the shadow password file (/etc/shadow).
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_manage_shadow" lineno="409">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_relabelto_shadow" lineno="432">
<summary>
Relabel to the shadow
password file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_relabel_shadow" lineno="454">
<summary>
Relabel from and to the shadow
password file type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_append_faillog" lineno="475">
<summary>
Append to the login failure log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_rw_faillog" lineno="488">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_read_lastlog" lineno="507">
<summary>
Read the last logins log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_append_lastlog" lineno="526">
<summary>
Append only to the last logins log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_rw_lastlog" lineno="545">
<summary>
Read and write to the last logins log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_domtrans_pam" lineno="564">
<summary>
Execute pam programs in the pam domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_run_pam" lineno="597">
<summary>
Execute pam programs in the PAM domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to allow the PAM domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the PAM domain to use.
</summary>
</param>
</interface>
<interface name="auth_exec_pam" lineno="617">
<summary>
Execute the pam program.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_manage_var_auth" lineno="636">
<summary>
Manage var auth files. Used by various other applications
and pam applets etc.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_read_pam_pid" lineno="651">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_dontaudit_read_pam_pid" lineno="672">
<summary>
Do not audit attemps to read PAM pid files.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_delete_pam_pid" lineno="690">
<summary>
Delete pam PID files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_manage_pam_pid" lineno="711">
<summary>
Manage pam PID files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_domtrans_pam_console" lineno="725">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_search_pam_console_data" lineno="749">
<summary>
Search the contents of the
pam_console data directory.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_list_pam_console_data" lineno="763">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_read_pam_console_data" lineno="777">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_manage_pam_console_data" lineno="792">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_delete_pam_console_data" lineno="814">
<summary>
Delete pam_console data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_read_all_dirs_except_shadow" lineno="842">
<summary>
Read all directories on the filesystem, except
the shadow passwords and listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="auth_read_all_files_except_shadow" lineno="867">
<summary>
Read all files on the filesystem, except
the shadow passwords and listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="auth_read_all_symlinks_except_shadow" lineno="892">
<summary>
Read all symbolic links on the filesystem, except
the shadow passwords and listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="auth_relabel_all_files_except_shadow" lineno="918">
<summary>
Relabel all files on the filesystem, except
the shadow passwords and listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="auth_manage_all_files_except_shadow" lineno="944">
<summary>
Manage all files on the filesystem, except
the shadow passwords and listed exceptions.
</summary>
<param name="domain">
<summary>
The type of the domain perfoming this action.
</summary>
</param>
<param name="exception_types" optional="true">
<summary>
The types to be excluded.  Each type or attribute
must be negated by the caller.
</summary>
</param>
</interface>
<interface name="auth_domtrans_utempter" lineno="962">
<summary>
Execute utempter programs in the utempter domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="auth_run_utempter" lineno="995">
<summary>
Execute utempter programs in the utempter domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to allow the utempter domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the utempter domain to use.
</summary>
</param>
</interface>
<interface name="auth_dontaudit_exec_utempter" lineno="1015">
<summary>
Do not audit attemps to execute utempter executable.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="auth_setattr_login_records" lineno="1027">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_read_login_records" lineno="1040">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_dontaudit_write_login_records" lineno="1053">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_append_login_records" lineno="1071">
<summary>
Append to login records (wtmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_write_login_records" lineno="1089">
<summary>
Write to login records (wtmp).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_rw_login_records" lineno="1101">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_log_filetrans_login_records" lineno="1114">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_manage_login_records" lineno="1126">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="auth_use_nsswitch" lineno="1145">
<summary>
Use nsswitch to look up uid-username mappings.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="auth_unconfined" lineno="1186">
<summary>
Unconfined access to the authlogin module.
</summary>
<desc>
<p>
Unconfined access to the authlogin module.
</p>
<p>
Currently, this only allows assertions for
the shadow passwords file (/etc/shadow) to
be passed.  No access is granted yet.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="udev" filename="policy/modules/system/udev.if">
<summary>Policy for udev.</summary>
<interface name="udev_domtrans" lineno="13">
<summary>
Execute udev in the udev domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="udev_helper_domtrans" lineno="36">
<summary>
Execute a udev helper in the udev domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="udev_read_state" lineno="59">
<summary>
Allow process to read udev process state.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="udev_dontaudit_use_fds" lineno="80">
<summary>
Do not audit attempts to inherit a
udev file descriptor.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="udev_dontaudit_rw_dgram_sockets" lineno="99">
<summary>
Do not audit attempts to read or write
to a udev unix datagram socket.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="udev_read_db" lineno="117">
<summary>
Allow process to read list of devices.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="udev_rw_db" lineno="136">
<summary>
Allow process to modify list of devices.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="selinuxutil" filename="policy/modules/system/selinuxutil.if">
<summary>Policy for SELinux policy and userland applications.</summary>
<interface name="seutil_domtrans_checkpolicy" lineno="13">
<summary>
Execute checkpolicy in the checkpolicy domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_run_checkpolicy" lineno="50">
<summary>
Execute checkpolicy in the checkpolicy domain, and
allow the specified role the checkpolicy domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the checkpolicy domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the checkpolicy domain to use.
</summary>
</param>
</interface>
<interface name="seutil_exec_checkpolicy" lineno="64">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_domtrans_loadpolicy" lineno="84">
<summary>
Execute load_policy in the load_policy domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_run_loadpolicy" lineno="121">
<summary>
Execute load_policy in the load_policy domain, and
allow the specified role the load_policy domain,
and use the caller's terminal.
Has a SIGCHLD signal backchannel.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the load_policy domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the load_policy domain to use.
</summary>
</param>
</interface>
<interface name="seutil_exec_loadpolicy" lineno="135">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_read_loadpolicy" lineno="148">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_domtrans_newrole" lineno="167">
<summary>
Execute newrole in the load_policy domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_run_newrole" lineno="204">
<summary>
Execute newrole in the newrole domain, and
allow the specified role the newrole domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the newrole domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the newrole domain to use.
</summary>
</param>
</interface>
<interface name="seutil_exec_newrole" lineno="218">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_dontaudit_signal_newrole" lineno="239">
<summary>
Do not audit the caller attempts to send
a signal to newrole.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_sigchld_newrole" lineno="251">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_use_newrole_fds" lineno="263">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_domtrans_restorecon" lineno="281">
<summary>
Execute restorecon in the restorecon domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_run_restorecon" lineno="317">
<summary>
Execute restorecon in the restorecon domain, and
allow the specified role the restorecon domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the restorecon domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the restorecon domain to use.
</summary>
</param>
</interface>
<interface name="seutil_exec_restorecon" lineno="331">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_domtrans_runinit" lineno="350">
<summary>
Execute run_init in the run_init domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_init_script_domtrans_runinit" lineno="381">
<summary>
Execute init scripts in the run_init domain.
</summary>
<desc>
<p>
Execute init scripts in the run_init domain.
This is used for the Gentoo integrated run_init.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_run_runinit" lineno="416">
<summary>
Execute run_init in the run_init domain, and
allow the specified role the run_init domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the run_init domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the run_init domain to use.
</summary>
</param>
</interface>
<interface name="seutil_init_script_run_runinit" lineno="460">
<summary>
Execute init scripts in the run_init domain, and
allow the specified role the run_init domain,
and use the caller's terminal.
</summary>
<desc>
<p>
Execute init scripts in the run_init domain, and
allow the specified role the run_init domain,
and use the caller's terminal.
</p>
<p>
This is used for the Gentoo integrated run_init.
</p>
</desc>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the run_init domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the run_init domain to use.
</summary>
</param>
</interface>
<interface name="seutil_use_runinit_fds" lineno="476">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_domtrans_setfiles" lineno="494">
<summary>
Execute setfiles in the setfiles domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_run_setfiles" lineno="531">
<summary>
Execute setfiles in the setfiles domain, and
allow the specified role the setfiles domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the setfiles domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the setfiles domain to use.
</summary>
</param>
</interface>
<interface name="seutil_exec_setfiles" lineno="545">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_dontaudit_search_config" lineno="566">
<summary>
Do not audit attempts to search the SELinux
configuration directory (/etc/selinux).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="seutil_dontaudit_read_config" lineno="585">
<summary>
Do not audit attempts to read the SELinux
userland configuration (/etc/selinux).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="seutil_read_config" lineno="598">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_search_default_contexts" lineno="619">
<summary>
Search the policy directory with default_context files.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_read_default_contexts" lineno="633">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_read_file_contexts" lineno="649">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_rw_file_contexts" lineno="671">
<summary>
Read and write the file_contexts files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_read_bin_policy" lineno="687">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_create_bin_policy" lineno="702">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_relabelto_bin_policy" lineno="725">
<summary>
Allow the caller to relabel a file to the binary policy type.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_manage_bin_policy" lineno="739">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_read_src_policy" lineno="756">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_manage_src_policy" lineno="771">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="seutil_domtrans_semanage" lineno="792">
<summary>
Execute a domain transition to run semanage.
</summary>
<param name="domain">
<summary>
Domain allowed to transition.
</summary>
</param>
</interface>
<interface name="seutil_run_semanage" lineno="829">
<summary>
Execute semanage in the semanage domain, and
allow the specified role the semanage domain,
and use the caller's terminal.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the checkpolicy domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the semanage domain to use.
</summary>
</param>
</interface>
<interface name="seutil_manage_module_store" lineno="850">
<summary>
Full management of the semanage
module store.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="seutil_get_semanage_read_lock" lineno="873">
<summary>
Get read lock on module store
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="seutil_get_semanage_trans_lock" lineno="893">
<summary>
Get trans lock on module store
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="userdomain" filename="policy/modules/system/userdomain.if">
<summary>Policy for user domains</summary>
<template name="base_user_template" lineno="27">
<summary>
The template containing rules common to unprivileged
users and administrative users.
</summary>
<desc>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, home directories,
tmp, and tmpfs files.
</p>
<p>
This generally should not be used, rather the
unpriv_user_template or admin_user_template should
be used.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="unpriv_user_template" lineno="505">
<summary>
The template for creating a unprivileged user.
</summary>
<desc>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, home directories,
tmp, and tmpfs files.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="admin_user_template" lineno="759">
<summary>
The template for creating an administrative user.
</summary>
<desc>
<p>
This template creates a user domain, types, and
rules for the user's tty, pty, home directories,
tmp, and tmpfs files.
</p>
<p>
The privileges given to administrative users are:
<ul>
<li>Raw disk access</li>
<li>Set all sysctls</li>
<li>All kernel ring buffer controls</li>
<li>Set SELinux enforcement mode (enforcing/permissive)</li>
<li>Set SELinux booleans</li>
<li>Relabel all files but shadow</li>
<li>Create, read, write, and delete all files but shadow</li>
<li>Manage source and binary format SELinux policy</li>
<li>Run insmod</li>
</ul>
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., sysadm
is the prefix for sysadm_t).
</summary>
</param>
</template>
<template name="userdom_user_home_content" lineno="1007">
<summary>
Make the specified type usable in a
user home directory.
</summary>
<desc>
<p>
Make the specified type usable in a
user home directory.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="type">
<summary>
Type to be used as a file in the
user home directory.
</summary>
</param>
</template>
<template name="userdom_setattr_user_ptys" lineno="1041">
<summary>
Set the attributes of a user pty.
</summary>
<desc>
<p>
Set the attributes of a user pty.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_create_user_pty" lineno="1076">
<summary>
Create a user pty.
</summary>
<desc>
<p>
Create a user pty.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_search_user_home_dirs" lineno="1111">
<summary>
Search user home directories.
</summary>
<desc>
<p>
Search user home directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_list_user_home_dirs" lineno="1145">
<summary>
List user home directories.
</summary>
<desc>
<p>
List user home directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_user_home_domtrans" lineno="1193">
<summary>
Do a domain transition to the specified
domain when executing a program in the
user home directory.
</summary>
<desc>
<p>
Do a domain transition to the specified
domain when executing a program in the
user home directory.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="source_domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="target_domain">
<summary>
Domain to transition to.
</summary>
</param>
</template>
<template name="userdom_dontaudit_list_user_home_dirs" lineno="1228">
<summary>
Do not audit attempts to list user home subdirectories.
</summary>
<desc>
<p>
Do not audit attempts to list user home subdirectories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit
</summary>
</param>
</template>
<template name="userdom_manage_user_home_content_dirs" lineno="1263">
<summary>
Create, read, write, and delete directories
in a user home subdirectory.
</summary>
<desc>
<p>
Create, read, write, and delete directories
in a user home subdirectory.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_setattr_user_home_content_files" lineno="1300">
<summary>
Do not audit attempts to set the
attributes of user home files.
</summary>
<desc>
<p>
Do not audit attempts to set the
attributes of user home files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_read_user_home_content_files" lineno="1333">
<summary>
Read user home files.
</summary>
<desc>
<p>
Read user home files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_read_user_home_content_files" lineno="1369">
<summary>
Do not audit attempts to read user home files.
</summary>
<desc>
<p>
Do not audit attempts to read user home files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_dontaudit_write_user_home_content_files" lineno="1403">
<summary>
Do not audit attempts to write user home files.
</summary>
<desc>
<p>
Do not audit attempts to write user home files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_read_user_home_content_symlinks" lineno="1436">
<summary>
Read user home subdirectory symbolic links.
</summary>
<desc>
<p>
Read user home subdirectory symbolic links.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_exec_user_home_content_files" lineno="1472">
<summary>
Execute user home files.
</summary>
<desc>
<p>
Execute user home files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_exec_user_home_content_files" lineno="1508">
<summary>
Do not audit attempts to execute user home files.
</summary>
<desc>
<p>
Do not audit attempts to execute user home files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_home_content_files" lineno="1543">
<summary>
Create, read, write, and delete files
in a user home subdirectory.
</summary>
<desc>
<p>
Create, read, write, and delete files
in a user home subdirectory.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_home_content_symlinks" lineno="1581">
<summary>
Create, read, write, and delete symbolic links
in a user home subdirectory.
</summary>
<desc>
<p>
Create, read, write, and delete symbolic links
in a user home subdirectory.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_home_content_pipes" lineno="1619">
<summary>
Create, read, write, and delete named pipes
in a user home subdirectory.
</summary>
<desc>
<p>
Create, read, write, and delete named pipes
in a user home subdirectory.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_home_content_sockets" lineno="1657">
<summary>
Create, read, write, and delete named sockets
in a user home subdirectory.
</summary>
<desc>
<p>
Create, read, write, and delete named sockets
in a user home subdirectory.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_user_home_dir_filetrans" lineno="1708">
<summary>
Create objects in a user home directory
with an automatic type transition to
a specified private type.
</summary>
<desc>
<p>
Create objects in a user home directory
with an automatic type transition to
a specified private type.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private_type">
<summary>
The type of the object to create.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.  If not
specified, file is used.
</summary>
</param>
</template>
<template name="userdom_user_home_dir_filetrans_user_home_content" lineno="1753">
<summary>
Create objects in a user home directory
with an automatic type transition to
the user home file type.
</summary>
<desc>
<p>
Create objects in a user home directory
with an automatic type transition to
the user home file type.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.  If not
specified, file is used.
</summary>
</param>
</template>
<template name="userdom_write_user_tmp_sockets" lineno="1788">
<summary>
Write to user temporary named sockets.
</summary>
<desc>
<p>
Write to user temporary named sockets.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_list_user_tmp" lineno="1822">
<summary>
List user temporary directories.
</summary>
<desc>
<p>
List user temporary directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_list_user_tmp" lineno="1858">
<summary>
Do not audit attempts to list user
temporary directories.
</summary>
<desc>
<p>
Do not audit attempts to list user
temporary directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_read_user_tmp_files" lineno="1891">
<summary>
Read user temporary files.
</summary>
<desc>
<p>
Read user temporary files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_read_user_tmp_files" lineno="1928">
<summary>
Do not audit attempts to read users
temporary files.
</summary>
<desc>
<p>
Do not audit attempts to read users
temporary files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_dontaudit_append_user_tmp_files" lineno="1963">
<summary>
Do not audit attempts to append users
temporary files.
</summary>
<desc>
<p>
Do not audit attempts to append users
temporary files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_rw_user_tmp_files" lineno="1996">
<summary>
Read and write user temporary files.
</summary>
<desc>
<p>
Read and write user temporary files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_read_user_tmp_symlinks" lineno="2033">
<summary>
Read user
temporary symbolic links.
</summary>
<desc>
<p>
Read user
temporary symbolic links.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_tmp_dirs" lineno="2070">
<summary>
Create, read, write, and delete user
temporary directories.
</summary>
<desc>
<p>
Create, read, write, and delete user
temporary directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_tmp_files" lineno="2106">
<summary>
Create, read, write, and delete user
temporary files.
</summary>
<desc>
<p>
Create, read, write, and delete user
temporary files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_tmp_symlinks" lineno="2143">
<summary>
Create, read, write, and delete user
temporary symbolic links.
</summary>
<desc>
<p>
Create, read, write, and delete user
temporary symbolic links.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_tmp_pipes" lineno="2180">
<summary>
Create, read, write, and delete user
temporary named pipes.
</summary>
<desc>
<p>
Create, read, write, and delete user
temporary named pipes.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_manage_user_tmp_sockets" lineno="2217">
<summary>
Create, read, write, and delete user
temporary named sockets.
</summary>
<desc>
<p>
Create, read, write, and delete user
temporary named sockets.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_rw_user_tmpfs_files" lineno="2252">
<summary>
Read user tmpfs files.
</summary>
<desc>
<p>
Read user tmpfs files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_list_user_untrusted_content" lineno="2288">
<summary>
List users untrusted directories.
</summary>
<desc>
<p>
List users untrusted directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_list_user_untrusted_content" lineno="2323">
<summary>
Do not audit attempts to list user
untrusted directories.
</summary>
<desc>
<p>
Do not audit attempts to read user
untrusted directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_read_user_untrusted_content_files" lineno="2356">
<summary>
Read user untrusted files.
</summary>
<desc>
<p>
Read user untrusted files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_read_user_untrusted_content_files" lineno="2392">
<summary>
Do not audit attempts to read users
untrusted files.
</summary>
<desc>
<p>
Do not audit attempts to read users
untrusted files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_read_user_untrusted_content_symlinks" lineno="2425">
<summary>
Read user untrusted symbolic links.
</summary>
<desc>
<p>
Read user untrusted symbolic links.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_list_user_tmp_untrusted_content" lineno="2459">
<summary>
List users temporary untrusted directories.
</summary>
<desc>
<p>
List users temporary untrusted directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_list_user_tmp_untrusted_content" lineno="2494">
<summary>
Do not audit attempts to list user
temporary untrusted directories.
</summary>
<desc>
<p>
Do not audit attempts to list user
temporary directories.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_read_user_tmp_untrusted_content_files" lineno="2527">
<summary>
Read user temporary untrusted files.
</summary>
<desc>
<p>
Read user temporary untrusted files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_read_user_tmp_untrusted_content_files" lineno="2563">
<summary>
Do not audit attempts to read users
temporary untrusted files.
</summary>
<desc>
<p>
Do not audit attempts to read users
temporary untrusted files.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</template>
<template name="userdom_read_user_tmp_untrusted_content_symlinks" lineno="2596">
<summary>
Read user temporary untrusted symbolic links.
</summary>
<desc>
<p>
Read user temporary untrusted symbolic links.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<interface name="userdom_read_all_untrusted_content" lineno="2615">
<summary>
Read all user untrusted content files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_read_all_tmp_untrusted_content" lineno="2634">
<summary>
Read all user temporary untrusted content files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<template name="userdom_setattr_user_ttys" lineno="2668">
<summary>
Set the attributes of a user domain tty.
</summary>
<desc>
<p>
Set the attributes of a user domain tty.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_use_user_ttys" lineno="2705">
<summary>
Read and write a user domain tty.
</summary>
<desc>
<p>
Read and write a user domain tty.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_use_user_terminals" lineno="2742">
<summary>
Read and write a user domain tty and pty.
</summary>
<desc>
<p>
Read and write a user domain tty and pty.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<template name="userdom_dontaudit_use_user_terminals" lineno="2784">
<summary>
Do not audit attempts to read and write
a user domain tty and pty.
</summary>
<desc>
<p>
Do not audit attempts to read and write
a user domain tty and pty.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<interface name="userdom_spec_domtrans_all_users" lineno="2805">
<summary>
Execute a shell in all user domains.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_xsession_spec_domtrans_all_users" lineno="2829">
<summary>
Execute an Xserver session in all unprivileged user domains.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_spec_domtrans_unpriv_users" lineno="2853">
<summary>
Execute a shell in all unprivileged user domains.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_xsession_spec_domtrans_unpriv_users" lineno="2877">
<summary>
Execute an Xserver session in all unprivileged user domains.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_unpriv_user_semaphores" lineno="2899">
<summary>
Manage unpriviledged user SysV sempaphores.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_unpriv_user_shared_mem" lineno="2918">
<summary>
Manage unpriviledged user SysV shared
memory segments.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_bin_spec_domtrans_unpriv_users" lineno="2938">
<summary>
Execute bin_t in the unprivileged user domains. This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_sbin_spec_domtrans_unpriv_users" lineno="2963">
<summary>
Execute generic sbin programs in all unprivileged user
domains. This is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_entry_spec_domtrans_unpriv_users" lineno="2988">
<summary>
Execute all entrypoint files in unprivileged user
domains. This is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_shell_domtrans_sysadm" lineno="3011">
<summary>
Execute a shell in the sysadm domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_bin_spec_domtrans_sysadm" lineno="3039">
<summary>
Execute a generic bin program in the sysadm domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_sbin_spec_domtrans_sysadm" lineno="3062">
<summary>
Execute a generic sbin program in the sysadm domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_entry_spec_domtrans_sysadm" lineno="3087">
<summary>
Execute all entrypoint files in the sysadm domain. This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_search_staff_home_dirs" lineno="3110">
<summary>
Search the staff users home directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_search_staff_home_dirs" lineno="3130">
<summary>
Do not audit attempts to search the staff
users home directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_append_staff_home_content_files" lineno="3149">
<summary>
Do not audit attempts to append to the staff
users home directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_read_staff_home_content_files" lineno="3167">
<summary>
Read files in the staff users home directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_sigchld_sysadm" lineno="3187">
<summary>
Send a SIGCHLD signal to sysadm users.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_getattr_sysadm_ttys" lineno="3210">
<summary>
Do not audit attepts to get the attributes
of sysadm ttys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_use_sysadm_ttys" lineno="3232">
<summary>
Read and write sysadm ttys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_sysadm_ttys" lineno="3256">
<summary>
Do not audit attempts to use sysadm ttys.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_use_sysadm_ptys" lineno="3278">
<summary>
Read and write sysadm ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_sysadm_ptys" lineno="3302">
<summary>
Dont audit attempts to read and write sysadm ptys.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_use_sysadm_terms" lineno="3324">
<summary>
Read and write sysadm ttys and ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_sysadm_terms" lineno="3339">
<summary>
Do not audit attempts to use sysadm ttys and ptys.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_use_sysadm_fds" lineno="3361">
<summary>
Inherit and use sysadm file descriptors
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_rw_sysadm_pipes" lineno="3383">
<summary>
Read and write sysadm user unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_getattr_sysadm_home_dirs" lineno="3407">
<summary>
Get the attributes of the sysadm users
home directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_getattr_sysadm_home_dirs" lineno="3427">
<summary>
Do not audit attempts to get the
attributes of the sysadm users
home directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_search_sysadm_home_dirs" lineno="3453">
<summary>
Search the sysadm users home directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_search_sysadm_home_dirs" lineno="3472">
<summary>
Do not audit attempts to search the sysadm
users home directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_list_sysadm_home_dirs" lineno="3498">
<summary>
List the sysadm users home directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_list_sysadm_home_dirs" lineno="3517">
<summary>
Do not audit attempts to list the sysadm
users home directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_read_sysadm_home_content_files" lineno="3536">
<summary>
Do not audit attempts to search the sysadm
users home directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_sysadm_home_dir_filetrans" lineno="3576">
<summary>
Create objects in sysadm home directories
with automatic file type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
If not specified, file is used.
</summary>
</param>
</interface>
<interface name="userdom_search_sysadm_home_content_dirs" lineno="3595">
<summary>
Search the sysadm users home sub directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_read_sysadm_home_content_files" lineno="3613">
<summary>
Read files in the sysadm users home directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_list_all_users_home_dirs" lineno="3633">
<summary>
List all users home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_search_all_users_home_content" lineno="3652">
<summary>
Search all users home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_search_all_users_home_content" lineno="3671">
<summary>
Do not audit attempts to search all users home directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_read_all_users_home_content_files" lineno="3689">
<summary>
Read all files in all users home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_all_users_home_content_dirs" lineno="3710">
<summary>
Create, read, write, and delete all directories
in all users home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_all_users_home_content_files" lineno="3730">
<summary>
Create, read, write, and delete all files
in all users home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_all_users_home_content_symlinks" lineno="3751">
<summary>
Create, read, write, and delete all symlinks
in all users home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_priveleged_home_dir_manager" lineno="3781">
<summary>
Make the specified domain a privileged
home directory manager.
</summary>
<desc>
<p>
Make the specified domain a privileged
home directory manager.  This domain will be
able to manage the contents of all users
general home directory content, and create
files with the correct context.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_signal_unpriv_users" lineno="3800">
<summary>
Send general signals to unprivileged user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_use_unpriv_users_fds" lineno="3818">
<summary>
Inherit the file descriptors from unprivileged user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_unpriv_user_fds" lineno="3837">
<summary>
Do not audit attempts to inherit the
file descriptors from all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_home_filetrans_generic_user_home_dir" lineno="3856">
<summary>
Create generic user home directories
with automatic file type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_search_generic_user_home_dirs" lineno="3874">
<summary>
Search generic user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_generic_user_home_dir_filetrans_generic_user_home_content" lineno="3899">
<summary>
Create objects in generic user home directories
with automatic file type transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="object_class">
<summary>
The class of the object to be created.
If not specified, file is used.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_search_generic_user_home_dirs" lineno="3919">
<summary>
Don't audit search on the user home subdirectory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_generic_user_home_content_dirs" lineno="3939">
<summary>
Create, read, write, and delete
subdirectories of generic user
home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_generic_user_home_content_files" lineno="3960">
<summary>
Create, read, write, and delete files
in generic user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_generic_user_home_content_symlinks" lineno="3982">
<summary>
Create, read, write, and delete symbolic
links in generic user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_generic_user_home_content_pipes" lineno="4004">
<summary>
Create, read, write, and delete named
pipes in generic user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_manage_generic_user_home_content_sockets" lineno="4026">
<summary>
Create, read, write, and delete named
sockets in generic user home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_search_unpriv_users_home_dirs" lineno="4047">
<summary>
Search all unprivileged users home directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_read_unpriv_users_home_content_files" lineno="4067">
<summary>
Read all unprivileged users home directory
files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_setattr_unpriv_users_ptys" lineno="4089">
<summary>
Set the attributes of user ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_use_unpriv_users_ptys" lineno="4107">
<summary>
Read and write unprivileged user ptys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_unpriv_users_ptys" lineno="4131">
<summary>
Do not audit attempts to use unprivileged
user ptys.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_relabelto_unpriv_users_ptys" lineno="4153">
<summary>
Relabel files to unprivileged user pty types.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_relabelfrom_unpriv_users_ptys" lineno="4172">
<summary>
Do not audit attempts to relabel files from
unprivileged user pty types.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_list_unpriv_users_tmp" lineno="4190">
<summary>
Read all unprivileged users temporary directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_read_unpriv_users_tmp_files" lineno="4212">
<summary>
Read all unprivileged users temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_read_unpriv_users_tmp_symlinks" lineno="4234">
<summary>
Read all unprivileged users temporary symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_write_unpriv_users_tmp_files" lineno="4256">
<summary>
Write all unprivileged users files in /tmp
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_unpriv_users_ttys" lineno="4275">
<summary>
Do not audit attempts to use unprivileged
user ttys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_read_all_users_state" lineno="4297">
<summary>
Read the process state of all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_getattr_all_users" lineno="4317">
<summary>
Get the attributes of all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_use_all_users_fds" lineno="4335">
<summary>
Inherit the file descriptors from all user domains
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dontaudit_use_all_users_fds" lineno="4354">
<summary>
Do not audit attempts to inherit the file
descriptors from any user domains.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="userdom_signal_all_users" lineno="4372">
<summary>
Send general signals to all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_sigchld_all_users" lineno="4390">
<summary>
Send a SIGCHLD signal to all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_dbus_send_all_users" lineno="4408">
<summary>
Send a dbus message to all user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="userdom_unconfined" lineno="4427">
<summary>
Unconfined access to user domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="raid" filename="policy/modules/system/raid.if">
<summary>RAID array management tools</summary>
<interface name="raid_domtrans_mdadm" lineno="13">
<summary>
Execute software raid tools in the mdadm domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="raid_manage_mdadm_pid" lineno="45">
<summary>
Create, read, write, and delete the mdadm pid files.
</summary>
<desc>
<p>
Create, read, write, and delete the mdadm pid files.
</p>
<p>
Added for use in the init module.
</p>
</desc>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="hostname" filename="policy/modules/system/hostname.if">
<summary>Policy for changing the system host name.</summary>
<interface name="hostname_domtrans" lineno="13">
<summary>
Execute hostname in the hostname domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="hostname_run" lineno="48">
<summary>
Execute hostname in the hostname domain, and
allow the specified role the hostname domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the hostname domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the hostname domain to use.
</summary>
</param>
</interface>
<interface name="hostname_exec" lineno="68">
<summary>
Execute hostname in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="miscfiles" filename="policy/modules/system/miscfiles.if">
<summary>Miscelaneous files.</summary>
<interface name="miscfiles_read_certs" lineno="13">
<summary>
Read system SSL certificates.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_fonts" lineno="33">
<summary>
Read fonts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_fonts" lineno="57">
<summary>
Create, read, write, and delete fonts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_hwdata" lineno="81">
<summary>
Read hardware identification data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_localization" lineno="101">
<summary>
Allow process to read localization info
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_legacy_read_localization" lineno="127">
<summary>
Allow process to read legacy time localization info
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_dontaudit_search_man_pages" lineno="146">
<summary>
Do not audit attempts to search man pages.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="miscfiles_read_man_pages" lineno="164">
<summary>
Read man pages
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_delete_man_pages" lineno="186">
<summary>
Delete man pages
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_man_pages" lineno="207">
<summary>
Create, read, write, and delete man pages
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_public_files" lineno="229">
<summary>
Read public files used for file
transfer services.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_manage_public_files" lineno="250">
<summary>
Create, read, write, and delete public files
and directories used for file transfer services.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_read_tetex_data" lineno="270">
<summary>
Read TeX data
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="miscfiles_exec_tetex_data" lineno="294">
<summary>
Execute TeX data programs in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="init" filename="policy/modules/system/init.if">
<summary>System initialization programs (init and init scripts).</summary>
<interface name="init_domain" lineno="18">
<summary>
Create a domain which can be started by init.
</summary>
<param name="domain">
<summary>
Type to be used as a domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
</interface>
<interface name="init_daemon_domain" lineno="53">
<summary>
Create a domain for long running processes
(daemons) which can be started by init scripts.
</summary>
<param name="domain">
<summary>
Type to be used as a domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
</interface>
<interface name="init_system_domain" lineno="133">
<summary>
Create a domain for short running processes
which can be started by init scripts.
</summary>
<param name="domain">
<summary>
Type to be used as a domain.
</summary>
</param>
<param name="entry_point">
<summary>
Type of the program to be used as an entry point to this domain.
</summary>
</param>
</interface>
<interface name="init_domtrans" lineno="156">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_exec" lineno="179">
<summary>
Execute the init program in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_getpgid" lineno="192">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_getattr_initctl" lineno="204">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_dontaudit_getattr_initctl" lineno="216">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_write_initctl" lineno="228">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_rw_initctl" lineno="241">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_dontaudit_rw_initctl" lineno="254">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_signull" lineno="272">
<summary>
Send init a null signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_sigchld" lineno="290">
<summary>
Send init a SIGCHLD signal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_use_fds" lineno="302">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_dontaudit_use_fds" lineno="314">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_udp_send" lineno="332">
<summary>
Send UDP network traffic to init.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_script_file_entry_type" lineno="352">
<summary>
Make init scripts an entry point for
the specified domain.
</summary>
<param name="domain">
<summary>
The domain for which init scripts are an entrypoint.
</summary>
</param>
</interface>
<interface name="init_domtrans_script" lineno="364">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_script_file_domtrans" lineno="403">
<summary>
Execute a init script in a specified domain.
</summary>
<desc>
<p>
Execute a init script in a specified domain.
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
</desc>
<param name="source_domain">
<summary>
Domain to transition from.
</summary>
</param>
<param name="target_domain">
<summary>
Domain to transition to.
</summary>
</param>
</interface>
<interface name="init_run_daemon" lineno="439">
<summary>
Start and stop daemon programs directly.
</summary>
<desc>
<p>
Start and stop daemon programs directly
in the traditional "/etc/init.d/daemon start"
style, and do not require run_init.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be performing this action.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal of the user.
</summary>
</param>
</interface>
<interface name="init_write_script_pipes" lineno="460">
<summary>
Write an init script unnamed pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_getattr_script_files" lineno="478">
<summary>
Get the attribute of init script entrypoint files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_exec_script_files" lineno="491">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_read_script_state" lineno="510">
<summary>
Read the process state (/proc/pid) of the init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_use_script_fds" lineno="531">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_dontaudit_use_script_fds" lineno="543">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_getpgid_script" lineno="555">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_sigchld_script" lineno="573">
<summary>
Send SIGCHLD signals to init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_signal_script" lineno="591">
<summary>
Send generic signals to init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_signull_script" lineno="609">
<summary>
Send null signals to init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rw_script_pipes" lineno="627">
<summary>
Read and write init script unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_udp_send_script" lineno="645">
<summary>
Send UDP network traffic to init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_stream_connect_script" lineno="665">
<summary>
Allow the specified domain to connect to
init scripts with a unix socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_stream_connect_script" lineno="684">
<summary>
Dont audit the specified domain connecting to
init scripts with a unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dbus_chat_script" lineno="703">
<summary>
Send and receive messages from
init scripts over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_use_script_ptys" lineno="732">
<summary>
Read and write the init script pty.
</summary>
<desc>
<p>
Read and write the init script pty.  This
pty is generally opened by the open_init_pty
portion of the run_init program so that the
daemon does not require direct access to
the administrator terminal.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_dontaudit_use_script_ptys" lineno="752">
<summary>
Do not audit attempts to read and
write the init script pty.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="init_read_script_files" lineno="770">
<summary>
Read init scripts.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rw_script_tmp_files" lineno="789">
<summary>
Read and write init script temporary data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_script_tmp_filetrans" lineno="819">
<summary>
Create files in a init script
temporary data directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="file_type">
<summary>
The type of the object to be created
</summary>
</param>
<param name="object_class">
<summary>
The object class.
</summary>
</param>
</interface>
<interface name="init_getattr_utmp" lineno="840">
<summary>
Get the attributes of init script process id files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_read_utmp" lineno="852">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_dontaudit_write_utmp" lineno="865">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_dontaudit_lock_utmp" lineno="884">
<summary>
Do not audit attempts to lock
init script pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="init_rw_utmp" lineno="896">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_dontaudit_rw_utmp" lineno="909">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="init_manage_utmp" lineno="927">
<summary>
Create, read, write, and delete utmp.
</summary>
<param name="domain">
<summary>
Domain access allowed.
</summary>
</param>
</interface>
</module>
<module name="logging" filename="policy/modules/system/logging.if">
<summary>Policy for the kernel message logger and system logging daemon.</summary>
<interface name="logging_log_file" lineno="14">
<summary>
Make the specified type a file
used for logs.
</summary>
<param name="file_type">
<summary>
Type of the file to be used as a log.
</summary>
</param>
</interface>
<interface name="logging_read_audit_log" lineno="35">
<summary>
Read the audit log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_domtrans_auditctl" lineno="55">
<summary>
Execute auditctl in the auditctl domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_domtrans_syslog" lineno="78">
<summary>
Execute syslogd in the syslog domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="logging_log_filetrans" lineno="96">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="logging_send_syslog_msg" lineno="110">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="logging_read_audit_config" lineno="138">
<summary>
Read the auditd configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_search_logs" lineno="159">
<summary>
Allows the domain to open a file in the
log directory, but does not allow the listing
of the contents of the log directory.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="logging_list_logs" lineno="178">
<summary>
List the contents of the generic log directory (/var/log).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_rw_generic_log_dirs" lineno="197">
<summary>
Read and write the generic log directory (/var/log).
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="logging_dontaudit_getattr_all_logs" lineno="210">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="logging_append_all_logs" lineno="222">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="logging_read_all_logs" lineno="237">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="logging_exec_all_logs" lineno="260">
<summary>
Execute all log files in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="logging_manage_all_logs" lineno="274">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="logging_read_generic_logs" lineno="289">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="logging_write_generic_logs" lineno="303">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="logging_rw_generic_logs" lineno="323">
<summary>
Read and write generic log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="logging_manage_generic_logs" lineno="344">
<summary>
Create, read, write, and delete
generic log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="libraries" filename="policy/modules/system/libraries.if">
<summary>Policy for system libraries.</summary>
<interface name="libs_domtrans_ldconfig" lineno="13">
<summary>
Execute ldconfig in the ldconfig domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_run_ldconfig" lineno="47">
<summary>
Execute ldconfig in the ldconfig domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to allow the ldconfig domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the ldconfig domain to use.
</summary>
</param>
</interface>
<interface name="libs_use_ld_so" lineno="68">
<summary>
Use the dynamic link/loader for automatic loading
of shared libraries.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_legacy_use_ld_so" lineno="92">
<summary>
Use the dynamic link/loader for automatic loading
of shared libraries with legacy support.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_exec_ld_so" lineno="112">
<summary>
Execute the dynamic link/loader in the caller's domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_manage_ld_so" lineno="135">
<summary>
Create, read, write, and delete the
dynamic link/loader.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_relabel_ld_so" lineno="156">
<summary>
Relabel to and from the type used for
the dynamic link/loader.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_rw_ld_so_cache" lineno="176">
<summary>
Modify the dynamic link/loader's cached listing
of shared libraries.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_search_lib" lineno="195">
<summary>
Search lib directories.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_read_lib_files" lineno="214">
<summary>
Read files in the library directories, such
as static libraries.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_exec_lib_files" lineno="234">
<summary>
Execute library scripts in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_use_lib_files" lineno="256">
<summary>
Load and execute functions from generic
lib files as shared libraries.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_manage_lib_files" lineno="279">
<summary>
Create, read, write, and delete generic
files in library directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_relabelto_lib_files" lineno="298">
<summary>
Relabel files to the type used in library directories.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_relabel_lib_files" lineno="319">
<summary>
Relabel to and from the type used
for generic lib files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_delete_lib_symlinks" lineno="339">
<summary>
Delete generic symlinks in library directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_manage_shared_libs" lineno="359">
<summary>
Create, read, write, and delete shared libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="libs_use_shared_libs" lineno="378">
<summary>
Load and execute functions from shared libraries.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_legacy_use_shared_libs" lineno="402">
<summary>
Load and execute functions from shared libraries,
with legacy support.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="libs_relabel_shared_libs" lineno="423">
<summary>
Relabel to and from the type used for
shared libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
</layer>
<layer name="services">
<summary>
	Policy modules for system services, like cron, and network services,
	like sshd.
</summary>
<module name="portmap" filename="policy/modules/services/portmap.if">
<summary>RPC port mapping service.</summary>
<interface name="portmap_domtrans_helper" lineno="13">
<summary>
Execute portmap_helper in the helper domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="portmap_run_helper" lineno="49">
<summary>
Execute portmap helper in the helper domain, and
allow the specified role the helper domain.
Communicate with portmap.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the portmap domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the portmap domain to use.
</summary>
</param>
</interface>
<interface name="portmap_udp_send" lineno="77">
<summary>
Send UDP network traffic to portmap.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="portmap_udp_chat" lineno="96">
<summary>
Send and receive UDP network traffic from portmap.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="portmap_tcp_connect" lineno="117">
<summary>
Connect to portmap over a TCP socket
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="remotelogin" filename="policy/modules/services/remotelogin.if">
<summary>Policy for rshd, rlogind, and telnetd.</summary>
<interface name="remotelogin_domtrans" lineno="13">
<summary>
Domain transition to the remote login domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="ntp" filename="policy/modules/services/ntp.if">
<summary>Network time protocol daemon</summary>
<interface name="ntp_stub" lineno="13">
<summary>
NTP stub interface.  No access allowed.
</summary>
<param name="domain" optional="true">
<summary>
N/A
</summary>
</param>
</interface>
<interface name="ntp_domtrans" lineno="29">
<summary>
Execute ntp server in the ntpd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="ntp_domtrans_ntpdate" lineno="53">
<summary>
Execute ntp server in the ntpd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="rlogin" filename="policy/modules/services/rlogin.if">
<summary>Remote login daemon</summary>
<interface name="rlogin_domtrans" lineno="13">
<summary>
Execute rlogind in the rlogin domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="inetd" filename="policy/modules/services/inetd.if">
<summary>Internet services daemon.</summary>
<interface name="inetd_core_service_domain" lineno="27">
<summary>
Define the specified domain as a inetd service.
</summary>
<desc>
<p>
Define the specified domain as a inetd service.  The
inetd_service_domain(), inetd_tcp_service_domain(),
or inetd_udp_service_domain() interfaces should be used
instead of this interface, as this interface only provides
the common rules to these three interfaces.
</p>
</desc>
<param name="domain">
<summary>
The type associated with the inetd service process.
</summary>
</param>
<param name="entrypoint">
<summary>
The type associated with the process program.
</summary>
</param>
</interface>
<interface name="inetd_tcp_service_domain" lineno="96">
<summary>
Define the specified domain as a TCP inetd service.
</summary>
<param name="domain">
<summary>
The type associated with the inetd service process.
</summary>
</param>
<param name="entrypoint">
<summary>
The type associated with the process program.
</summary>
</param>
</interface>
<interface name="inetd_udp_service_domain" lineno="122">
<summary>
Define the specified domain as a UDP inetd service.
</summary>
<param name="domain">
<summary>
The type associated with the inetd service process.
</summary>
</param>
<param name="entrypoint">
<summary>
The type associated with the process program.
</summary>
</param>
</interface>
<interface name="inetd_service_domain" lineno="147">
<summary>
Define the specified domain as a TCP and UDP inetd service.
</summary>
<param name="domain">
<summary>
The type associated with the inetd service process.
</summary>
</param>
<param name="entrypoint">
<summary>
The type associated with the process program.
</summary>
</param>
</interface>
<interface name="inetd_use_fds" lineno="168">
<summary>
Inherit and use file descriptors from inetd.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inetd_tcp_connect" lineno="186">
<summary>
Connect to the inetd service using a TCP connection.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inetd_domtrans_child" lineno="206">
<summary>
Run inetd child process in the inet child domain
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inetd_udp_send" lineno="230">
<summary>
Send UDP network traffic to inetd.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="inetd_rw_tcp_sockets" lineno="249">
<summary>
Read and write inetd TCP sockets.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="ktalk" filename="policy/modules/services/ktalk.if">
<summary>KDE Talk daemon</summary>
</module>
<module name="finger" filename="policy/modules/services/finger.if">
<summary>Finger user information service.</summary>
<interface name="finger_domtrans" lineno="13">
<summary>
Execute fingerd in the fingerd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="finger_tcp_connect" lineno="36">
<summary>
Allow the specified domain to connect to fingerd with a tcp socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="howl" filename="policy/modules/services/howl.if">
<summary>Port of Apple Rendezvous multicast DNS</summary>
<interface name="howl_signal" lineno="13">
<summary>
Send generic signals to howl.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="tftp" filename="policy/modules/services/tftp.if">
<summary>Trivial file transfer protocol daemon</summary>
</module>
<module name="kerberos" filename="policy/modules/services/kerberos.if">
<summary>MIT Kerberos admin and KDC</summary>
<desc>
<p>
This policy supports:
</p>
<p>
Servers:
<ul>
<li>kadmind</li>
<li>krb5kdc</li>
</ul>
</p>
<p>
Clients:
<ul>
<li>kinit</li>
<li>kdestroy</li>
<li>klist</li>
<li>ksu (incomplete)</li>
</ul>
</p>
</desc>
<interface name="kerberos_use" lineno="34">
<summary>
Use kerberos services
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kerberos_read_config" lineno="73">
<summary>
Read the kerberos configuration file (/etc/krb5.conf).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kerberos_dontaudit_write_config" lineno="93">
<summary>
Do not audit attempts to write the kerberos
configuration file (/etc/krb5.conf).
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="kerberos_rw_config" lineno="111">
<summary>
Read and write the kerberos configuration file (/etc/krb5.conf).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="kerberos_read_keytab" lineno="130">
<summary>
Read the kerberos key table.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="gpm" filename="policy/modules/services/gpm.if">
<summary>General Purpose Mouse driver</summary>
<interface name="gpm_stream_connect" lineno="14">
<summary>
Connect to GPM over a unix domain
stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="gpm_getattr_gpmctl" lineno="34">
<summary>
Get the attributes of the GPM
control channel named socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="gpm_dontaudit_getattr_gpmctl" lineno="55">
<summary>
Do not audit attempts to get the
attributes of the GPM control channel
named socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="gpm_setattr_gpmctl" lineno="74">
<summary>
Set the attributes of the GPM
control channel named socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="uucp" filename="policy/modules/services/uucp.if">
<summary>Unix to Unix Copy</summary>
</module>
<module name="apache" filename="policy/modules/services/apache.if">
<summary>Apache web server</summary>
<template name="apache_content_template" lineno="14">
<summary>
Create a set of derived types for apache
web content.
</summary>
<param name="prefix">
<summary>
The prefix to be used for deriving type names.
</summary>
</param>
</template>
<template name="apache_per_userdomain_template" lineno="269">
<summary>
The per user domain template for the apache module.
</summary>
<desc>
<p>
This template creates types used for web pages
and web cgi to be used from the user home directory.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<interface name="apache_domtrans" lineno="344">
<summary>
Transition to apache.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_signull" lineno="368">
<summary>
Send a null signal to apache.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_sigchld" lineno="386">
<summary>
Send a SIGCHLD signal to apache.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_use_fds" lineno="404">
<summary>
Inherit and use file descriptors from Apache.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_dontaudit_rw_stream_sockets" lineno="423">
<summary>
Do not audit attempts to read and write Apache
unix domain stream sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_dontaudit_rw_tcp_sockets" lineno="442">
<summary>
Do not audit attempts to read and write Apache
TCP sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_read_config" lineno="461">
<summary>
Allow the specified domain to read
apache configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_domtrans_helper" lineno="483">
<summary>
Execute the Apache helper program with
a domain transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_run_helper" lineno="519">
<summary>
Execute the Apache helper program with
a domain transition, and allow the
specified role the dmidecode domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the dmidecode domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the dmidecode domain to use.
</summary>
</param>
</interface>
<interface name="apache_read_log" lineno="540">
<summary>
Allow the specified domain to read
apache log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_dontaudit_append_log" lineno="562">
<summary>
Do not audit attempts to append to the
Apache logs.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="apache_dontaudit_search_modules" lineno="581">
<summary>
Do not audit attempts to search Apache
module directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="apache_list_modules" lineno="601">
<summary>
Allow the specified domain to list
the contents of the apache modules
directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_exec_modules" lineno="620">
<summary>
Allow the specified domain to execute
apache modules.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_manage_sys_content" lineno="642">
<summary>
Allow the specified domain to manage
apache system content files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_domtrans_sys_script" lineno="666">
<summary>
Execute all web scripts in the system
script domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_dontaudit_rw_sys_script_stream_sockets" lineno="693">
<summary>
Do not audit attempts to read and write Apache
system script unix domain stream sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_domtrans_all_scripts" lineno="712">
<summary>
Execute all user scripts in the user
script domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_run_all_scripts" lineno="739">
<summary>
Execute all user scripts in the user
script domain.  Add user script domains
to the specified role.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the script domains.
</summary>
</param>
</interface>
<interface name="apache_read_squirrelmail_data" lineno="759">
<summary>
Allow the specified domain to read
apache squirrelmail data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_append_squirrelmail_data" lineno="778">
<summary>
Allow the specified domain to append
apache squirrelmail data.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apache_read_sys_content" lineno="796">
<summary>
Read apache system content
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="apache_search_sys_script_state" lineno="815">
<summary>
Search system script state directory.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
</module>
<module name="dhcp" filename="policy/modules/services/dhcp.if">
<summary>Dynamic host configuration protocol (DHCP) server</summary>
<interface name="dhcpd_setattr_state_files" lineno="14">
<summary>
Set the attributes of the DCHP
server state files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="inn" filename="policy/modules/services/inn.if">
<summary>Internet News NNTP server</summary>
<interface name="inn_exec" lineno="14">
<summary>
Allow the specified domain to execute innd
in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inn_exec_config" lineno="33">
<summary>
Allow the specified domain to execute
inn configuration files in /etc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inn_manage_log" lineno="51">
<summary>
Create, read, write, and delete the innd log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inn_manage_pid" lineno="71">
<summary>
Create, read, write, and delete the innd pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inn_read_config" lineno="92">
<summary>
Read innd configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inn_read_news_lib" lineno="112">
<summary>
Read innd news library files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inn_read_news_spool" lineno="132">
<summary>
Read innd news library files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="inn_dgram_send" lineno="152">
<summary>
Send to a innd unix dgram socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="sendmail" filename="policy/modules/services/sendmail.if">
<summary>Policy for sendmail.</summary>
<interface name="sendmail_stub" lineno="13">
<summary>
Sendmail stub interface.  No access allowed.
</summary>
<param name="domain" optional="true">
<summary>
N/A
</summary>
</param>
</interface>
<interface name="sendmail_domtrans" lineno="29">
<summary>
Domain transition to sendmail.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sendmail_rw_tcp_sockets" lineno="54">
<summary>
Read and write sendmail TCP sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sendmail_rw_unix_stream_sockets" lineno="71">
<summary>
Read and write sendmail unix_stream_sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sendmail_manage_log" lineno="89">
<summary>
Create, read, write, and delete sendmail logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="sendmail_create_log" lineno="108">
<summary>
Create sendmail logs with the correct type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="dbus" filename="policy/modules/services/dbus.if">
<summary>Desktop messaging bus</summary>
<interface name="dbus_stub" lineno="13">
<summary>
DBUS stub interface.  No access allowed.
</summary>
<param name="domain" optional="true">
<summary>
N/A
</summary>
</param>
</interface>
<template name="dbus_per_userdomain_template" lineno="51">
<summary>
The per user domain template for the dbus module.
</summary>
<desc>
<p>
This template creates a derived domain which is
used for the user dbus.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<template name="dbus_system_bus_client_template" lineno="199">
<summary>
Template for creating connections to
the system DBUS.
</summary>
<param name="domain_prefix">
<summary>
The prefix of the domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
The type of the domain.
</summary>
</param>
</template>
<interface name="dbus_read_config" lineno="229">
<summary>
Read dbus configuration.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dbus_connect_system_bus" lineno="248">
<summary>
Connect to the the system DBUS
for service (acquire_svc).
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dbus_send_system_bus" lineno="267">
<summary>
Send a message on the system DBUS.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="dbus_system_bus_unconfined" lineno="286">
<summary>
Allow unconfined access to the system DBUS.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="rshd" filename="policy/modules/services/rshd.if">
<summary>Remote shell service.</summary>
<interface name="rshd_domtrans" lineno="13">
<summary>
Domain transition to rshd.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="radvd" filename="policy/modules/services/radvd.if">
<summary>IPv6 router advertisement daemon</summary>
</module>
<module name="sasl" filename="policy/modules/services/sasl.if">
<summary>SASL authentication server</summary>
<interface name="sasl_connect" lineno="13">
<summary>
Connect to SASL.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="postgresql" filename="policy/modules/services/postgresql.if">
<summary>PostgreSQL relational database</summary>
<interface name="postgresql_search_db" lineno="13">
<summary>
Allow the specified domain to search postgresql's database directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postgresql_manage_db" lineno="30">
<summary>
Allow the specified domain to manage postgresql's database.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postgresql_domtrans" lineno="50">
<summary>
Execute postgresql in the postgresql domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="postgresql_read_config" lineno="73">
<summary>
Allow the specified domain to read postgresql's etc.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postgresql_tcp_connect" lineno="94">
<summary>
Allow the specified domain to connect to postgresql with a tcp socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postgresql_stream_connect" lineno="114">
<summary>
Allow the specified domain to connect to postgresql with a unix socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="hal" filename="policy/modules/services/hal.if">
<summary>Hardware abstraction layer</summary>
<interface name="hal_domtrans" lineno="13">
<summary>
Execute hal in the hal domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hal_dgram_send" lineno="37">
<summary>
Send to hal over a unix domain
datagram socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hal_stream_connect" lineno="56">
<summary>
Send to hal over a unix domain
stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hal_dbus_send" lineno="74">
<summary>
Send a dbus message to hal.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="hal_dbus_chat" lineno="94">
<summary>
Send and receive messages from
hal over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="zebra" filename="policy/modules/services/zebra.if">
<summary>Zebra border gateway protocol network routing service</summary>
<interface name="zebra_read_config" lineno="13">
<summary>
Read the configuration files for zebra.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="ldap" filename="policy/modules/services/ldap.if">
<summary>OpenLDAP directory server</summary>
<interface name="ldap_list_db" lineno="14">
<summary>
Read the contents of the OpenLDAP
database directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ldap_read_config" lineno="32">
<summary>
Read the OpenLDAP configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ldap_use" lineno="51">
<summary>
Use LDAP over TCP connection.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="mysql" filename="policy/modules/services/mysql.if">
<summary>Policy for MySQL</summary>
<interface name="mysql_signal" lineno="13">
<summary>
Send a generic signal to MySQL.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mysql_stream_connect" lineno="31">
<summary>
Connect to MySQL using a unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mysql_read_config" lineno="51">
<summary>
Read MySQL configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mysql_search_db" lineno="74">
<summary>
Search the directories that contain MySQL
database storage.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mysql_rw_db_dirs" lineno="93">
<summary>
Read and write to the MySQL database directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mysql_manage_db_dirs" lineno="112">
<summary>
Create, read, write, and delete MySQL database directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mysql_rw_db_sockets" lineno="132">
<summary>
Read and write to the MySQL database
named socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mysql_write_log" lineno="152">
<summary>
Write to the MySQL log.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="bind" filename="policy/modules/services/bind.if">
<summary>Berkeley internet name domain DNS server.</summary>
<interface name="bind_domtrans_ndc" lineno="13">
<summary>
Execute ndc in the ndc domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_signal" lineno="36">
<summary>
Send generic signals to BIND.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_run_ndc" lineno="65">
<summary>
Execute ndc in the ndc domain, and
allow the specified role the ndc domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the bind domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the bind domain to use.
</summary>
</param>
</interface>
<interface name="bind_domtrans" lineno="85">
<summary>
Execute bind in the named domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_read_dnssec_keys" lineno="108">
<summary>
Read DNSSEC keys.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_read_config" lineno="127">
<summary>
Read BIND named configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_write_config" lineno="146">
<summary>
Write BIND named configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_manage_config_dirs" lineno="166">
<summary>
Create, read, write, and delete
BIND configuration directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_search_cache" lineno="184">
<summary>
Search the BIND cache directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_manage_cache" lineno="206">
<summary>
Create, read, write, and delete
BIND cache files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_setattr_pid_dirs" lineno="229">
<summary>
Do not audit attempts to set the attributes
of the BIND pid directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bind_read_zone" lineno="247">
<summary>
Read BIND zone files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="snmp" filename="policy/modules/services/snmp.if">
<summary>Simple network management protocol services</summary>
<interface name="snmp_tcp_connect" lineno="13">
<summary>
Use snmp over a TCP connection.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="snmp_udp_chat" lineno="33">
<summary>
Send and receive UDP traffic to SNMP
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="snmp_read_snmp_var_lib_files" lineno="52">
<summary>
Read snmpd libraries.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="squid" filename="policy/modules/services/squid.if">
<summary>Squid caching http proxy server</summary>
<interface name="squid_domtrans" lineno="13">
<summary>
Execute squid in the squid domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="squid_read_config" lineno="37">
<summary>
Read squid configuration file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="squid_read_log" lineno="56">
<summary>
Append squid logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="squid_append_log" lineno="76">
<summary>
Append squid logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="squid_manage_logs" lineno="97">
<summary>
Create, read, write, and delete
squid logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="squid_use" lineno="117">
<summary>
Use squid services by connecting over TCP.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="mailman" filename="policy/modules/services/mailman.if">
<summary>Mailman is for managing electronic mail discussion and e-newsletter lists</summary>
<template name="mailman_domain_template" lineno="19">
<summary>
The template to define a mailmain domain.
</summary>
<desc>
<p>
This template creates a domain to be used for
a new mailman daemon.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The type of daemon to be used eg, cgi would give mailman_cgi_
</summary>
</param>
</template>
<interface name="mailman_domtrans" lineno="110">
<summary>
Execute mailman in the mailman domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mailman_domtrans_cgi" lineno="134">
<summary>
Execute mailman CGI scripts in the
mailman CGI domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mailman_exec" lineno="157">
<summary>
Execute mailman in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowd access.
</summary>
</param>
</interface>
<interface name="mailman_signal_cgi" lineno="175">
<summary>
Send generic signals to the mailman cgi domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mailman_search_data" lineno="193">
<summary>
Allow domain to search data directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mailman_list_data" lineno="211">
<summary>
List the contents of mailman data directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mailman_read_data_symlinks" lineno="229">
<summary>
Allow read acces to mailman data symbolic links.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mailman_manage_log" lineno="249">
<summary>
Create, read, write, and delete
mailman logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mailman_read_archive" lineno="269">
<summary>
Allow domain to read mailman archive files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="dictd" filename="policy/modules/services/dictd.if">
<summary>Dictionary daemon</summary>
<interface name="dictd_tcp_connect" lineno="14">
<summary>
Use dictionary services by connecting
over TCP.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="privoxy" filename="policy/modules/services/privoxy.if">
<summary>Privacy enhancing web proxy.</summary>
</module>
<module name="nis" filename="policy/modules/services/nis.if">
<summary>Policy for NIS (YP) servers and clients</summary>
<interface name="nis_use_ypbind_uncond" lineno="26">
<summary>
Use the ypbind service to access NIS services
unconditionally.
</summary>
<desc>
<p>
Use the ypbind service to access NIS services
unconditionally.
</p>
<p>
This interface was added because of apache and
spamassassin, to fix a nested conditionals problem.
When that support is added, this should be removed,
and the regular	interface should be used.
</p>
</desc>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="nis_use_ypbind" lineno="75">
<summary>
Use the ypbind service to access NIS services.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="nis_domtrans_ypbind" lineno="134">
<summary>
Execute ypbind in the ypbind domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="nis_signal_ypbind" lineno="158">
<summary>
Send generic signals to ypbind.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="nis_list_var_yp" lineno="176">
<summary>
List the contents of the NIS data directory.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="nis_udp_send_ypbind" lineno="195">
<summary>
Send UDP network traffic to NIS clients.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="nis_tcp_connect_ypbind" lineno="214">
<summary>
Connect to ypbind over TCP.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="nis_read_ypbind_pid" lineno="234">
<summary>
Read ypbind pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="nis_delete_ypbind_pid" lineno="253">
<summary>
Delete ypbind pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="nis_read_ypserv_config" lineno="272">
<summary>
Read ypserv configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="telnet" filename="policy/modules/services/telnet.if">
<summary>Telnet daemon</summary>
</module>
<module name="comsat" filename="policy/modules/services/comsat.if">
<summary>Comsat, a biff server.</summary>
</module>
<module name="ssh" filename="policy/modules/services/ssh.if">
<summary>Secure shell client and server policy.</summary>
<template name="ssh_per_userdomain_template" lineno="36">
<summary>
The per user domain template for the ssh module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for ssh client sessions and user ssh agents.  A derived
type is also created to protect the user ssh keys.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<template name="ssh_server_template" lineno="422">
<summary>
The template to define a ssh server.
</summary>
<desc>
<p>
This template creates a domains to be used for
creating a ssh server.  This is typically done
to have multiple ssh servers of different sensitivities,
such as for an internal network-facing ssh server, and
a external network-facing ssh server.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the server domain (e.g., sshd
is the prefix for sshd_t).
</summary>
</param>
</template>
<interface name="ssh_sigchld" lineno="573">
<summary>
Send a SIGCHLD signal to the ssh server.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ssh_read_pipes" lineno="591">
<summary>
Read a ssh server unnamed pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ssh_dontaudit_rw_tcp_sockets" lineno="610">
<summary>
Do not audit attempts to read and write
ssh server TCP sockets.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="ssh_tcp_connect" lineno="628">
<summary>
Connect to SSH daemons over TCP sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ssh_dontaudit_read_server_keys" lineno="648">
<summary>
Read ssh server keys
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="cvs" filename="policy/modules/services/cvs.if">
<summary>Concurrent versions system</summary>
<interface name="cvs_read_data" lineno="13">
<summary>
Read the CVS data and metadata.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="ppp" filename="policy/modules/services/ppp.if">
<summary>Point to Point Protocol daemon creates links in ppp networks</summary>
<interface name="ppp_use_fds" lineno="13">
<summary>
Use PPP file discriptors.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ppp_dontaudit_use_fds" lineno="32">
<summary>
Do not audit attempts to inherit
and use PPP file discriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="ppp_sigchld" lineno="50">
<summary>
Send a SIGCHLD signal to PPP.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ppp_signal" lineno="69">
<summary>
Send a generic signal to PPP.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ppp_domtrans" lineno="87">
<summary>
Execute domain in the ppp domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ppp_run_cond" lineno="111">
<summary>
Conditionally execute ppp daemon on behalf of a user or staff type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ppp_run" lineno="134">
<summary>
Unconditionally execute ppp daemon on behalf of a user or staff type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="arpwatch" filename="policy/modules/services/arpwatch.if">
<summary>Ethernet activity monitor.</summary>
<interface name="arpwatch_search_data" lineno="13">
<summary>
Search arpwatch's data file directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="arpwatch_manage_data_files" lineno="31">
<summary>
Create arpwatch data files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="arpwatch_rw_tmp_files" lineno="50">
<summary>
Read and write arpwatch temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="arpwatch_manage_tmp_files" lineno="68">
<summary>
Read and write arpwatch temporary files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="arpwatch_dontaudit_rw_packet_sockets" lineno="87">
<summary>
Do not audit attempts to read and write
arpwatch packet sockets.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
</module>
<module name="bluetooth" filename="policy/modules/services/bluetooth.if">
<summary>Bluetooth tools and system services.</summary>
<interface name="bluetooth_read_config" lineno="13">
<summary>
Read bluetooth daemon configuration.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bluetooth_domtrans_helper" lineno="31">
<summary>
Execute bluetooth_helper in the bluetooth_helper domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="bluetooth_dbus_chat" lineno="55">
<summary>
Send and receive messages from
bluetooth over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="bluetooth_run_helper" lineno="86">
<summary>
Execute bluetooth_helper in the bluetooth_helper domain, and
allow the specified role the bluetooth_helper domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the bluetooth_helper domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the bluetooth_helper domain to use.
</summary>
</param>
</interface>
<interface name="bluetooth_dontaudit_read_helper_files" lineno="106">
<summary>
Read bluetooth helper files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="apm" filename="policy/modules/services/apm.if">
<summary>Advanced power management daemon</summary>
<interface name="apm_domtrans_client" lineno="13">
<summary>
Execute APM in the apm domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apm_use_fds" lineno="37">
<summary>
Use file descriptors for apmd.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="apm_write_pipes" lineno="55">
<summary>
Write to apmd unnamed pipes.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="apm_rw_stream_sockets" lineno="73">
<summary>
Read and write to an apm unix stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apm_append_log" lineno="91">
<summary>
Append to apm's log file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="apm_stream_connect" lineno="110">
<summary>
Connect to apmd over an unix stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="mta" filename="policy/modules/services/mta.if">
<summary>Policy common to all email tranfer agents.</summary>
<interface name="mta_stub" lineno="13">
<summary>
MTA stub interface.  No access allowed.
</summary>
<param name="domain" optional="true">
<summary>
N/A
</summary>
</param>
</interface>
<template name="mta_base_mail_template" lineno="41">
<summary>
Basic mail transfer agent domain template.
</summary>
<desc>
<p>
This template creates a derived domain which is
a email transfer agent, which sends mail on
behalf of the user.
</p>
<p>
This is the basic types and rules, common
to the system agent and user agents.
</p>
</desc>
<param name="domain_prefix">
<summary>
The prefix of the domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="mta_per_userdomain_template" lineno="182">
<summary>
The per user domain template for the mta module.
</summary>
<desc>
<p>
This template creates a derived domain which is
a email transfer agent, which sends mail on
behalf of the user.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<template name="mta_admin_template" lineno="275">
<summary>
Provide extra permissions for admin users
mail domain.
</summary>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
</template>
<interface name="mta_mailserver" lineno="316">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_sendmail_mailserver" lineno="357">
<summary>
Modified mailserver interface for
sendmail daemon use.
</summary>
<desc>
<p>
A modified MTA mail server interface for
the sendmail program.  It's design does
not fit well with policy, and using the
regular interface causes a type_transition
conflict if direct running of init scripts
is enabled.
</p>
<p>
This interface should most likely only be used
by the sendmail policy.
</p>
</desc>
<param name="domain">
<summary>
The type to be used for the mail server.
</summary>
</param>
<param name="entry_point">
<summary>
The type to be used for the domain entry point program.
</summary>
</param>
</interface>
<interface name="mta_mailserver_sender" lineno="381">
<summary>
Make a type a mailserver type used
for sending mail.
</summary>
<param name="domain">
<summary>
Mail server domain type used for sending mail.
</summary>
</param>
</interface>
<interface name="mta_mailserver_delivery" lineno="400">
<summary>
Make a type a mailserver type used
for delivering mail to local users.
</summary>
<param name="domain">
<summary>
Mail server domain type used for delivering mail.
</summary>
</param>
</interface>
<interface name="mta_mailserver_user_agent" lineno="437">
<summary>
Make a type a mailserver type used
for sending mail on behalf of local
users to the local mail spool.
</summary>
<param name="domain">
<summary>
Mail server domain type used for sending local mail.
</summary>
</param>
</interface>
<interface name="mta_send_mail" lineno="455">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_exec" lineno="478">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_read_config" lineno="496">
<summary>
Read mail server configuration.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mta_read_aliases" lineno="517">
<summary>
Read mail address aliases.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mta_etc_filetrans_aliases" lineno="537">
<summary>
Type transition files created in /etc
to the mail address aliases type.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mta_rw_aliases" lineno="549">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_dontaudit_rw_delivery_tcp_sockets" lineno="569">
<summary>
Do not audit attempts to read and write TCP
sockets of mail delivery domains.
</summary>
<param name="domain">
<summary>
Mail server domain.
</summary>
</param>
</interface>
<interface name="mta_tcp_connect_all_mailservers" lineno="587">
<summary>
Connect to all mail servers over TCP.
</summary>
<param name="domain">
<summary>
Mail server domain.
</summary>
</param>
</interface>
<interface name="mta_dontaudit_read_spool_symlinks" lineno="608">
<summary>
Do not audit attempts to read a symlink
in the mail spool.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mta_getattr_spool" lineno="620">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_dontaudit_getattr_spool_files" lineno="631">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_spool_filetrans" lineno="663">
<summary>
Create private objects in the
mail spool directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object">
<summary>
The object class of the object being created.
</summary>
</param>
</interface>
<interface name="mta_rw_spool" lineno="677">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_append_spool" lineno="698">
<summary>
Create, read, and write the mail spool.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mta_delete_spool" lineno="719">
<summary>
Delete from the mail spool.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mta_manage_spool" lineno="733">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_dontaudit_rw_queue" lineno="755">
<summary>
Do not audit attempts to read and
write the mail queue.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="mta_manage_queue" lineno="767">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</interface>
<interface name="mta_read_sendmail_bin" lineno="788">
<summary>
Read sendmail binary.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="mta_rw_user_mail_stream_sockets" lineno="807">
<summary>
Read and write unix domain stream sockets
of user mail domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="nscd" filename="policy/modules/services/nscd.if">
<summary>Name service cache daemon</summary>
<interface name="nscd_domtrans" lineno="13">
<summary>
Execute NSCD in the nscd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="nscd_socket_use" lineno="38">
<summary>
Use NSCD services by connecting using
a unix stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="nscd_shm_use" lineno="68">
<summary>
Use NSCD services by mapping the database from
an inherited NSCD file descriptor.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="nscd_read_pid" lineno="101">
<summary>
Read NSCD pid file.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="nscd_unconfined" lineno="121">
<summary>
Unconfined access to NSCD services.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="stunnel" filename="policy/modules/services/stunnel.if">
<summary>SSL Tunneling Proxy</summary>
</module>
<module name="distcc" filename="policy/modules/services/distcc.if">
<summary>Distributed compiler daemon</summary>
</module>
<module name="samba" filename="policy/modules/services/samba.if">
<summary>
SMB and CIFS client/server programs for UNIX and
name  Service  Switch  daemon for resolving names
from Windows NT servers.
</summary>
<template name="samba_per_userdomain_template" lineno="30">
<summary>
The per user domain template for the samba module.
</summary>
<desc>
<p>
This template allows smbd to manage files in
a user home directory, creating files with the
correct type.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<interface name="samba_domtrans_net" lineno="54">
<summary>
Execute samba net in the samba_net domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="samba_run_net" lineno="89">
<summary>
Execute samba net in the samba_net domain, and
allow the specified role the samba_net domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the samba_net domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the samba_net domain to use.
</summary>
</param>
</interface>
<interface name="samba_domtrans_smbmount" lineno="109">
<summary>
Execute smbmount in the smbmount domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="samba_read_config" lineno="134">
<summary>
Allow the specified domain to read
samba configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_rw_config" lineno="154">
<summary>
Allow the specified domain to read
and write samba configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_read_log" lineno="173">
<summary>
Allow the specified domain to read samba's log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_exec_log" lineno="193">
<summary>
Execute samba log in the caller domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="samba_read_secrets" lineno="212">
<summary>
Allow the specified domain to read samba's secrets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_search_var" lineno="232">
<summary>
Allow the specified domain to search
samba /var directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_rw_var_files" lineno="252">
<summary>
Allow the specified domain to
read and write samba /var files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_write_smbmount_tcp_sockets" lineno="272">
<summary>
Allow the specified domain to write to smbmount tcp sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_rw_smbmount_tcp_sockets" lineno="290">
<summary>
Allow the specified domain to read and write to smbmount tcp sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_domtrans_winbind_helper" lineno="308">
<summary>
Execute winbind_helper in the winbind_helper domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="samba_run_winbind_helper" lineno="342">
<summary>
Execute winbind_helper in the winbind_helper domain, and
allow the specified role the winbind_helper domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the winbind_helper domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the winbind_helper domain to use.
</summary>
</param>
</interface>
<interface name="samba_read_winbind_pid" lineno="362">
<summary>
Allow the specified domain to read the winbind pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="samba_stream_connect_winbind" lineno="381">
<summary>
Connect to winbind.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="cyrus" filename="policy/modules/services/cyrus.if">
<summary>Cyrus is an IMAP service intended to be run on sealed servers</summary>
<interface name="cyrus_manage_data" lineno="14">
<summary>
Allow caller to create, read, write,
and delete cyrus data files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="ftp" filename="policy/modules/services/ftp.if">
<summary>File transfer protocol service</summary>
<template name="ftp_per_userdomain_template" lineno="26">
<summary>
The per user domain template for the ftp module.
</summary>
<desc>
<p>
This template allows ftpd to manage files in
a user home directory, creating files with the
correct type.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<interface name="ftp_tcp_connect" lineno="46">
<summary>
Use ftp by connecting over TCP.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ftp_read_config" lineno="66">
<summary>
Read ftpd etc files
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ftp_check_exec" lineno="85">
<summary>
Execute FTP daemon entry point programs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="ftp_read_log" lineno="104">
<summary>
Read FTP transfer logs
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="cpucontrol" filename="policy/modules/services/cpucontrol.if">
<summary>Services for loading CPU microcode and CPU frequency scaling.</summary>
<interface name="cpucontrol_stub" lineno="13">
<summary>
CPUcontrol stub interface.  No access allowed.
</summary>
<param name="domain" optional="true">
<summary>
N/A
</summary>
</param>
</interface>
</module>
<module name="dovecot" filename="policy/modules/services/dovecot.if">
<summary>Dovecot POP and IMAP mail server</summary>
<interface name="dovecot_manage_spool" lineno="13">
<summary>
Create, read, write, and delete the dovecot spool files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="rsync" filename="policy/modules/services/rsync.if">
<summary>Fast incremental file transfer for synchronization</summary>
</module>
<module name="canna" filename="policy/modules/services/canna.if">
<summary>Canna - kana-kanji conversion server</summary>
<interface name="canna_stream_connect" lineno="13">
<summary>
Connect to Canna using a unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="cron" filename="policy/modules/services/cron.if">
<summary>Periodic execution of scheduled commands.</summary>
<template name="cron_per_userdomain_template" lineno="36">
<summary>
The per user domain template for the cron module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for running programs on behalf of the user, from cron.
A type for the user crontab is also created.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<template name="cron_admin_template" lineno="282">
<summary>
The administrative functions template for the cron module.
</summary>
<desc>
<p>
This template creates rules for administrating the cron service,
allowing the specified user to manage other user crontabs.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<interface name="cron_system_entry" lineno="325">
<summary>
Make the specified program domain accessable
from the system cron jobs.
</summary>
<param name="domain">
<summary>
The type of the process to transition to.
</summary>
</param>
<param name="entrypoint">
<summary>
The type of the file used as an entrypoint to this domain.
</summary>
</param>
</interface>
<interface name="cron_use_fds" lineno="355">
<summary>
Inherit and use a file descriptor
from the cron daemon.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_sigchld" lineno="373">
<summary>
Send a SIGCHLD signal to the cron daemon.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_read_pipes" lineno="391">
<summary>
Read a cron daemon unnamed pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_dontaudit_write_pipes" lineno="409">
<summary>
Do not audit attempts to write cron daemon unnamed pipes.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_rw_pipes" lineno="427">
<summary>
Read and write a cron daemon unnamed pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_rw_tcp_sockets" lineno="445">
<summary>
Read, and write cron daemon TCP sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_search_spool" lineno="463">
<summary>
Search the directory containing user cron tables.
</summary>
<param name="domain">
<summary>
The type of the process to performing this action.
</summary>
</param>
</interface>
<interface name="cron_anacron_domtrans_system_job" lineno="482">
<summary>
Execute APM in the apm domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_use_system_job_fds" lineno="506">
<summary>
Inherit and use a file descriptor
from system cron jobs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_write_system_job_pipes" lineno="524">
<summary>
Write a system cron job unnamed pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_rw_system_job_pipes" lineno="542">
<summary>
Read and write a system cron job unnamed pipe.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_read_system_job_tmp_files" lineno="560">
<summary>
Read temporary files from the system cron jobs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cron_dontaudit_append_system_job_tmp_files" lineno="580">
<summary>
Do not audit attempts to append temporary
files from the system cron jobs.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
</module>
<module name="tcpd" filename="policy/modules/services/tcpd.if">
<summary>Policy for TCP daemon.</summary>
<interface name="tcpd_domtrans" lineno="13">
<summary>
Execute tcpd in the tcpd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
</module>
<module name="cups" filename="policy/modules/services/cups.if">
<summary>Common UNIX printing system</summary>
<interface name="cups_domtrans" lineno="13">
<summary>
Execute cups in the cups domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="cups_dbus_chat" lineno="37">
<summary>
Send and receive messages from
cups over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cups_domtrans_config" lineno="57">
<summary>
Execute cups_config in the cups_config domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="cups_signal_config" lineno="81">
<summary>
Send generic signals to the cups
configuration daemon.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cups_dbus_chat_config" lineno="100">
<summary>
Send and receive messages from
cupsd_config over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cups_read_config" lineno="120">
<summary>
Read cups configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cups_read_rw_config" lineno="141">
<summary>
Read cups-writable configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cups_read_log" lineno="161">
<summary>
Read cups log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cups_write_log" lineno="180">
<summary>
Write cups log files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cups_stream_connect_ptal" lineno="199">
<summary>
Connect to ptal over an unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="cups_tcp_connect" lineno="220">
<summary>
Connect to cups over TCP.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="networkmanager" filename="policy/modules/services/networkmanager.if">
<summary>Manager for dynamically switching between networks.</summary>
<interface name="networkmanager_rw_udp_sockets" lineno="14">
<summary>
Read and write NetworkManager UDP sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="networkmanager_rw_packet_sockets" lineno="33">
<summary>
Read and write NetworkManager packet sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="networkmanager_rw_routing_sockets" lineno="53">
<summary>
Read and write NetworkManager netlink
routing sockets.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="networkmanager_dbus_chat" lineno="72">
<summary>
Send and receive messages from
NetworkManager over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="dbskk" filename="policy/modules/services/dbskk.if">
<summary>Dictionary server for the SKK Japanese input method system.</summary>
</module>
<module name="pegasus" filename="policy/modules/services/pegasus.if">
<summary>The Open Group Pegasus CIM/WBEM Server.</summary>
</module>
<module name="radius" filename="policy/modules/services/radius.if">
<summary>RADIUS authentication and accounting server.</summary>
<interface name="radius_use" lineno="13">
<summary>
Use radius over a UDP connection.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="spamassassin" filename="policy/modules/services/spamassassin.if">
<summary>Filter used for removing unsolicited email.</summary>
<template name="spamassassin_per_userdomain_template" lineno="36">
<summary>
The per user domain template for the spamassassin module.
</summary>
<desc>
<p>
The per user domain template for the spamassassin module.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<interface name="spamassassin_exec" lineno="343">
<summary>
Execute the standalone spamassassin
program in the caller directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="spamassassin_exec_client" lineno="363">
<summary>
Execute the spamassassin client
program in the caller directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="roundup" filename="policy/modules/services/roundup.if">
<summary>Roundup Issue Tracking System policy</summary>
</module>
<module name="ucspitcp" filename="policy/modules/services/ucspitcp.if">
<summary>ucspitcp policy</summary>
<desc>
<p>
Policy for DJB's ucspi-tcpd
</p>
</desc>
<interface name="ucspitcp_service_domain" lineno="23">
<summary>
Define a specified domain as a ucspitcp service.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="entrypoint">
<summary>
The type associated with the process program.
</summary>
</param>
</interface>
</module>
<module name="automount" filename="policy/modules/services/automount.if">
<summary>Filesystem automounter service.</summary>
<interface name="automount_domtrans" lineno="13">
<summary>
Execute automount in the automount domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="automount_exec_config" lineno="38">
<summary>
Execute automount in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="automount_dontaudit_getattr_tmp_dirs" lineno="58">
<summary>
Do not audit attempts to get the attributes
of automount temporary directories.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
</module>
<module name="lpd" filename="policy/modules/services/lpd.if">
<summary>Line printer daemon</summary>
<template name="lpd_per_userdomain_template" lineno="35">
<summary>
The per user domain template for the lpd module.
</summary>
<desc>
<p>
This template creates a derived domains which are used
for lpr printing client.
</p>
<p>
This template is invoked automatically for each user, and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<template name="lpr_admin_template" lineno="232">
<summary>
The administrative functions template for the lpd module.
</summary>
<desc>
<p>
This template creates rules for administrating the ldp service,
allowing the specified user to manage lpr files.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<interface name="lpd_domtrans_checkpc" lineno="256">
<summary>
Execute lpd in the lpd domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="lpd_run_checkpc" lineno="290">
<summary>
Execute amrecover in the lpd domain, and
allow the specified role the lpd domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the lpd domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the lpd domain to use.
</summary>
</param>
</interface>
<interface name="lpd_list_spool" lineno="310">
<summary>
List the contents of the printer spool directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="lpd_manage_spool" lineno="329">
<summary>
Create, read, write, and delete printer spool files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="lpd_read_config" lineno="351">
<summary>
List the contents of the printer spool directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="avahi" filename="policy/modules/services/avahi.if">
<summary>mDNS/DNS-SD daemon implementing Apple ZeroConf architecture</summary>
<interface name="avahi_dbus_chat" lineno="14">
<summary>
Send and receive messages from
avahi over dbus.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="procmail" filename="policy/modules/services/procmail.if">
<summary>Procmail mail delivery agent</summary>
<interface name="procmail_domtrans" lineno="13">
<summary>
Execute procmail with a domain transition.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="procmail_exec" lineno="38">
<summary>
Execute procmail in the caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="postfix" filename="policy/modules/services/postfix.if">
<summary>Postfix email server</summary>
<interface name="postfix_stub" lineno="13">
<summary>
Postfix stub interface.  No access allowed.
</summary>
<param name="domain" optional="true">
<summary>
N/A
</summary>
</param>
</interface>
<template name="postfix_domain_template" lineno="19">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</template>
<template name="postfix_server_domain_template" lineno="103">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</template>
<template name="postfix_user_domain_template" lineno="137">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</template>
<template name="postfix_per_userdomain_template" lineno="157">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</template>
<template name="postfix_public_domain_template" lineno="170">
<summary>
Summary is missing!
</summary>
<param name="?">
<summary>
Parameter descriptions are missing!
</summary>
</param>
</template>
<interface name="postfix_read_config" lineno="186">
<summary>
Read postfix configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postfix_config_filetrans" lineno="218">
<summary>
Create files with the specified type in
the postfix configuration directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="private type">
<summary>
The type of the object to be created.
</summary>
</param>
<param name="object">
<summary>
The object class of the object being created.
</summary>
</param>
</interface>
<interface name="postfix_dontaudit_rw_local_tcp_sockets" lineno="240">
<summary>
Do not audit attempts to read and
write postfix local delivery
TCP sockets.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="postfix_dontaudit_use_fds" lineno="260">
<summary>
Do not audit attempts to use
postfix master process file
file descriptors.
</summary>
<param name="domain">
<summary>
Domain to not audit.
</summary>
</param>
</interface>
<interface name="postfix_domtrans_map" lineno="278">
<summary>
Execute postfix_map in the postfix_map domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postfix_run_map" lineno="312">
<summary>
Execute postfix_map in the postfix_map domain, and
allow the specified role the postfix_map domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="role">
<summary>
The role to be allowed the postfix_map domain.
</summary>
</param>
<param name="terminal">
<summary>
The type of the terminal allow the postfix_map domain to use.
</summary>
</param>
</interface>
<interface name="postfix_domtrans_master" lineno="333">
<summary>
Execute the master postfix program in the
postfix_master domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postfix_exec_master" lineno="357">
<summary>
Execute the master postfix program in the
caller domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postfix_search_spool" lineno="375">
<summary>
Search postfix mail spool directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postfix_list_spool" lineno="394">
<summary>
List postfix mail spool directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="postfix_domtrans_user_mail_handler" lineno="414">
<summary>
Execute postfix user mail programs
in their respective domains.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="rpc" filename="policy/modules/services/rpc.if">
<summary>Remote Procedure Call Daemon for managment of network based process communication</summary>
<template name="rpc_domain_template" lineno="19">
<summary>
The template to define a rpc domain.
</summary>
<desc>
<p>
This template creates a domain to be used for
a new rpc daemon.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The type of daemon to be used.
</summary>
</param>
</template>
<interface name="rpc_udp_send" lineno="131">
<summary>
Send UDP network traffic to rpc and recieve UDP traffic from rpc.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpc_dontaudit_getattr_exports" lineno="151">
<summary>
Do not audit attempts to get the attributes
of the NFS export file.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpc_read_exports" lineno="169">
<summary>
Allow read access to exports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpc_write_exports" lineno="187">
<summary>
Allow write access to exports.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpc_domtrans_nfsd" lineno="205">
<summary>
Execute domain in nfsd domain.
</summary>
<param name="domain">
<summary>
The type of the process performing this action.
</summary>
</param>
</interface>
<interface name="rpc_manage_nfs_rw_content" lineno="228">
<summary>
Allow domain to create read and write NFS directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="rpc_manage_nfs_ro_content" lineno="248">
<summary>
Allow domain to create read and write NFS directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="rpc_udp_rw_nfs_sockets" lineno="268">
<summary>
Allow domain to read and write to an NFS UDP socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="rpc_udp_send_nfs" lineno="287">
<summary>
Send UDP traffic to NFSd.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="rpc_search_nfs_state_data" lineno="306">
<summary>
Search NFS state data in /var/lib/nfs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="xfs" filename="policy/modules/services/xfs.if">
<summary>X Windows Font Server </summary>
<interface name="xfs_read_sockets" lineno="13">
<summary>
Read a X font server named socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xfs_stream_connect" lineno="34">
<summary>
Connect to a X font server over
a unix domain stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="rdisc" filename="policy/modules/services/rdisc.if">
<summary>Network router discovery daemon</summary>
</module>
<module name="timidity" filename="policy/modules/services/timidity.if">
<summary>MIDI to WAV converter and player configured as a service</summary>
</module>
<module name="irqbalance" filename="policy/modules/services/irqbalance.if">
<summary>IRQ balancing daemon</summary>
</module>
<module name="i18n_input" filename="policy/modules/services/i18n_input.if">
<summary>IIIMF htt server</summary>
<interface name="i18n_use" lineno="13">
<summary>
Use i18n_input over a TCP connection.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="smartmon" filename="policy/modules/services/smartmon.if">
<summary>Smart disk monitoring daemon policy</summary>
<interface name="smartmon_read_tmp_files" lineno="13">
<summary>
Allow caller to read smartmon temporary files.
</summary>
<param name="domain">
<summary>
The process type reading the temporary files.
</summary>
</param>
</interface>
</module>
<module name="openct" filename="policy/modules/services/openct.if">
<summary>Service for handling smart card readers.</summary>
</module>
<module name="publicfile" filename="policy/modules/services/publicfile.if">
<summary>publicfile supplies files to the public through HTTP and FTP</summary>
</module>
<module name="sysstat" filename="policy/modules/services/sysstat.if">
<summary>Policy for sysstat. Reports on various system states</summary>
<interface name="sysstat_manage_log" lineno="13">
<summary>
Manage sysstat logs.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
</module>
<module name="xserver" filename="policy/modules/services/xserver.if">
<summary>X Windows Server</summary>
<template name="xserver_common_domain_template" lineno="15">
<summary>
Template to create types and rules common to
all X server domains.
</summary>
<param name="prefix">
<summary>
The prefix of the domain (e.g., user
is the prefix for user_t).
</summary>
</param>
</template>
<template name="xserver_per_userdomain_template" lineno="222">
<summary>
The per user domain template for the xserver module.
</summary>
<desc>
<p>
Define a derived domain for the X server when executed
by a user domain (e.g. via startx).  See the xdm module
if using an X Display Manager.
</p>
<p>
This is invoked automatically for each user and
generally does not need to be invoked directly
by policy writers.
</p>
</desc>
<param name="prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="user_domain">
<summary>
The type of the user domain.
</summary>
</param>
<param name="user_role">
<summary>
The role associated with the user domain.
</summary>
</param>
</template>
<template name="xserver_ro_session_template" lineno="451">
<summary>
Template for creating sessions on a
prefix X server, with read-only
access to the X server shared
memory segments.
</summary>
<param name="prefix">
<summary>
The prefix of the domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="tmpfs_type">
<summary>
The type of the domain SYSV tmpfs files.
</summary>
</param>
</template>
<template name="xserver_rw_session_template" lineno="498">
<summary>
Template for creating sessions on a
prefix X server, with read and write
access to the X server shared
memory segments.
</summary>
<param name="prefix">
<summary>
The prefix of the domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="tmpfs_type">
<summary>
The type of the domain SYSV tmpfs files.
</summary>
</param>
</template>
<template name="xserver_user_client_template" lineno="530">
<summary>
Template for creating full client sessions
on a user X server.
</summary>
<param name="prefix">
<summary>
The prefix of the domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="tmpfs_type">
<summary>
The type of the domain SYSV tmpfs files.
</summary>
</param>
</template>
<template name="xserver_domtrans_user_xauth" lineno="606">
<summary>
Transition to a user Xauthority domain.
</summary>
<desc>
<p>
Transition to a user Xauthority domain.
</p>
<p>
This is a templated interface, and should only
be called from a per-userdomain template.
</p>
</desc>
<param name="userdomain_prefix">
<summary>
The prefix of the user domain (e.g., user
is the prefix for user_t).
</summary>
</param>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</template>
<interface name="xserver_stream_connect_xdm" lineno="629">
<summary>
Connect to XDM over a unix domain
stream socket.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xserver_read_xdm_rw_config" lineno="647">
<summary>
Read xdm-writable configuration files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xserver_setattr_xdm_tmp_dirs" lineno="666">
<summary>
Set the attributes of XDM temporary directories.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xserver_create_xdm_tmp_sockets" lineno="685">
<summary>
Create a named socket in a XDM
temporary directory.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xserver_read_xdm_pid" lineno="705">
<summary>
Read XDM pid files.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xserver_domtrans_xdm_xserver" lineno="724">
<summary>
Execute the X server in the XDM X server domain.
</summary>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
</interface>
<interface name="xserver_xsession_entry_type" lineno="747">
<summary>
Make an X session script an entrypoint for the specified domain.
</summary>
<param name="domain">
<summary>
The domain for which the shell is an entrypoint.
</summary>
</param>
</interface>
<interface name="xserver_xsession_spec_domtrans" lineno="784">
<summary>
Execute an X session in the target domain.  This
is an explicit transition, requiring the
caller to use setexeccon().
</summary>
<desc>
<p>
Execute an Xsession in the target domain.  This
is an explicit transition, requiring the
caller to use setexeccon().
</p>
<p>
No interprocess communication (signals, pipes,
etc.) is provided by this interface since
the domains are not owned by this module.
</p>
</desc>
<param name="domain">
<summary>
Domain allowed access.
</summary>
</param>
<param name="target_domain">
<summary>
The type of the shell process.
</summary>
</param>
</interface>
<interface name="xserver_dontaudit_write_log" lineno="803">
<summary>
Do not audit attempts to write the X server
log files.
</summary>
<param name="domain">
<summary>
Domain to not audit
</summary>
</param>
</interface>
<interface name="xserver_delete_log" lineno="822">
<summary>
Do not audit attempts to write the X server
log files.
</summary>
<param name="domain">
<summary>
Domain to not audit
</summary>
</param>
</interface>
</module>
<module name="fetchmail" filename="policy/modules/services/fetchmail.if">
<summary>Remote-mail retrieval and forwarding utility</summary>
</module>
<module name="slrnpull" filename="policy/modules/services/slrnpull.if">
<summary>Service for downloading news feeds the slrn newsreader.</summary>
<interface name="slrnpull_search_spool" lineno="13">
<summary>
Allow the domain to search slrnpull spools.
</summary>
<param name="pty_type">
<summary>
domain allowed access
</summary>
</param>
</interface>
<interface name="slrnpull_manage_spool" lineno="33">
<summary>
Allow the domain to create, read,
write, and delete slrnpull spools.
</summary>
<param name="pty_type">
<summary>
domain allowed access
</summary>
</param>
</interface>
</module>
<module name="djbdns" filename="policy/modules/services/djbdns.if">
<summary>small and secure DNS daemon</summary>
<template name="djbdns_daemontools_domain_template" lineno="14">
<summary>
Create a set of derived types for djbdns
components that are directly supervised by daemontools.
</summary>
<param name="prefix">
<summary>
The prefix to be used for deriving type names.
</summary>
</param>
</template>
</module>
</layer>
<tunable name="allow_cvs_read_shadow" dftval="false">
<desc>
<p>
Allow cvs daemon to read shadow
</p>
</desc>
</tunable>
<tunable name="allow_execheap" dftval="false">
<desc>
<p>
Allow making the heap executable.
</p>
</desc>
</tunable>
<tunable name="allow_execmem" dftval="false">
<desc>
<p>
Allow making anonymous memory executable, e.g.
for runtime-code generation or executable stack.
</p>
</desc>
</tunable>
<tunable name="allow_execmod" dftval="false">
<desc>
<p>
Allow making a modified private file
mapping executable (text relocation).
</p>
</desc>
</tunable>
<tunable name="allow_execstack" dftval="false">
<desc>
<p>
Allow making the stack executable via mprotect.
Also requires allow_execmem.
</p>
</desc>
</tunable>
<tunable name="allow_ftpd_anon_write" dftval="false">
<desc>
<p>
Allow ftp servers to modify public files
used for public file transfer services.
</p>
</desc>
</tunable>
<tunable name="allow_gssd_read_tmp" dftval="true">
<desc>
<p>
Allow gssd to read temp directory.
</p>
</desc>
</tunable>
<tunable name="allow_httpd_anon_write" dftval="false">
<desc>
<p>
Allow Apache to modify public files
used for public file transfer services.
</p>
</desc>
</tunable>
<tunable name="allow_java_execstack" dftval="false">
<desc>
<p>
Allow java executable stack
</p>
</desc>
</tunable>
<tunable name="allow_kerberos" dftval="false">
<desc>
<p>
Allow system to run with kerberos
</p>
</desc>
</tunable>
<tunable name="allow_rsync_anon_write" dftval="false">
<desc>
<p>
Allow rsync to modify public files
used for public file transfer services.
</p>
</desc>
</tunable>
<tunable name="allow_saslauthd_read_shadow" dftval="false">
<desc>
<p>
Allow sasl to read shadow
</p>
</desc>
</tunable>
<tunable name="allow_smbd_anon_write" dftval="false">
<desc>
<p>
Allow samba to modify public files
used for public file transfer services.
</p>
</desc>
</tunable>
<tunable name="allow_ptrace" dftval="false">
<desc>
<p>
Allow sysadm to ptrace all processes
</p>
</desc>
</tunable>
<tunable name="allow_ypbind" dftval="false">
<desc>
<p>
Allow system to run with NIS
</p>
</desc>
</tunable>
<tunable name="fcron_crond" dftval="false">
<desc>
<p>
Enable extra rules in the cron domain
to support fcron.
</p>
</desc>
</tunable>
<tunable name="ftp_home_dir" dftval="false">
<desc>
<p>
Allow ftp to read and write files in the user home directories
</p>
</desc>
</tunable>
<tunable name="ftpd_is_daemon" dftval="false">
<desc>
<p>
Allow ftpd to run directly without inetd
</p>
</desc>
</tunable>
<tunable name="httpd_builtin_scripting" dftval="false">
<desc>
<p>
Allow httpd to use built in scripting (usually php)
</p>
</desc>
</tunable>
<tunable name="httpd_can_network_connect" dftval="false">
<desc>
<p>
Allow http daemon to tcp connect
</p>
</desc>
</tunable>
<tunable name="httpd_can_network_connect_db" dftval="false">
<desc>
<p>
Allow httpd to connect to mysql/posgresql
</p>
</desc>
</tunable>
<tunable name="httpd_can_network_relay" dftval="false">
<desc>
<p>
Allow httpd to act as a relay
</p>
</desc>
</tunable>
<tunable name="httpd_enable_cgi" dftval="false">
<desc>
<p>
Allow httpd cgi support
</p>
</desc>
</tunable>
<tunable name="httpd_enable_ftp_server" dftval="false">
<desc>
<p>
Allow httpd to act as a FTP server by
listening on the ftp port.
</p>
</desc>
</tunable>
<tunable name="httpd_enable_homedirs" dftval="false">
<desc>
<p>
Allow httpd to read home directories
</p>
</desc>
</tunable>
<tunable name="httpd_ssi_exec" dftval="false">
<desc>
<p>
Run SSI execs in system CGI script domain.
</p>
</desc>
</tunable>
<tunable name="httpd_tty_comm" dftval="false">
<desc>
<p>
Allow http daemon to communicate with the TTY
</p>
</desc>
</tunable>
<tunable name="httpd_unified" dftval="false">
<desc>
<p>
Run CGI in the main httpd domain
</p>
</desc>
</tunable>
<tunable name="named_write_master_zones" dftval="false">
<desc>
<p>
Allow BIND to write the master zone files.
Generally this is used for dynamic DNS.
</p>
</desc>
</tunable>
<tunable name="nfs_export_all_rw" dftval="false">
<desc>
<p>
Allow nfs to be exported read/write.
</p>
</desc>
</tunable>
<tunable name="nfs_export_all_ro" dftval="false">
<desc>
<p>
Allow nfs to be exported read only
</p>
</desc>
</tunable>
<tunable name="pppd_can_insmod" dftval="false">
<desc>
<p>
Allow pppd to load kernel modules for certain modems
</p>
</desc>
</tunable>
<tunable name="read_default_t" dftval="false">
<desc>
<p>
Allow reading of default_t files.
</p>
</desc>
</tunable>
<tunable name="run_ssh_inetd" dftval="false">
<desc>
<p>
Allow ssh to run from inetd instead of as a daemon.
</p>
</desc>
</tunable>
<tunable name="samba_enable_home_dirs" dftval="false">
<desc>
<p>
Allow samba to export user home directories.
</p>
</desc>
</tunable>
<tunable name="spamassasin_can_network" dftval="false">
<desc>
<p>
Allow spamassassin to do DNS lookups
</p>
</desc>
</tunable>
<tunable name="squid_connect_any" dftval="false">
<desc>
<p>
Allow squid to connect to all ports, not just
HTTP, FTP, and Gopher ports.
</p>
</desc>
</tunable>
<tunable name="ssh_sysadm_login" dftval="false">
<desc>
<p>
Allow ssh logins as sysadm_r:sysadm_t
</p>
</desc>
</tunable>
<tunable name="stunnel_is_daemon" dftval="false">
<desc>
<p>
Configure stunnel to be a standalone daemon or
inetd service.
</p>
</desc>
</tunable>
<tunable name="use_nfs_home_dirs" dftval="false">
<desc>
<p>
Support NFS home directories
</p>
</desc>
</tunable>
<tunable name="use_samba_home_dirs" dftval="false">
<desc>
<p>
Support SAMBA home directories
</p>
</desc>
</tunable>
<tunable name="user_ping" dftval="false">
<desc>
<p>
Control users use of ping and traceroute
</p>
</desc>
</tunable>
<tunable name="allow_gpg_execstack" dftval="false">
<desc>
<p>
Allow gpg executable stack
</p>
</desc>
</tunable>
<tunable name="allow_ssh_keysign" dftval="false">
<desc>
<p>
allow host key based authentication
</p>
</desc>
</tunable>
<tunable name="allow_user_mysql_connect" dftval="false">
<desc>
<p>
Allow users to connect to mysql
</p>
</desc>
</tunable>
<tunable name="allow_write_xshm" dftval="false">
<desc>
<p>
Allows clients to write to the X server shared
memory segments.
</p>
</desc>
</tunable>
<tunable name="cdrecord_read_content" dftval="false">
<desc>
<p>
Allow cdrecord to read various content.
nfs, samba, removable devices, user temp
and untrusted content files
</p>
</desc>
</tunable>
<tunable name="cron_can_relabel" dftval="false">
<desc>
<p>
Allow system cron jobs to relabel filesystem
for restoring file contexts.
</p>
</desc>
</tunable>
<tunable name="pppd_for_user" dftval="false">
<desc>
<p>
Allow pppd to be run for a regular user
</p>
</desc>
</tunable>
<tunable name="read_untrusted_content" dftval="false">
<desc>
<p>
Allow applications to read untrusted content
If this is disallowed, Internet content has
to be manually relabeled for read access to be granted
</p>
</desc>
</tunable>
<tunable name="spamassassin_can_network" dftval="false">
<desc>
<p>
Allow user spamassassin clients to use the network.
</p>
</desc>
</tunable>
<tunable name="staff_read_sysadm_file" dftval="false">
<desc>
<p>
Allow staff_r users to search the sysadm home
dir and read files (such as ~/.bashrc)
</p>
</desc>
</tunable>
<tunable name="user_direct_mouse" dftval="false">
<desc>
<p>
Allow regular users direct mouse access
</p>
</desc>
</tunable>
<tunable name="user_dmesg" dftval="false">
<desc>
<p>
Allow users to read system messages.
</p>
</desc>
</tunable>
<tunable name="user_net_control" dftval="false">
<desc>
<p>
Allow users to control network interfaces
(also needs USERCTL=true)
</p>
</desc>
</tunable>
<tunable name="user_rw_noexattrfile" dftval="false">
<desc>
<p>
Allow user to r/w files on filesystems
that do not have extended attributes (FAT, CDROM, FLOPPY)
</p>
</desc>
</tunable>
<tunable name="user_rw_usb" dftval="false">
<desc>
<p>
Allow users to rw usb devices
</p>
</desc>
</tunable>
<tunable name="user_tcp_server" dftval="false">
<desc>
<p>
Allow users to run TCP servers (bind to ports and accept connection from
the same domain and outside users)  disabling this forces FTP passive mode
and may change other protocols.
</p>
</desc>
</tunable>
<tunable name="user_ttyfile_stat" dftval="false">
<desc>
<p>
Allow w to display everyone
</p>
</desc>
</tunable>
<tunable name="write_untrusted_content" dftval="false">
<desc>
<p>
Allow applications to write untrusted content
If this is disallowed, no Internet content
will be stored.
</p>
</desc>
</tunable>
<tunable name="xdm_sysadm_login" dftval="false">
<desc>
<p>
Allow xdm logins as sysadm
</p>
</desc>
</tunable>
<tunable name="spamd_enable_home_dirs" dftval="true">
<desc>
<p>
Allow spammd to read/write user home directories.
</p>
</desc>
</tunable>
<bool name="secure_mode" dftval="false">
<desc>
<p>
Enabling secure mode disallows programs, such as
newrole, from transitioning to administrative
user domains.
</p>
</desc>
</bool>
<bool name="secure_mode_insmod" dftval="false">
<desc>
<p>
Disable transitions to insmod.
</p>
</desc>
</bool>
<bool name="secure_mode_policyload" dftval="false">
<desc>
<p>
boolean to determine whether the system permits loading policy, setting
enforcing mode, and changing boolean values.  Set this to true and you
have to reboot to set it back
</p>
</desc>
</bool>
</policy>
